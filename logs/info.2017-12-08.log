Starting Application on LuoRong with PID 22696 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@d986c8c: startup date [Fri Dec 08 23:28:09 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$35a162e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 6974 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5fa3d305
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@ad6f48a{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.Result
		sw.entity.RiskLevel
		sw.entity.Threat
		sw.entity.User
		sw.entity.UserGroup
		sw.entity.Weekness]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2b2ff770
Adding type registration boolean -> org.hibernate.type.BooleanType@2b2ff770
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b2ff770
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@607aade4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1f274419
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cba475d
Adding type registration byte -> org.hibernate.type.ByteType@1c12166c
Adding type registration byte -> org.hibernate.type.ByteType@1c12166c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1c12166c
Adding type registration character -> org.hibernate.type.CharacterType@3d6e0ece
Adding type registration char -> org.hibernate.type.CharacterType@3d6e0ece
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d6e0ece
Adding type registration short -> org.hibernate.type.ShortType@51d03877
Adding type registration short -> org.hibernate.type.ShortType@51d03877
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51d03877
Adding type registration integer -> org.hibernate.type.IntegerType@15b4cf91
Adding type registration int -> org.hibernate.type.IntegerType@15b4cf91
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@15b4cf91
Adding type registration long -> org.hibernate.type.LongType@43d08bcc
Adding type registration long -> org.hibernate.type.LongType@43d08bcc
Adding type registration java.lang.Long -> org.hibernate.type.LongType@43d08bcc
Adding type registration float -> org.hibernate.type.FloatType@4a563270
Adding type registration float -> org.hibernate.type.FloatType@4a563270
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a563270
Adding type registration double -> org.hibernate.type.DoubleType@fb0e373
Adding type registration double -> org.hibernate.type.DoubleType@fb0e373
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@fb0e373
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@516cf43f
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@516cf43f
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b393fe5
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b393fe5
Adding type registration string -> org.hibernate.type.StringType@783cc933
Adding type registration java.lang.String -> org.hibernate.type.StringType@783cc933
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c9ae44d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58d8f4a5
Adding type registration url -> org.hibernate.type.UrlType@29d5e891
Adding type registration java.net.URL -> org.hibernate.type.UrlType@29d5e891
Adding type registration date -> org.hibernate.type.DateType@195d9c2e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@195d9c2e
Adding type registration time -> org.hibernate.type.TimeType@467dfb89
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@467dfb89
Adding type registration timestamp -> org.hibernate.type.TimestampType@55a0d020
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55a0d020
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55a0d020
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6be219f2
Adding type registration calendar -> org.hibernate.type.CalendarType@7bd27eb4
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7bd27eb4
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7bd27eb4
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@249b6d93
Adding type registration locale -> org.hibernate.type.LocaleType@71ef46a3
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71ef46a3
Adding type registration currency -> org.hibernate.type.CurrencyType@182c9288
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@182c9288
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7597f3fc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7597f3fc
Adding type registration class -> org.hibernate.type.ClassType@2e6e216a
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e6e216a
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f2f178f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f2f178f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18238ad8
Adding type registration binary -> org.hibernate.type.BinaryType@6213bd4a
Adding type registration byte[] -> org.hibernate.type.BinaryType@6213bd4a
Adding type registration [B -> org.hibernate.type.BinaryType@6213bd4a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30f61760
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30f61760
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30f61760
Adding type registration row_version -> org.hibernate.type.RowVersionType@4fd8f50c
Adding type registration image -> org.hibernate.type.ImageType@1ea1b431
Adding type registration characters -> org.hibernate.type.CharArrayType@70df82db
Adding type registration char[] -> org.hibernate.type.CharArrayType@70df82db
Adding type registration [C -> org.hibernate.type.CharArrayType@70df82db
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3fe6aaa4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3fe6aaa4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3fe6aaa4
Adding type registration text -> org.hibernate.type.TextType@1d17c436
Adding type registration ntext -> org.hibernate.type.NTextType@52ecd273
Adding type registration blob -> org.hibernate.type.BlobType@62613fed
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62613fed
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ed410a0
Adding type registration clob -> org.hibernate.type.ClobType@5f9cc54a
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f9cc54a
Adding type registration nclob -> org.hibernate.type.NClobType@3f3c7273
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3f3c7273
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7476a362
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6323920a
Adding type registration serializable -> org.hibernate.type.SerializableType@528f412c
Adding type registration object -> org.hibernate.type.ObjectType@337ce949
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@337ce949
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@473e2760
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@13dcb86f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@155b10ab
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a1ed67
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3712cf14
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@417b0659
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c688895
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ac96aa
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Threat
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Threat
Bind entity sw.entity.Threat on table t_threat
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='asset_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=asset, insertable=true, updatable=true, unique=false}
Building property asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=frequency, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property frequency with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:frequency]
building SimpleValue for frequency
Building property frequency
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=threat_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property threatName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:threatName]
building SimpleValue for threatName
Building property threatName
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property assetId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:assetId]
building SimpleValue for assetId
Building property assetId
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=availability, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property availability with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:availability]
building SimpleValue for availability
Building property availability
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=confidentiality, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property confidentiality with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:confidentiality]
building SimpleValue for confidentiality
Building property confidentiality
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=integrity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property integrity with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:integrity]
building SimpleValue for integrity
Building property integrity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding entity from annotated class: sw.entity.Weekness
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Weekness
Bind entity sw.entity.Weekness on table t_weekness
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Weekness:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Weekness:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=severity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property severity with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Weekness:severity]
building SimpleValue for severity
Building property severity
Binding column: Ejb3JoinColumn{logicalColumnName='thread_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=thread, insertable=true, updatable=true, unique=false}
Building property thread
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.Result
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Result
Bind entity sw.entity.Result on table t_result
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Result:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=is_accept, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isAccept with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Result:isAccept]
building SimpleValue for isAccept
Building property isAccept
Binding column: Ejb3JoinColumn{logicalColumnName='ris_Lev_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=risk_level, insertable=true, updatable=true, unique=false}
Building property riskLevel
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=risk_value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property riskValue with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Result:riskValue]
building SimpleValue for riskValue
Building property riskValue
Binding column: Ejb3JoinColumn{logicalColumnName='weekness_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=weekness, insertable=true, updatable=true, unique=false}
Building property weekness
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.RiskLevel
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name RiskLevel
Bind entity sw.entity.RiskLevel on table t_risk_level
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=max_value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property maxValue with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:maxValue]
building SimpleValue for maxValue
Building property maxValue
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=min_value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property minValue with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:minValue]
building SimpleValue for minValue
Building property minValue
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=import_excel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importExcel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:importExcel]
building SimpleValue for importExcel
Building property importExcel
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Starting fillSimpleValue for id
Starting fillSimpleValue for frequency
Starting fillSimpleValue for threatName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for assetId
Starting fillSimpleValue for availability
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for confidentiality
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for integrity
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for severity
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for isAccept
Starting fillSimpleValue for riskValue
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for description
Starting fillSimpleValue for maxValue
Starting fillSimpleValue for minValue
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for importExcel
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: @OneToOne or @ManyToOne on sw.entity.Weekness.thread references an unknown entity: java.lang.Thread


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 22568 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@405c9105: startup date [Fri Dec 08 23:31:54 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e0eeea04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4019 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@90f959f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@53ed6080{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.Result
		sw.entity.RiskLevel
		sw.entity.Threat
		sw.entity.User
		sw.entity.UserGroup
		sw.entity.Weekness]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@3b608707
Adding type registration boolean -> org.hibernate.type.BooleanType@3b608707
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b608707
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ef2c440
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6a77591c
Adding type registration yes_no -> org.hibernate.type.YesNoType@6d3af374
Adding type registration byte -> org.hibernate.type.ByteType@27dbc17a
Adding type registration byte -> org.hibernate.type.ByteType@27dbc17a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@27dbc17a
Adding type registration character -> org.hibernate.type.CharacterType@3fe53f06
Adding type registration char -> org.hibernate.type.CharacterType@3fe53f06
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3fe53f06
Adding type registration short -> org.hibernate.type.ShortType@131543e6
Adding type registration short -> org.hibernate.type.ShortType@131543e6
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@131543e6
Adding type registration integer -> org.hibernate.type.IntegerType@be6a15f
Adding type registration int -> org.hibernate.type.IntegerType@be6a15f
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@be6a15f
Adding type registration long -> org.hibernate.type.LongType@19825afd
Adding type registration long -> org.hibernate.type.LongType@19825afd
Adding type registration java.lang.Long -> org.hibernate.type.LongType@19825afd
Adding type registration float -> org.hibernate.type.FloatType@78b69796
Adding type registration float -> org.hibernate.type.FloatType@78b69796
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@78b69796
Adding type registration double -> org.hibernate.type.DoubleType@336eff13
Adding type registration double -> org.hibernate.type.DoubleType@336eff13
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@336eff13
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16cc3671
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16cc3671
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25c74ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25c74ed
Adding type registration string -> org.hibernate.type.StringType@669d2a34
Adding type registration java.lang.String -> org.hibernate.type.StringType@669d2a34
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@419a80f8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5315bcee
Adding type registration url -> org.hibernate.type.UrlType@567535f5
Adding type registration java.net.URL -> org.hibernate.type.UrlType@567535f5
Adding type registration date -> org.hibernate.type.DateType@627346c
Adding type registration java.sql.Date -> org.hibernate.type.DateType@627346c
Adding type registration time -> org.hibernate.type.TimeType@6607e103
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6607e103
Adding type registration timestamp -> org.hibernate.type.TimestampType@6ad00057
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ad00057
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ad00057
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@539c3d78
Adding type registration calendar -> org.hibernate.type.CalendarType@66a2040c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66a2040c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66a2040c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d12a1f4
Adding type registration locale -> org.hibernate.type.LocaleType@116f02d6
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@116f02d6
Adding type registration currency -> org.hibernate.type.CurrencyType@4bfc9d97
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4bfc9d97
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f3f10ea
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f3f10ea
Adding type registration class -> org.hibernate.type.ClassType@37520ae3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37520ae3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@34f5bf04
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@34f5bf04
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@cf45c27
Adding type registration binary -> org.hibernate.type.BinaryType@455e44d4
Adding type registration byte[] -> org.hibernate.type.BinaryType@455e44d4
Adding type registration [B -> org.hibernate.type.BinaryType@455e44d4
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@32164cee
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@32164cee
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@32164cee
Adding type registration row_version -> org.hibernate.type.RowVersionType@3c0342ee
Adding type registration image -> org.hibernate.type.ImageType@7a0d7969
Adding type registration characters -> org.hibernate.type.CharArrayType@72ee37ef
Adding type registration char[] -> org.hibernate.type.CharArrayType@72ee37ef
Adding type registration [C -> org.hibernate.type.CharArrayType@72ee37ef
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30ed996d
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30ed996d
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30ed996d
Adding type registration text -> org.hibernate.type.TextType@37267fff
Adding type registration ntext -> org.hibernate.type.NTextType@248f63c1
Adding type registration blob -> org.hibernate.type.BlobType@1633638e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1633638e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5b4a43e4
Adding type registration clob -> org.hibernate.type.ClobType@68a6c954
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@68a6c954
Adding type registration nclob -> org.hibernate.type.NClobType@5e9d8a53
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e9d8a53
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31f9174c
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@381b3b0c
Adding type registration serializable -> org.hibernate.type.SerializableType@1ee0e53b
Adding type registration object -> org.hibernate.type.ObjectType@a4ced2
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a4ced2
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d371249
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2bc38f63
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@740cc463
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@d48052c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@38d8eb96
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@fd7d379
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d6a213c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@50c636d8
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Threat
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Threat
Bind entity sw.entity.Threat on table t_threat
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='asset_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=asset, insertable=true, updatable=true, unique=false}
Building property asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=frequency, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property frequency with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:frequency]
building SimpleValue for frequency
Building property frequency
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=threat_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property threatName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Threat:threatName]
building SimpleValue for threatName
Building property threatName
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property assetId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:assetId]
building SimpleValue for assetId
Building property assetId
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=availability, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property availability with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:availability]
building SimpleValue for availability
Building property availability
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=confidentiality, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property confidentiality with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:confidentiality]
building SimpleValue for confidentiality
Building property confidentiality
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=integrity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property integrity with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:integrity]
building SimpleValue for integrity
Building property integrity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding entity from annotated class: sw.entity.Weekness
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Weekness
Bind entity sw.entity.Weekness on table t_weekness
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Weekness:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Weekness:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=severity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property severity with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Weekness:severity]
building SimpleValue for severity
Building property severity
Binding column: Ejb3JoinColumn{logicalColumnName='thread_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=thread, insertable=true, updatable=true, unique=false}
Building property thread
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.Result
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Result
Bind entity sw.entity.Result on table t_result
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Result:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=is_accept, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isAccept with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Result:isAccept]
building SimpleValue for isAccept
Building property isAccept
Binding column: Ejb3JoinColumn{logicalColumnName='ris_Lev_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=risk_level, insertable=true, updatable=true, unique=false}
Building property riskLevel
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=risk_value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property riskValue with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Result:riskValue]
building SimpleValue for riskValue
Building property riskValue
Binding column: Ejb3JoinColumn{logicalColumnName='weekness_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=weekness, insertable=true, updatable=true, unique=false}
Building property weekness
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.RiskLevel
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name RiskLevel
Bind entity sw.entity.RiskLevel on table t_risk_level
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=max_value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property maxValue with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:maxValue]
building SimpleValue for maxValue
Building property maxValue
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=min_value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property minValue with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:minValue]
building SimpleValue for minValue
Building property minValue
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=import_excel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importExcel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:importExcel]
building SimpleValue for importExcel
Building property importExcel
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Starting fillSimpleValue for id
Starting fillSimpleValue for frequency
Starting fillSimpleValue for threatName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for assetId
Starting fillSimpleValue for availability
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for confidentiality
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for integrity
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for severity
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for isAccept
Starting fillSimpleValue for riskValue
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for description
Starting fillSimpleValue for maxValue
Starting fillSimpleValue for minValue
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for importExcel
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: @OneToOne or @ManyToOne on sw.entity.Weekness.thread references an unknown entity: java.lang.Thread


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 23596 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79f57aa3: startup date [Fri Dec 08 23:33:46 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c42cd09e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4264 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5c2e38f8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@553ba8f8{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Asset
		sw.entity.AssetType
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.ReferenceFile
		sw.entity.Result
		sw.entity.RiskLevel
		sw.entity.Thread
		sw.entity.User
		sw.entity.UserGroup
		sw.entity.Weekness]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1cecfed3
Adding type registration boolean -> org.hibernate.type.BooleanType@1cecfed3
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1cecfed3
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4100d131
Adding type registration true_false -> org.hibernate.type.TrueFalseType@48bfaea7
Adding type registration yes_no -> org.hibernate.type.YesNoType@1a93c39b
Adding type registration byte -> org.hibernate.type.ByteType@557982a3
Adding type registration byte -> org.hibernate.type.ByteType@557982a3
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@557982a3
Adding type registration character -> org.hibernate.type.CharacterType@60f38846
Adding type registration char -> org.hibernate.type.CharacterType@60f38846
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60f38846
Adding type registration short -> org.hibernate.type.ShortType@1d4f762c
Adding type registration short -> org.hibernate.type.ShortType@1d4f762c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d4f762c
Adding type registration integer -> org.hibernate.type.IntegerType@48bd13db
Adding type registration int -> org.hibernate.type.IntegerType@48bd13db
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@48bd13db
Adding type registration long -> org.hibernate.type.LongType@2c9ac1ce
Adding type registration long -> org.hibernate.type.LongType@2c9ac1ce
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2c9ac1ce
Adding type registration float -> org.hibernate.type.FloatType@71853dac
Adding type registration float -> org.hibernate.type.FloatType@71853dac
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71853dac
Adding type registration double -> org.hibernate.type.DoubleType@6de50323
Adding type registration double -> org.hibernate.type.DoubleType@6de50323
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6de50323
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17613b29
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17613b29
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e6ccc6f
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e6ccc6f
Adding type registration string -> org.hibernate.type.StringType@351c33a4
Adding type registration java.lang.String -> org.hibernate.type.StringType@351c33a4
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a81b98c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49ccbc2f
Adding type registration url -> org.hibernate.type.UrlType@747b2a9
Adding type registration java.net.URL -> org.hibernate.type.UrlType@747b2a9
Adding type registration date -> org.hibernate.type.DateType@297bf1c5
Adding type registration java.sql.Date -> org.hibernate.type.DateType@297bf1c5
Adding type registration time -> org.hibernate.type.TimeType@14e15747
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@14e15747
Adding type registration timestamp -> org.hibernate.type.TimestampType@315bca4c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@315bca4c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@315bca4c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1998c75a
Adding type registration calendar -> org.hibernate.type.CalendarType@5168d395
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5168d395
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5168d395
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@43032545
Adding type registration locale -> org.hibernate.type.LocaleType@ba182f7
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ba182f7
Adding type registration currency -> org.hibernate.type.CurrencyType@c481e55
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c481e55
Adding type registration timezone -> org.hibernate.type.TimeZoneType@40049f37
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40049f37
Adding type registration class -> org.hibernate.type.ClassType@2310e7d3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2310e7d3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@64299a84
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@64299a84
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@70183f2f
Adding type registration binary -> org.hibernate.type.BinaryType@4f87f075
Adding type registration byte[] -> org.hibernate.type.BinaryType@4f87f075
Adding type registration [B -> org.hibernate.type.BinaryType@4f87f075
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2614da53
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2614da53
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2614da53
Adding type registration row_version -> org.hibernate.type.RowVersionType@12dded5a
Adding type registration image -> org.hibernate.type.ImageType@5170bae7
Adding type registration characters -> org.hibernate.type.CharArrayType@3d51f53e
Adding type registration char[] -> org.hibernate.type.CharArrayType@3d51f53e
Adding type registration [C -> org.hibernate.type.CharArrayType@3d51f53e
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31af1015
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31af1015
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31af1015
Adding type registration text -> org.hibernate.type.TextType@6cefcc4f
Adding type registration ntext -> org.hibernate.type.NTextType@35409d86
Adding type registration blob -> org.hibernate.type.BlobType@211c0bf6
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@211c0bf6
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@58fa7b87
Adding type registration clob -> org.hibernate.type.ClobType@3da10944
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3da10944
Adding type registration nclob -> org.hibernate.type.NClobType@a3164c2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a3164c2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ea53a46
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@14d8edd0
Adding type registration serializable -> org.hibernate.type.SerializableType@2b31c0d1
Adding type registration object -> org.hibernate.type.ObjectType@74e25421
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74e25421
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@58d1f3be
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e74e7d9
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@460370
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27b74ba3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@702c00e8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@697f7b1b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5912b8c7
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44651a15
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Asset
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Asset
Bind entity sw.entity.Asset on table t_asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property assetId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:assetId]
building SimpleValue for assetId
Building property assetId
Binding column: Ejb3JoinColumn{logicalColumnName='ass_typ_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=asset_type, insertable=true, updatable=true, unique=false}
Building property assetType
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=availability, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property availability with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:availability]
building SimpleValue for availability
Building property availability
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=backup_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property backupForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:backupForm]
building SimpleValue for backupForm
Building property backupForm
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=confidentiality, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property confidentiality with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:confidentiality]
building SimpleValue for confidentiality
Building property confidentiality
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=depart, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property depart with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:depart]
building SimpleValue for depart
Building property depart
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=importance, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importance with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:importance]
building SimpleValue for importance
Building property importance
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=integrity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property integrity with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:integrity]
building SimpleValue for integrity
Building property integrity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=principle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property principle with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:principle]
building SimpleValue for principle
Building property principle
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=remark, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property remark with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:remark]
building SimpleValue for remark
Building property remark
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset), mappingColumn=save_form, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property saveForm with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Asset:saveForm]
building SimpleValue for saveForm
Building property saveForm
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding entity from annotated class: sw.entity.Thread
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Thread
Bind entity sw.entity.Thread on table t_threat
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Thread:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='asset_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=asset, insertable=true, updatable=true, unique=false}
Building property asset
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=frequency, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property frequency with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Thread:frequency]
building SimpleValue for frequency
Building property frequency
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_threat), mappingColumn=threat_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property threatName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Thread:threatName]
building SimpleValue for threatName
Building property threatName
Binding entity from annotated class: sw.entity.Weekness
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Weekness
Bind entity sw.entity.Weekness on table t_weekness
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Weekness:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Weekness:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=severity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property severity with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Weekness:severity]
building SimpleValue for severity
Building property severity
Binding column: Ejb3JoinColumn{logicalColumnName='thread_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_weekness), mappingColumn=thread, insertable=true, updatable=true, unique=false}
Building property thread
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=reference_file, insertable=true, updatable=true, unique=false}
Building property referenceFile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.Result
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Result
Bind entity sw.entity.Result on table t_result
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Result:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=is_accept, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isAccept with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Result:isAccept]
building SimpleValue for isAccept
Building property isAccept
Binding column: Ejb3JoinColumn{logicalColumnName='ris_Lev_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=risk_level, insertable=true, updatable=true, unique=false}
Building property riskLevel
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=risk_value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property riskValue with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Result:riskValue]
building SimpleValue for riskValue
Building property riskValue
Binding column: Ejb3JoinColumn{logicalColumnName='weekness_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_result), mappingColumn=weekness, insertable=true, updatable=true, unique=false}
Building property weekness
Binding entity from annotated class: sw.entity.ReferenceFile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ReferenceFile
Bind entity sw.entity.ReferenceFile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=company, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property company with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:company]
building SimpleValue for company
Building property company
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:fileName]
building SimpleValue for fileName
Building property fileName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=publish_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property publishDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ReferenceFile:publishDate]
building SimpleValue for publishDate
Building property publishDate
Binding entity from annotated class: sw.entity.RiskLevel
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name RiskLevel
Bind entity sw.entity.RiskLevel on table t_risk_level
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=max_value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property maxValue with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:maxValue]
building SimpleValue for maxValue
Building property maxValue
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=min_value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property minValue with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:minValue]
building SimpleValue for minValue
Building property minValue
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.RiskLevel:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_risk_level), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.AssetType
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AssetType
Bind entity sw.entity.AssetType on table t_asset_type
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=import_excel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property importExcel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:importExcel]
building SimpleValue for importExcel
Building property importExcel
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_asset_type), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.AssetType:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for assetId
Starting fillSimpleValue for availability
Starting fillSimpleValue for backupForm
Starting fillSimpleValue for confidentiality
Starting fillSimpleValue for depart
Starting fillSimpleValue for description
Starting fillSimpleValue for importance
Starting fillSimpleValue for integrity
Starting fillSimpleValue for name
Starting fillSimpleValue for principle
Starting fillSimpleValue for remark
Starting fillSimpleValue for saveForm
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for id
Starting fillSimpleValue for frequency
Starting fillSimpleValue for threatName
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for severity
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for isAccept
Starting fillSimpleValue for riskValue
Starting fillSimpleValue for id
Starting fillSimpleValue for company
Starting fillSimpleValue for fileName
Starting fillSimpleValue for publishDate
Starting fillSimpleValue for id
Starting fillSimpleValue for description
Starting fillSimpleValue for maxValue
Starting fillSimpleValue for minValue
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for importExcel
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_threat]
Forcing column [id] to be non-null as it is part of the primary key for table [t_weekness]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_result]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_risk_level]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_asset_type]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.RiskLevel
Resolving reference to class: sw.entity.Weekness
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Thread
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.AssetType
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.ReferenceFile
Resolving reference to class: sw.entity.RiskLevel
Resolving reference to class: sw.entity.Weekness
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.Asset
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Thread
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@23f2370b
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7389860356231027269.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=23596, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7bcbab6a, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@553ba8f8{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.7.0_80\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;D:\Program Files\MATLAB\R2016b\runtime\win64;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.7.0_80\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\Java\jdk1.7.0_80\jre\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;E:\Workspaces\Myeclipse 2015\sw\target\test-classes;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-test\1.5.1.RELEASE\spring-boot-starter-test-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-test\1.5.1.RELEASE\spring-boot-test-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\1.5.1.RELEASE\spring-boot-test-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\com\jayway\jsonpath\json-path\2.2.0\json-path-2.2.0.jar;C:\Users\LR\.m2\repository\net\minidev\json-smart\2.2.1\json-smart-2.2.1.jar;C:\Users\LR\.m2\repository\net\minidev\accessors-smart\1.1\accessors-smart-1.1.jar;C:\Users\LR\.m2\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;C:\Users\LR\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\LR\.m2\repository\org\assertj\assertj-core\2.6.0\assertj-core-2.6.0.jar;C:\Users\LR\.m2\repository\org\mockito\mockito-core\1.10.19\mockito-core-1.10.19.jar;C:\Users\LR\.m2\repository\org\objenesis\objenesis\2.1\objenesis-2.1.jar;C:\Users\LR\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\LR\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\LR\.m2\repository\org\skyscreamer\jsonassert\1.4.0\jsonassert-1.4.0.jar;C:\Users\LR\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-test\4.3.6.RELEASE\spring-test-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar;C:\Users\LR\.m2\repository\commons-beanutils\commons-beanutils\1.9.3\commons-beanutils-1.9.3.jar;C:\Users\LR\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\LR\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi\3.14\poi-3.14.jar;C:\Users\LR\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml\3.14\poi-ooxml-3.14.jar;C:\Users\LR\.m2\repository\com\github\virtuald\curvesapi\1.03\curvesapi-1.03.jar;C:\Users\LR\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.14\poi-ooxml-schemas-3.14.jar;C:\Users\LR\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\LR\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\LR\.m2\repository\freemarker\freemarker\2.3.8\freemarker-2.3.8.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7389860356231027269.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@bb9d505, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@7d1efb50, payload=[Ljava.lang.Class;@947293b}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@611ad565, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@5b5454e2}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.Thread] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Thread
Not known whether passed class name [sw.entity.Weekness] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Weekness
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Result] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Result
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.RiskLevel] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.RiskLevel
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@3e33b7a1, payload=[Ljava.lang.Class;@45ecb50e}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@46e11d79, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@7dd22296}, constraintType=GENERIC}.
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.Asset] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Asset
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.Thread] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Thread
Not known whether passed class name [sw.entity.Thread] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Thread
Not known whether passed class name [sw.entity.Weekness] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Weekness
Not known whether passed class name [sw.entity.Weekness] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Weekness
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Result] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Result
Not known whether passed class name [sw.entity.Result] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Result
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.ReferenceFile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ReferenceFile
Not known whether passed class name [sw.entity.RiskLevel] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.RiskLevel
Not known whether passed class name [sw.entity.RiskLevel] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.RiskLevel
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.AssetType] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.AssetType
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_4_, group_.info as info3_4_, group_.user_id as user_id5_4_, group_.name as name4_4_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7e5475]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69358ed3]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_12_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_12_1_, user1_.email as email2_12_1_, user1_.name as name3_12_1_, user1_.password as password4_12_1_, user1_.tel as tel5_12_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@784ccbdc]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e6f516]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_12_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_, user1_.id as id1_12_1_, user1_.email as email2_12_1_, user1_.name as name3_12_1_, user1_.password as password4_12_1_, user1_.tel as tel5_12_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20e21b35]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0ceb6a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64057549]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665489da]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2acf79c1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4688ef8f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0a4dd]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc20825]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e3762c5]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c3483e1]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43e83362]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f39cb84]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@472a7409]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1137cc46]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2063500f]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28df9e40]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a522e1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66cb50f9]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_4_0_, group0_.create_date as create_d2_4_0_, group0_.info as info3_4_0_, group0_.user_id as user_id5_4_0_, group0_.name as name4_4_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.Asset
 Version select: select id from t_asset where id =?
 Snapshot select: select asset_.id, asset_.asset_id as asset_id2_2_, asset_.ass_typ_id as ass_typ14_2_, asset_.availability as availabi3_2_, asset_.backup_form as backup_f4_2_, asset_.confidentiality as confiden5_2_, asset_.depart as depart6_2_, asset_.description as descript7_2_, asset_.importance as importan8_2_, asset_.integrity as integrit9_2_, asset_.name as name10_2_, asset_.principle as princip11_2_, asset_.project_id as project15_2_, asset_.remark as remark12_2_, asset_.save_form as save_fo13_2_ from t_asset asset_ where asset_.id=?
 Insert 0: insert into t_asset (asset_id, ass_typ_id, availability, backup_form, confidentiality, depart, description, importance, integrity, name, principle, project_id, remark, save_form, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_asset set asset_id=?, ass_typ_id=?, availability=?, backup_form=?, confidentiality=?, depart=?, description=?, importance=?, integrity=?, name=?, principle=?, project_id=?, remark=?, save_form=? where id=?
 Delete 0: delete from t_asset where id=?
 Identity insert: insert into t_asset (asset_id, ass_typ_id, availability, backup_form, confidentiality, depart, description, importance, integrity, name, principle, project_id, remark, save_form) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@384ede6a]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d619ffb]
Visiting attribute path : assetType.importExcel
Visiting attribute path : assetType.name
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6794eb38]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@231068e7]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_12_3_}

Static select for entity sw.entity.Asset [NONE]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_, assettype1_.id as id1_3_1_, assettype1_.import_excel as import_e2_3_1_, assettype1_.name as name3_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_12_3_, user3_.email as email2_12_3_, user3_.name as name3_12_3_, user3_.password as password4_12_3_, user3_.tel as tel5_12_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7402d9ba]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3d37ab]
Visiting attribute path : assetType.importExcel
Visiting attribute path : assetType.name
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@149b4778]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd26b11]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(assetType)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.AssetType)
                - SQL table alias mapping - assettype1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                - SQL table alias mapping - project2_
                - alias suffix - 2_
                - suffixed key columns - {id1_6_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_12_3_}

Static select for entity sw.entity.Asset [READ]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_, assettype1_.id as id1_3_1_, assettype1_.import_excel as import_e2_3_1_, assettype1_.name as name3_3_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, user3_.id as id1_12_3_, user3_.email as email2_12_3_, user3_.name as name3_12_3_, user3_.password as password4_12_3_, user3_.tel as tel5_12_3_ from t_asset asset0_ left outer join t_asset_type assettype1_ on asset0_.ass_typ_id=assettype1_.id left outer join t_project project2_ on asset0_.project_id=project2_.id left outer join t_user user3_ on project2_.user_id=user3_.id where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b07d45]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@458740c1]
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79fe46db]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a2746f4]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e133d5f]
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@455072d8]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_NOWAIT]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5808c60]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c8a6bff]
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8a0e04]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [UPGRADE_SKIPLOCKED]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4be868b9]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d5f31a7]
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77bff826]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [FORCE]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f9aebc8]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@721c83b6]
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a6a2b1b]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_READ]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52065b35]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d9cfb6]
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b400045]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_WRITE]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bff37eb]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b50e43]
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f2c66b8]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [PESSIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d2e50d9]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65280ae4]
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@499da95f]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36ca902d]
Visiting attribute path : assetId
Visiting attribute path : assetType
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54000292]
Visiting attribute path : availability
Visiting attribute path : backupForm
Visiting attribute path : confidentiality
Visiting attribute path : depart
Visiting attribute path : description
Visiting attribute path : importance
Visiting attribute path : integrity
Visiting attribute path : name
Visiting attribute path : principle
Visiting attribute path : project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70739e1c]
Visiting attribute path : remark
Visiting attribute path : saveForm
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Asset)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Asset, querySpaceUid=<gen:0>, path=sw.entity.Asset)
          - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:1>, path=sw.entity.Asset.assetType)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Asset)
          - SQL table alias mapping - asset0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Asset [OPTIMISTIC_FORCE_INCREMENT]: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Asset: select asset0_.id as id1_2_0_, asset0_.asset_id as asset_id2_2_0_, asset0_.ass_typ_id as ass_typ14_2_0_, asset0_.availability as availabi3_2_0_, asset0_.backup_form as backup_f4_2_0_, asset0_.confidentiality as confiden5_2_0_, asset0_.depart as depart6_2_0_, asset0_.description as descript7_2_0_, asset0_.importance as importan8_2_0_, asset0_.integrity as integrit9_2_0_, asset0_.name as name10_2_0_, asset0_.principle as princip11_2_0_, asset0_.project_id as project15_2_0_, asset0_.remark as remark12_2_0_, asset0_.save_form as save_fo13_2_0_ from t_asset asset0_ where asset0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_13_, usergroup_.group_id as group_id4_13_, usergroup_.is_headman as is_headm3_13_, usergroup_.modify_userid as modify_u5_13_, usergroup_.project_id as project_6_13_, usergroup_.user_id as user_id7_13_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12da23c7]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65a8c1b7]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a40fe84]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a51d923]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@675c5127]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72106300]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74977d6b]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_12_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_12_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_12_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_12_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_12_2_, user2_.email as email2_12_2_, user2_.name as name3_12_2_, user2_.password as password4_12_2_, user2_.tel as tel5_12_2_, user3_.id as id1_12_3_, user3_.email as email2_12_3_, user3_.name as name3_12_3_, user3_.password as password4_12_3_, user3_.tel as tel5_12_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_12_5_, user5_.email as email2_12_5_, user5_.name as name3_12_5_, user5_.password as password4_12_5_, user5_.tel as tel5_12_5_, user6_.id as id1_12_6_, user6_.email as email2_12_6_, user6_.name as name3_12_6_, user6_.password as password4_12_6_, user6_.tel as tel5_12_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c49572]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@287dd68]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@386c5aad]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0d63e3]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e410c0]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b5102a1]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7df293da]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_12_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_12_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_6_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_12_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_12_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_, group1_.id as id1_4_1_, group1_.create_date as create_d2_4_1_, group1_.info as info3_4_1_, group1_.user_id as user_id5_4_1_, group1_.name as name4_4_1_, user2_.id as id1_12_2_, user2_.email as email2_12_2_, user2_.name as name3_12_2_, user2_.password as password4_12_2_, user2_.tel as tel5_12_2_, user3_.id as id1_12_3_, user3_.email as email2_12_3_, user3_.name as name3_12_3_, user3_.password as password4_12_3_, user3_.tel as tel5_12_3_, project4_.id as id1_6_4_, project4_.create_date as create_d2_6_4_, project4_.description as descript3_6_4_, project4_.name as name4_6_4_, project4_.user_id as user_id5_6_4_, user5_.id as id1_12_5_, user5_.email as email2_12_5_, user5_.name as name3_12_5_, user5_.password as password4_12_5_, user5_.tel as tel5_12_5_, user6_.id as id1_12_6_, user6_.email as email2_12_6_, user6_.name as name3_12_6_, user6_.password as password4_12_6_, user6_.tel as tel5_12_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58321a42]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b08413a]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ac0149b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6268fb8b]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b7b634a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d3e28e]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d0c58b8]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3d0f60]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404755db]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224cf206]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dcaa76f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a98ec]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47938669]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f5aa02b]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48698052]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ef2bc4b]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f786a50]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b171cfd]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608ce530]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b07b852]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47817588]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1380abb0]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@451354ba]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f254a5]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e1c5d0b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1857aa53]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c72b849]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306a42c9]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@154a63a5]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@269c27d8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe573b2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bea05cc]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0f498e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4833d35e]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5985b5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68627b7]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ccd9bb]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776994fa]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40e5be3f]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a52362e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a9323de]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c1ffc67]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c75e8c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b90079]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@109a6de8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_13_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_13_0_, usergroup0_.create_date as create_d2_13_0_, usergroup0_.group_id as group_id4_13_0_, usergroup0_.is_headman as is_headm3_13_0_, usergroup0_.modify_userid as modify_u5_13_0_, usergroup0_.project_id as project_6_13_0_, usergroup0_.user_id as user_id7_13_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a54758]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@522d3ffa]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687df796]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@670fd33e]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e77816f]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c58afec]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f325900]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_12_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_12_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_12_4_, user4_.email as email2_12_4_, user4_.name as name3_12_4_, user4_.password as password4_12_4_, user4_.tel as tel5_12_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_12_6_, user6_.email as email2_12_6_, user6_.name as name3_12_6_, user6_.password as password4_12_6_, user6_.tel as tel5_12_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b34a195]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6def21]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ee703b]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@432374a5]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c0bf24c]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6977dde3]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6776090b]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_4_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_12_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_5_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_12_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_5_2_, menu2_.href as href2_5_2_, menu2_.name as name3_5_2_, menu2_.pid as pid4_5_2_, group3_.id as id1_4_3_, group3_.create_date as create_d2_4_3_, group3_.info as info3_4_3_, group3_.user_id as user_id5_4_3_, group3_.name as name4_4_3_, user4_.id as id1_12_4_, user4_.email as email2_12_4_, user4_.name as name3_12_4_, user4_.password as password4_12_4_, user4_.tel as tel5_12_4_, menu5_.id as id1_5_5_, menu5_.href as href2_5_5_, menu5_.name as name3_5_5_, menu5_.pid as pid4_5_5_, user6_.id as id1_12_6_, user6_.email as email2_12_6_, user6_.name as name3_12_6_, user6_.password as password4_12_6_, user6_.tel as tel5_12_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e08240]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a933d0f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ab9a0ba]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3706cf2f]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28bcf72e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b44cc73]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d31ced0]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52fb4fdf]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f5126a7]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd4d101]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2800cfe5]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@763f8625]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b7e1d3a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452f9857]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a2959ef]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de821]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22f57cd0]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62d3bf40]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d502fdb]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b71a398]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12eb5fda]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@611f1fe3]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77640d3b]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f398982]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c5c7316]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a59379]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@179bd77]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e62aa8d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5755c463]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f5b9ffd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13850364]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@217754fb]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2250935f]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19f52a52]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@638561a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1df31aaa]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b88b2bb]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f44ad56]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a67d85e]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c7fb79a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42acc1c4]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c3962a1]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d0bdddb]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@90d9b5f]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665c8e9e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static SQL for entity: sw.entity.Thread
 Version select: select id from t_threat where id =?
 Snapshot select: select thread_.id, thread_.asset_id as asset_id4_11_, thread_.frequency as frequenc2_11_, thread_.threat_name as threat_n3_11_ from t_threat thread_ where thread_.id=?
 Insert 0: insert into t_threat (asset_id, frequency, threat_name, id) values (?, ?, ?, ?)
 Update 0: update t_threat set asset_id=?, frequency=?, threat_name=? where id=?
 Delete 0: delete from t_threat where id=?
 Identity insert: insert into t_threat (asset_id, frequency, threat_name) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7167d49e]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c38e0e]
Visiting attribute path : asset.assetId
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ae53f11]
Visiting attribute path : asset.assetType.importExcel
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.availability
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.confidentiality
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.integrity
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a849bb2]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7278190a]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Thread.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Thread.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Thread.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Thread [NONE]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_, asset1_.id as id1_2_1_, asset1_.asset_id as asset_id2_2_1_, asset1_.ass_typ_id as ass_typ14_2_1_, asset1_.availability as availabi3_2_1_, asset1_.backup_form as backup_f4_2_1_, asset1_.confidentiality as confiden5_2_1_, asset1_.depart as depart6_2_1_, asset1_.description as descript7_2_1_, asset1_.importance as importan8_2_1_, asset1_.integrity as integrit9_2_1_, asset1_.name as name10_2_1_, asset1_.principle as princip11_2_1_, asset1_.project_id as project15_2_1_, asset1_.remark as remark12_2_1_, asset1_.save_form as save_fo13_2_1_, assettype2_.id as id1_3_2_, assettype2_.import_excel as import_e2_3_2_, assettype2_.name as name3_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat thread0_ left outer join t_asset asset1_ on thread0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where thread0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35e0d2b4]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f093864]
Visiting attribute path : asset.assetId
Visiting attribute path : asset.assetType
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ecdd0a1]
Visiting attribute path : asset.assetType.importExcel
Visiting attribute path : asset.assetType.name
Visiting attribute path : asset.availability
Visiting attribute path : asset.backupForm
Visiting attribute path : asset.confidentiality
Visiting attribute path : asset.depart
Visiting attribute path : asset.description
Visiting attribute path : asset.importance
Visiting attribute path : asset.integrity
Visiting attribute path : asset.name
Visiting attribute path : asset.principle
Visiting attribute path : asset.project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f44e082]
Visiting attribute path : asset.project.createDate
Visiting attribute path : asset.project.description
Visiting attribute path : asset.project.name
Visiting attribute path : asset.project.user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0211a0]
Visiting attribute path : asset.remark
Visiting attribute path : asset.saveForm
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
             - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:2>, path=sw.entity.Thread.asset.assetType)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.Thread.asset.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.Thread.asset.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}
          - JOIN (JoinDefinedByMetadata(asset)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Asset)
                - SQL table alias mapping - asset1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(assetType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.AssetType)
                      - SQL table alias mapping - assettype2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Project)
                      - SQL table alias mapping - project3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.Thread [READ]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_, asset1_.id as id1_2_1_, asset1_.asset_id as asset_id2_2_1_, asset1_.ass_typ_id as ass_typ14_2_1_, asset1_.availability as availabi3_2_1_, asset1_.backup_form as backup_f4_2_1_, asset1_.confidentiality as confiden5_2_1_, asset1_.depart as depart6_2_1_, asset1_.description as descript7_2_1_, asset1_.importance as importan8_2_1_, asset1_.integrity as integrit9_2_1_, asset1_.name as name10_2_1_, asset1_.principle as princip11_2_1_, asset1_.project_id as project15_2_1_, asset1_.remark as remark12_2_1_, asset1_.save_form as save_fo13_2_1_, assettype2_.id as id1_3_2_, assettype2_.import_excel as import_e2_3_2_, assettype2_.name as name3_3_2_, project3_.id as id1_6_3_, project3_.create_date as create_d2_6_3_, project3_.description as descript3_6_3_, project3_.name as name4_6_3_, project3_.user_id as user_id5_6_3_ from t_threat thread0_ left outer join t_asset asset1_ on thread0_.asset_id=asset1_.id left outer join t_asset_type assettype2_ on asset1_.ass_typ_id=assettype2_.id left outer join t_project project3_ on asset1_.project_id=project3_.id where thread0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49cb562]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143414bd]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.Thread [UPGRADE]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3817888a]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6515f3e9]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.Thread [UPGRADE_NOWAIT]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5130920a]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49dc7e8]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.Thread [UPGRADE_SKIPLOCKED]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4edde629]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76b901d2]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.Thread [FORCE]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c713a6a]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@622270a3]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.Thread [PESSIMISTIC_READ]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cab5aa4]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a58402]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.Thread [PESSIMISTIC_WRITE]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6673593d]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d73990c]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.Thread [PESSIMISTIC_FORCE_INCREMENT]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@764d8134]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3033ae24]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.Thread [OPTIMISTIC]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6159ead7]
Visiting attribute path : asset
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d79a8f4]
Visiting attribute path : frequency
Visiting attribute path : threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Thread)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Thread, querySpaceUid=<gen:0>, path=sw.entity.Thread)
          - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:1>, path=sw.entity.Thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Thread)
          - SQL table alias mapping - thread0_
          - alias suffix - 0_
          - suffixed key columns - {id1_11_0_}

Static select for entity sw.entity.Thread [OPTIMISTIC_FORCE_INCREMENT]: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Thread: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Thread: select thread0_.id as id1_11_0_, thread0_.asset_id as asset_id4_11_0_, thread0_.frequency as frequenc2_11_0_, thread0_.threat_name as threat_n3_11_0_ from t_threat thread0_ where thread0_.id=?
Static SQL for entity: sw.entity.Weekness
 Version select: select id from t_weekness where id =?
 Snapshot select: select weekness_.id, weekness_.name as name2_14_, weekness_.severity as severity3_14_, weekness_.thread_id as thread_i4_14_ from t_weekness weekness_ where weekness_.id=?
 Insert 0: insert into t_weekness (name, severity, thread_id, id) values (?, ?, ?, ?)
 Update 0: update t_weekness set name=?, severity=?, thread_id=? where id=?
 Delete 0: delete from t_weekness where id=?
 Identity insert: insert into t_weekness (name, severity, thread_id) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9671f1]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e8ea82]
Visiting attribute path : thread.asset
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a1c307d]
Visiting attribute path : thread.asset.assetId
Visiting attribute path : thread.asset.assetType
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cdac97]
Visiting attribute path : thread.asset.availability
Visiting attribute path : thread.asset.backupForm
Visiting attribute path : thread.asset.confidentiality
Visiting attribute path : thread.asset.depart
Visiting attribute path : thread.asset.description
Visiting attribute path : thread.asset.importance
Visiting attribute path : thread.asset.integrity
Visiting attribute path : thread.asset.name
Visiting attribute path : thread.asset.principle
Visiting attribute path : thread.asset.project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4e5964]
Visiting attribute path : thread.asset.remark
Visiting attribute path : thread.asset.saveForm
Visiting attribute path : thread.frequency
Visiting attribute path : thread.threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
             - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:2>, path=sw.entity.Weekness.thread.asset)
                - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:3>, path=sw.entity.Weekness.thread.asset.assetType)
                - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.Weekness.thread.asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}
          - JOIN (JoinDefinedByMetadata(thread)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Thread)
                - SQL table alias mapping - thread1_
                - alias suffix - 1_
                - suffixed key columns - {id1_11_1_}
                - JOIN (JoinDefinedByMetadata(asset)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Asset)
                      - SQL table alias mapping - asset2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

Static select for entity sw.entity.Weekness [NONE]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_, thread1_.id as id1_11_1_, thread1_.asset_id as asset_id4_11_1_, thread1_.frequency as frequenc2_11_1_, thread1_.threat_name as threat_n3_11_1_, asset2_.id as id1_2_2_, asset2_.asset_id as asset_id2_2_2_, asset2_.ass_typ_id as ass_typ14_2_2_, asset2_.availability as availabi3_2_2_, asset2_.backup_form as backup_f4_2_2_, asset2_.confidentiality as confiden5_2_2_, asset2_.depart as depart6_2_2_, asset2_.description as descript7_2_2_, asset2_.importance as importan8_2_2_, asset2_.integrity as integrit9_2_2_, asset2_.name as name10_2_2_, asset2_.principle as princip11_2_2_, asset2_.project_id as project15_2_2_, asset2_.remark as remark12_2_2_, asset2_.save_form as save_fo13_2_2_ from t_weekness weekness0_ left outer join t_threat thread1_ on weekness0_.thread_id=thread1_.id left outer join t_asset asset2_ on thread1_.asset_id=asset2_.id where weekness0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@678a0948]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bba441e]
Visiting attribute path : thread.asset
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@228628cb]
Visiting attribute path : thread.asset.assetId
Visiting attribute path : thread.asset.assetType
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71cbf677]
Visiting attribute path : thread.asset.availability
Visiting attribute path : thread.asset.backupForm
Visiting attribute path : thread.asset.confidentiality
Visiting attribute path : thread.asset.depart
Visiting attribute path : thread.asset.description
Visiting attribute path : thread.asset.importance
Visiting attribute path : thread.asset.integrity
Visiting attribute path : thread.asset.name
Visiting attribute path : thread.asset.principle
Visiting attribute path : thread.asset.project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69b98129]
Visiting attribute path : thread.asset.remark
Visiting attribute path : thread.asset.saveForm
Visiting attribute path : thread.frequency
Visiting attribute path : thread.threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
             - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:2>, path=sw.entity.Weekness.thread.asset)
                - EntityAttributeFetchImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:3>, path=sw.entity.Weekness.thread.asset.assetType)
                - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.Weekness.thread.asset.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}
          - JOIN (JoinDefinedByMetadata(thread)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Thread)
                - SQL table alias mapping - thread1_
                - alias suffix - 1_
                - suffixed key columns - {id1_11_1_}
                - JOIN (JoinDefinedByMetadata(asset)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Asset)
                      - SQL table alias mapping - asset2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

Static select for entity sw.entity.Weekness [READ]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_, thread1_.id as id1_11_1_, thread1_.asset_id as asset_id4_11_1_, thread1_.frequency as frequenc2_11_1_, thread1_.threat_name as threat_n3_11_1_, asset2_.id as id1_2_2_, asset2_.asset_id as asset_id2_2_2_, asset2_.ass_typ_id as ass_typ14_2_2_, asset2_.availability as availabi3_2_2_, asset2_.backup_form as backup_f4_2_2_, asset2_.confidentiality as confiden5_2_2_, asset2_.depart as depart6_2_2_, asset2_.description as descript7_2_2_, asset2_.importance as importan8_2_2_, asset2_.integrity as integrit9_2_2_, asset2_.name as name10_2_2_, asset2_.principle as princip11_2_2_, asset2_.project_id as project15_2_2_, asset2_.remark as remark12_2_2_, asset2_.save_form as save_fo13_2_2_ from t_weekness weekness0_ left outer join t_threat thread1_ on weekness0_.thread_id=thread1_.id left outer join t_asset asset2_ on thread1_.asset_id=asset2_.id where weekness0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a6a3ca5]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ae41c76]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}

Static select for entity sw.entity.Weekness [UPGRADE]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ff168ca]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3124b83c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}

Static select for entity sw.entity.Weekness [UPGRADE_NOWAIT]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b6915c2]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d051e9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}

Static select for entity sw.entity.Weekness [UPGRADE_SKIPLOCKED]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6021e217]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@380e6b8e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}

Static select for entity sw.entity.Weekness [FORCE]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea73a7f]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb06381]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}

Static select for entity sw.entity.Weekness [PESSIMISTIC_READ]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10293162]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cffdfb1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}

Static select for entity sw.entity.Weekness [PESSIMISTIC_WRITE]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@540b09c4]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ec7d037]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}

Static select for entity sw.entity.Weekness [PESSIMISTIC_FORCE_INCREMENT]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb79209]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49073fdb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}

Static select for entity sw.entity.Weekness [OPTIMISTIC]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49c118a4]
Visiting attribute path : name
Visiting attribute path : severity
Visiting attribute path : thread
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e64d978]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Weekness)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:0>, path=sw.entity.Weekness)
          - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:1>, path=sw.entity.Weekness.thread)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Weekness)
          - SQL table alias mapping - weekness0_
          - alias suffix - 0_
          - suffixed key columns - {id1_14_0_}

Static select for entity sw.entity.Weekness [OPTIMISTIC_FORCE_INCREMENT]: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Weekness: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Weekness: select weekness0_.id as id1_14_0_, weekness0_.name as name2_14_0_, weekness0_.severity as severity3_14_0_, weekness0_.thread_id as thread_i4_14_0_ from t_weekness weekness0_ where weekness0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_7_, proref_.ref_pro_id as ref_pro_3_7_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eedc688]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315212e7]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@91cfe98]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5086352e]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_12_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_12_2_, user2_.email as email2_12_2_, user2_.name as name3_12_2_, user2_.password as password4_12_2_, user2_.tel as tel5_12_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a747778]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c997984]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54962a8b]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46f4af0b]
Visiting attribute path : referenceFile.company
Visiting attribute path : referenceFile.fileName
Visiting attribute path : referenceFile.publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_12_2_}
          - JOIN (JoinDefinedByMetadata(referenceFile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.ReferenceFile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_8_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_12_2_, user2_.email as email2_12_2_, user2_.name as name3_12_2_, user2_.password as password4_12_2_, user2_.tel as tel5_12_2_, referencef3_.id as id1_8_3_, referencef3_.company as company2_8_3_, referencef3_.file_name as file_nam3_8_3_, referencef3_.publish_date as publish_4_8_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c331269]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b11e585]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b4f860]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@535000a5]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b102537]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bd7b3cd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2851c13a]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63ee242f]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2561ba44]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31fe7c3]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54b7e99d]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7caccad5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f10b7c]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e0f6214]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646ff562]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ccda878]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0e473]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bafd5ea]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aa0308f]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4902ceff]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6742b0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d82bfb]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1598d88d]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fc6a4c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@750d1e3b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787ec9c9]
Visiting attribute path : referenceFile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18306280]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_7_0_, proref0_.project_id as project_2_7_0_, proref0_.ref_pro_id as ref_pro_3_7_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_12_, user_.name as name3_12_, user_.password as password4_12_, user_.tel as tel5_12_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d14b7b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2938eb93]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d82b7fe]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@466a538f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61357591]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f161fd7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1c04fa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5edad99c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f6d7cc1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af53bab]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@593b0b7d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_12_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_12_0_, user0_.email as email2_12_0_, user0_.name as name3_12_0_, user0_.password as password4_12_0_, user0_.tel as tel5_12_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_5_, menu_.name as name3_5_, menu_.pid as pid4_5_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20735eb2]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc76277]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12381f0b]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ff20db6]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@477d76a4]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@676388c9]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21183576]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f7e4443]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2768b071]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc61f5e]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@529cb13e]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_5_0_, menu0_.href as href2_5_0_, menu0_.name as name3_5_0_, menu0_.pid as pid4_5_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.Result
 Version select: select id from t_result where id =?
 Snapshot select: select result_.id, result_.is_accept as is_accep2_9_, result_.ris_lev_id as ris_lev_4_9_, result_.risk_value as risk_val3_9_, result_.weekness_id as weekness5_9_ from t_result result_ where result_.id=?
 Insert 0: insert into t_result (is_accept, ris_lev_id, risk_value, weekness_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_result set is_accept=?, ris_lev_id=?, risk_value=?, weekness_id=? where id=?
 Delete 0: delete from t_result where id=?
 Identity insert: insert into t_result (is_accept, ris_lev_id, risk_value, weekness_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e799f]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b31c4ac]
Visiting attribute path : riskLevel.description
Visiting attribute path : riskLevel.maxValue
Visiting attribute path : riskLevel.minValue
Visiting attribute path : riskLevel.name
Visiting attribute path : riskLevel.project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb238ee]
Visiting attribute path : riskLevel.project.createDate
Visiting attribute path : riskLevel.project.description
Visiting attribute path : riskLevel.project.name
Visiting attribute path : riskLevel.project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b8a8abd]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73c37a1e]
Visiting attribute path : weekness.name
Visiting attribute path : weekness.severity
Visiting attribute path : weekness.thread
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1e9f0c]
Visiting attribute path : weekness.thread.asset
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c45a4a3]
Visiting attribute path : weekness.thread.frequency
Visiting attribute path : weekness.thread.threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Result.riskLevel.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Result.riskLevel.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:4>, path=sw.entity.Result.weekness)
             - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:5>, path=sw.entity.Result.weekness.thread)
                - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:6>, path=sw.entity.Result.weekness.thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(riskLevel)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.RiskLevel)
                - SQL table alias mapping - risklevel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                      - SQL table alias mapping - project2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
          - JOIN (JoinDefinedByMetadata(weekness)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Weekness)
                - SQL table alias mapping - weekness3_
                - alias suffix - 3_
                - suffixed key columns - {id1_14_3_}
                - JOIN (JoinDefinedByMetadata(thread)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Thread)
                      - SQL table alias mapping - thread4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_11_4_}

Static select for entity sw.entity.Result [NONE]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_, risklevel1_.id as id1_10_1_, risklevel1_.description as descript2_10_1_, risklevel1_.max_value as max_valu3_10_1_, risklevel1_.min_value as min_valu4_10_1_, risklevel1_.name as name5_10_1_, risklevel1_.project_id as project_6_10_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, weekness3_.id as id1_14_3_, weekness3_.name as name2_14_3_, weekness3_.severity as severity3_14_3_, weekness3_.thread_id as thread_i4_14_3_, thread4_.id as id1_11_4_, thread4_.asset_id as asset_id4_11_4_, thread4_.frequency as frequenc2_11_4_, thread4_.threat_name as threat_n3_11_4_ from t_result result0_ left outer join t_risk_level risklevel1_ on result0_.ris_lev_id=risklevel1_.id left outer join t_project project2_ on risklevel1_.project_id=project2_.id left outer join t_weekness weekness3_ on result0_.weekness_id=weekness3_.id left outer join t_threat thread4_ on weekness3_.thread_id=thread4_.id where result0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a841fa2]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708ba9a1]
Visiting attribute path : riskLevel.description
Visiting attribute path : riskLevel.maxValue
Visiting attribute path : riskLevel.minValue
Visiting attribute path : riskLevel.name
Visiting attribute path : riskLevel.project
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb9132f]
Visiting attribute path : riskLevel.project.createDate
Visiting attribute path : riskLevel.project.description
Visiting attribute path : riskLevel.project.name
Visiting attribute path : riskLevel.project.user
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b6a7b96]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@797fc457]
Visiting attribute path : weekness.name
Visiting attribute path : weekness.severity
Visiting attribute path : weekness.thread
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14a1ac01]
Visiting attribute path : weekness.thread.asset
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b45f160]
Visiting attribute path : weekness.thread.frequency
Visiting attribute path : weekness.thread.threatName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
             - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:2>, path=sw.entity.Result.riskLevel.project)
                - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.Result.riskLevel.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:4>, path=sw.entity.Result.weekness)
             - EntityAttributeFetchImpl(entity=sw.entity.Thread, querySpaceUid=<gen:5>, path=sw.entity.Result.weekness.thread)
                - EntityAttributeFetchImpl(entity=sw.entity.Asset, querySpaceUid=<gen:6>, path=sw.entity.Result.weekness.thread.asset)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}
          - JOIN (JoinDefinedByMetadata(riskLevel)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.RiskLevel)
                - SQL table alias mapping - risklevel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_10_1_}
                - JOIN (JoinDefinedByMetadata(project)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Project)
                      - SQL table alias mapping - project2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_6_2_}
          - JOIN (JoinDefinedByMetadata(weekness)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Weekness)
                - SQL table alias mapping - weekness3_
                - alias suffix - 3_
                - suffixed key columns - {id1_14_3_}
                - JOIN (JoinDefinedByMetadata(thread)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Thread)
                      - SQL table alias mapping - thread4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_11_4_}

Static select for entity sw.entity.Result [READ]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_, risklevel1_.id as id1_10_1_, risklevel1_.description as descript2_10_1_, risklevel1_.max_value as max_valu3_10_1_, risklevel1_.min_value as min_valu4_10_1_, risklevel1_.name as name5_10_1_, risklevel1_.project_id as project_6_10_1_, project2_.id as id1_6_2_, project2_.create_date as create_d2_6_2_, project2_.description as descript3_6_2_, project2_.name as name4_6_2_, project2_.user_id as user_id5_6_2_, weekness3_.id as id1_14_3_, weekness3_.name as name2_14_3_, weekness3_.severity as severity3_14_3_, weekness3_.thread_id as thread_i4_14_3_, thread4_.id as id1_11_4_, thread4_.asset_id as asset_id4_11_4_, thread4_.frequency as frequenc2_11_4_, thread4_.threat_name as threat_n3_11_4_ from t_result result0_ left outer join t_risk_level risklevel1_ on result0_.ris_lev_id=risklevel1_.id left outer join t_project project2_ on risklevel1_.project_id=project2_.id left outer join t_weekness weekness3_ on result0_.weekness_id=weekness3_.id left outer join t_threat thread4_ on weekness3_.thread_id=thread4_.id where result0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1506cf44]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ebdbb81]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4799c7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:2>, path=sw.entity.Result.weekness)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Result [UPGRADE]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79181124]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31fe0db]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6570c8de]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:2>, path=sw.entity.Result.weekness)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Result [UPGRADE_NOWAIT]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cd87465]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@493ea042]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a6bb783]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:2>, path=sw.entity.Result.weekness)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Result [UPGRADE_SKIPLOCKED]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350f85f7]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6005a069]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1725d445]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:2>, path=sw.entity.Result.weekness)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Result [FORCE]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eccdb6b]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66cff9a7]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff18ec7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:2>, path=sw.entity.Result.weekness)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Result [PESSIMISTIC_READ]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67de01d1]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75d87720]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260c58ea]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:2>, path=sw.entity.Result.weekness)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Result [PESSIMISTIC_WRITE]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31cb1573]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e0c98c]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32ef04b2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:2>, path=sw.entity.Result.weekness)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Result [PESSIMISTIC_FORCE_INCREMENT]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b66ff11]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554d5398]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f4d1717]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:2>, path=sw.entity.Result.weekness)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Result [OPTIMISTIC]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73bffd98]
Visiting attribute path : isAccept
Visiting attribute path : riskLevel
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@637f0153]
Visiting attribute path : riskValue
Visiting attribute path : weekness
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14fd4784]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Result)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Result, querySpaceUid=<gen:0>, path=sw.entity.Result)
          - EntityAttributeFetchImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:1>, path=sw.entity.Result.riskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Weekness, querySpaceUid=<gen:2>, path=sw.entity.Result.weekness)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Result)
          - SQL table alias mapping - result0_
          - alias suffix - 0_
          - suffixed key columns - {id1_9_0_}

Static select for entity sw.entity.Result [OPTIMISTIC_FORCE_INCREMENT]: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Result: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Result: select result0_.id as id1_9_0_, result0_.is_accept as is_accep2_9_0_, result0_.ris_lev_id as ris_lev_4_9_0_, result0_.risk_value as risk_val3_9_0_, result0_.weekness_id as weekness5_9_0_ from t_result result0_ where result0_.id=?
Static SQL for entity: sw.entity.ReferenceFile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.company as company2_8_, referencef_.file_name as file_nam3_8_, referencef_.publish_date as publish_4_8_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (company, file_name, publish_date, id) values (?, ?, ?, ?)
 Update 0: update t_referencefile set company=?, file_name=?, publish_date=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (company, file_name, publish_date) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18223bbe]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [NONE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55cd02e6]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22849fa7]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2e4685]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_NOWAIT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766846b0]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b81dcd]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [FORCE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c3fbb12]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_READ]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f9d8b3]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b8bbf9f]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ee697ba]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19dc6bf0]
Visiting attribute path : company
Visiting attribute path : fileName
Visiting attribute path : publishDate
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ReferenceFile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ReferenceFile, querySpaceUid=<gen:0>, path=sw.entity.ReferenceFile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ReferenceFile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.ReferenceFile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ReferenceFile: select referencef0_.id as id1_8_0_, referencef0_.company as company2_8_0_, referencef0_.file_name as file_nam3_8_0_, referencef0_.publish_date as publish_4_8_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.RiskLevel
 Version select: select id from t_risk_level where id =?
 Snapshot select: select risklevel_.id, risklevel_.description as descript2_10_, risklevel_.max_value as max_valu3_10_, risklevel_.min_value as min_valu4_10_, risklevel_.name as name5_10_, risklevel_.project_id as project_6_10_ from t_risk_level risklevel_ where risklevel_.id=?
 Insert 0: insert into t_risk_level (description, max_value, min_value, name, project_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_risk_level set description=?, max_value=?, min_value=?, name=?, project_id=? where id=?
 Delete 0: delete from t_risk_level where id=?
 Identity insert: insert into t_risk_level (description, max_value, min_value, name, project_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f1f0d19]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d810f8]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1259a1d0]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.RiskLevel.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_12_2_}

Static select for entity sw.entity.RiskLevel [NONE]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_12_2_, user2_.email as email2_12_2_, user2_.name as name3_12_2_, user2_.password as password4_12_2_, user2_.tel as tel5_12_2_ from t_risk_level risklevel0_ left outer join t_project project1_ on risklevel0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id where risklevel0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@235b8323]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18aa3a9]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d43cdf4]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.RiskLevel.project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_12_2_}

Static select for entity sw.entity.RiskLevel [READ]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_, project1_.id as id1_6_1_, project1_.create_date as create_d2_6_1_, project1_.description as descript3_6_1_, project1_.name as name4_6_1_, project1_.user_id as user_id5_6_1_, user2_.id as id1_12_2_, user2_.email as email2_12_2_, user2_.name as name3_12_2_, user2_.password as password4_12_2_, user2_.tel as tel5_12_2_ from t_risk_level risklevel0_ left outer join t_project project1_ on risklevel0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id where risklevel0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@513ed0b7]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40ededf2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.RiskLevel [UPGRADE]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@281a16d9]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@962559a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.RiskLevel [UPGRADE_NOWAIT]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26cfab39]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@672428d9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.RiskLevel [UPGRADE_SKIPLOCKED]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cf16f22]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27480003]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.RiskLevel [FORCE]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616c86d3]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55435922]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.RiskLevel [PESSIMISTIC_READ]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@326c0391]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ac0dc31]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.RiskLevel [PESSIMISTIC_WRITE]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75051802]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab11b84]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.RiskLevel [PESSIMISTIC_FORCE_INCREMENT]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36ac7fb7]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7366de9b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.RiskLevel [OPTIMISTIC]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71099648]
Visiting attribute path : description
Visiting attribute path : maxValue
Visiting attribute path : minValue
Visiting attribute path : name
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad4e904]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.RiskLevel)
    - Returns
       - EntityReturnImpl(entity=sw.entity.RiskLevel, querySpaceUid=<gen:0>, path=sw.entity.RiskLevel)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.RiskLevel.project)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.RiskLevel)
          - SQL table alias mapping - risklevel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_10_0_}

Static select for entity sw.entity.RiskLevel [OPTIMISTIC_FORCE_INCREMENT]: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.RiskLevel: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.RiskLevel: select risklevel0_.id as id1_10_0_, risklevel0_.description as descript2_10_0_, risklevel0_.max_value as max_valu3_10_0_, risklevel0_.min_value as min_valu4_10_0_, risklevel0_.name as name5_10_0_, risklevel0_.project_id as project_6_10_0_ from t_risk_level risklevel0_ where risklevel0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_6_, project_.description as descript3_6_, project_.name as name4_6_, project_.user_id as user_id5_6_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f8370c3]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eb4a132]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_12_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_12_1_, user1_.email as email2_12_1_, user1_.name as name3_12_1_, user1_.password as password4_12_1_, user1_.tel as tel5_12_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@275480fe]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66e8ab6f]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_12_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_, user1_.id as id1_12_1_, user1_.email as email2_12_1_, user1_.name as name3_12_1_, user1_.password as password4_12_1_, user1_.tel as tel5_12_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@599834eb]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@166c3dfe]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cdfea63]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@438cba2e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3478fc6c]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ede7ad]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30967294]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38215b6f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41880349]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@725c65ca]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4094a2cd]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d5b80e8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c38cebc]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c1851]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52f19c1e]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d553787]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e8858ec]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f30d3f0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_6_0_, project0_.create_date as create_d2_6_0_, project0_.description as descript3_6_0_, project0_.name as name4_6_0_, project0_.user_id as user_id5_6_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.AssetType
 Version select: select id from t_asset_type where id =?
 Snapshot select: select assettype_.id, assettype_.import_excel as import_e2_3_, assettype_.name as name3_3_ from t_asset_type assettype_ where assettype_.id=?
 Insert 0: insert into t_asset_type (import_excel, name, id) values (?, ?, ?)
 Update 0: update t_asset_type set import_excel=?, name=? where id=?
 Delete 0: delete from t_asset_type where id=?
 Identity insert: insert into t_asset_type (import_excel, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b7d349e]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [NONE]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed253d9]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [READ]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@456fa304]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c65e3a6]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_NOWAIT]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76093c7b]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [UPGRADE_SKIPLOCKED]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c89c471]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [FORCE]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6beb3d]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_READ]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@353a8593]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_WRITE]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2298e02b]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [PESSIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4753e25b]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20ffca9]
Visiting attribute path : importExcel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.AssetType)
    - Returns
       - EntityReturnImpl(entity=sw.entity.AssetType, querySpaceUid=<gen:0>, path=sw.entity.AssetType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.AssetType)
          - SQL table alias mapping - assettype0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.AssetType [OPTIMISTIC_FORCE_INCREMENT]: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.AssetType: select assettype0_.id as id1_3_0_, assettype0_.import_excel as import_e2_3_0_, assettype0_.name as name3_3_0_ from t_asset_type assettype0_ where assettype0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bdbae95]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc8638d]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c9a1308]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b18a7dd]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_5_1_, menu1_.href as href2_5_1_, menu1_.name as name3_5_1_, menu1_.pid as pid4_5_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40fc1aef]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a05962c]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542866d4]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fdc1216]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79de5937]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@337cbdd]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cd4350f]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75bd0bca]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48e95f83]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24835be2]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@397de7e3]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dca943e]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8842e]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ba8ab1a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52aaa335]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a62150]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f28ae05]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b6ed373]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_asset
No alter strings for table : t_asset_type
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
HHH000262: Table not found: t_result
HHH000262: Table not found: t_result
HHH000262: Table not found: t_risk_level
HHH000262: Table not found: t_risk_level
No alter strings for table : t_threat
No alter strings for table : t_user
No alter strings for table : t_usergroup
HHH000262: Table not found: t_weekness
HHH000262: Table not found: t_weekness
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@592bb580
Registering SessionFactory: 83bc0191-cf92-438f-a6ea-fb1845e64cd3 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@47bd8b41
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79f57aa3: startup date [Fri Dec 08 23:33:46 CST 2017]; root of context hierarchy
Mapped "{[/upload]}" onto public java.lang.String sw.controller.FileController.upload(org.springframework.web.multipart.MultipartFile)
Mapped "{[/download]}" onto public java.lang.String sw.controller.FileController.downloadFile(org.apache.catalina.servlet4preview.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/greeting]}" onto public java.lang.String sw.controller.FileController.greeting(java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 26.693 seconds (JVM running for 27.549)
