Starting Application on LuoRong with PID 5796 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Wed Nov 15 20:35:57 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6489a9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4513 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@520028c2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@567d29ff{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.Referencefile
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@432f9b95
Adding type registration boolean -> org.hibernate.type.BooleanType@432f9b95
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@432f9b95
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26fb586b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bb18d76
Adding type registration yes_no -> org.hibernate.type.YesNoType@6df453dd
Adding type registration byte -> org.hibernate.type.ByteType@35058764
Adding type registration byte -> org.hibernate.type.ByteType@35058764
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35058764
Adding type registration character -> org.hibernate.type.CharacterType@61d93422
Adding type registration char -> org.hibernate.type.CharacterType@61d93422
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61d93422
Adding type registration short -> org.hibernate.type.ShortType@17bcfcc9
Adding type registration short -> org.hibernate.type.ShortType@17bcfcc9
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17bcfcc9
Adding type registration integer -> org.hibernate.type.IntegerType@2914f65
Adding type registration int -> org.hibernate.type.IntegerType@2914f65
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2914f65
Adding type registration long -> org.hibernate.type.LongType@524c58af
Adding type registration long -> org.hibernate.type.LongType@524c58af
Adding type registration java.lang.Long -> org.hibernate.type.LongType@524c58af
Adding type registration float -> org.hibernate.type.FloatType@1229f0ee
Adding type registration float -> org.hibernate.type.FloatType@1229f0ee
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1229f0ee
Adding type registration double -> org.hibernate.type.DoubleType@197e7133
Adding type registration double -> org.hibernate.type.DoubleType@197e7133
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@197e7133
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46e481d6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46e481d6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2af03d49
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2af03d49
Adding type registration string -> org.hibernate.type.StringType@1abb5511
Adding type registration java.lang.String -> org.hibernate.type.StringType@1abb5511
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2a33796a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a67b7b8
Adding type registration url -> org.hibernate.type.UrlType@3dd3f89c
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3dd3f89c
Adding type registration date -> org.hibernate.type.DateType@6f942abc
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f942abc
Adding type registration time -> org.hibernate.type.TimeType@3b71484f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b71484f
Adding type registration timestamp -> org.hibernate.type.TimestampType@61456143
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61456143
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61456143
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3b14cddd
Adding type registration calendar -> org.hibernate.type.CalendarType@5d4fc0d3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d4fc0d3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d4fc0d3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5170eb56
Adding type registration locale -> org.hibernate.type.LocaleType@70350d79
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@70350d79
Adding type registration currency -> org.hibernate.type.CurrencyType@62924425
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62924425
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d4b9af3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d4b9af3
Adding type registration class -> org.hibernate.type.ClassType@87cbab4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@87cbab4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e0a8be7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e0a8be7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1155259c
Adding type registration binary -> org.hibernate.type.BinaryType@56c51513
Adding type registration byte[] -> org.hibernate.type.BinaryType@56c51513
Adding type registration [B -> org.hibernate.type.BinaryType@56c51513
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1621d42
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1621d42
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1621d42
Adding type registration row_version -> org.hibernate.type.RowVersionType@66e5036
Adding type registration image -> org.hibernate.type.ImageType@380b3004
Adding type registration characters -> org.hibernate.type.CharArrayType@2e2ac9e4
Adding type registration char[] -> org.hibernate.type.CharArrayType@2e2ac9e4
Adding type registration [C -> org.hibernate.type.CharArrayType@2e2ac9e4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b01f69a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b01f69a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b01f69a
Adding type registration text -> org.hibernate.type.TextType@2babf371
Adding type registration ntext -> org.hibernate.type.NTextType@6f2c61ab
Adding type registration blob -> org.hibernate.type.BlobType@7fafbb47
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fafbb47
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b028154
Adding type registration clob -> org.hibernate.type.ClobType@300d21c8
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@300d21c8
Adding type registration nclob -> org.hibernate.type.NClobType@362e1eb8
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@362e1eb8
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3229e966
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7eed87f9
Adding type registration serializable -> org.hibernate.type.SerializableType@76d0f163
Adding type registration object -> org.hibernate.type.ObjectType@5146a4aa
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5146a4aa
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42e2d807
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@26654705
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@479e5dfa
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@26aafb27
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@72dc2d15
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e0d0124
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bc9f292
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a4b5b0f
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=referencefile, insertable=true, updatable=true, unique=false}
Building property referencefile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.Referencefile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Referencefile
Bind entity sw.entity.Referencefile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Referencefile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Referencefile:fileName]
building SimpleValue for fileName
Building property fileName
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for fileName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.Referencefile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.Referencefile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@24b376f6
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8498970957894800631.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=5796, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@654be40d, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@567d29ff{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8498970957894800631.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@26d7cef9, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Referencefile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Referencefile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Referencefile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Referencefile
Not known whether passed class name [sw.entity.Referencefile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Referencefile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_2_, group_.info as info3_2_, group_.user_id as user_id5_2_, group_.name as name4_2_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5332a0e6]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7bf481]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14608cd7]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@323441ae]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a0b9d0]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1220b0b2]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20fb7830]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c833f92]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb1a590]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@122a3bfd]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77b0f985]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9e6cb]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41cfc0ba]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3db946]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@373fd774]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@228d3a2a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@356d50b4]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24eb6a64]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7c48b9]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49baa664]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36fd4d7d]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51008b2d]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_5_, proref_.ref_pro_id as ref_pro_3_5_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2062990e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f32449]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e6dc6fd]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c619b2c]
Visiting attribute path : referencefile.fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_7_2_}
          - JOIN (JoinDefinedByMetadata(referencefile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Referencefile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_, project1_.id as id1_4_1_, project1_.create_date as create_d2_4_1_, project1_.description as descript3_4_1_, project1_.name as name4_4_1_, project1_.user_id as user_id5_4_1_, user2_.id as id1_7_2_, user2_.email as email2_7_2_, user2_.name as name3_7_2_, user2_.password as password4_7_2_, user2_.tel as tel5_7_2_, referencef3_.id as id1_6_3_, referencef3_.file_name as file_nam2_6_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a9c3841]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b698d67]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38dcc1a1]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a037625]
Visiting attribute path : referencefile.fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_7_2_}
          - JOIN (JoinDefinedByMetadata(referencefile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Referencefile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_, project1_.id as id1_4_1_, project1_.create_date as create_d2_4_1_, project1_.description as descript3_4_1_, project1_.name as name4_4_1_, project1_.user_id as user_id5_4_1_, user2_.id as id1_7_2_, user2_.email as email2_7_2_, user2_.name as name3_7_2_, user2_.password as password4_7_2_, user2_.tel as tel5_7_2_, referencef3_.id as id1_6_3_, referencef3_.file_name as file_nam2_6_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a260498]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10ba936b]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c3ccbb9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f40262]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78fb368b]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62005b2e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74f1b21e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f165299]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f2fa37e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6379fc7]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56b829af]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@540e4455]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6efd30b4]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3ca31e]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1db664c0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ac99f52]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a264ac]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@361c931c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f9a982]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d72709b]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f249a5a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bc9185]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7da4c3e7]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66497043]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@108ff5b6]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cc96dfa]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12fdb48]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_7_, user_.name as name3_7_, user_.password as password4_7_, user_.tel as tel5_7_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee2ac9e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37ac3a30]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@335b91c0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cff1c7a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49899386]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@419cdd85]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c1f0cf8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e25100b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efdd192]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@523f317]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64852140]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_8_, usergroup_.group_id as group_id4_8_, usergroup_.is_headman as is_headm3_8_, usergroup_.modify_userid as modify_u5_8_, usergroup_.project_id as project_6_8_, usergroup_.user_id as user_id7_8_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d663e5e]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@348c8132]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@216da2ed]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79fd8acc]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47a2b4f0]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0345e4]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c675da]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_7_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_7_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_7_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_7_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_, group1_.id as id1_2_1_, group1_.create_date as create_d2_2_1_, group1_.info as info3_2_1_, group1_.user_id as user_id5_2_1_, group1_.name as name4_2_1_, user2_.id as id1_7_2_, user2_.email as email2_7_2_, user2_.name as name3_7_2_, user2_.password as password4_7_2_, user2_.tel as tel5_7_2_, user3_.id as id1_7_3_, user3_.email as email2_7_3_, user3_.name as name3_7_3_, user3_.password as password4_7_3_, user3_.tel as tel5_7_3_, project4_.id as id1_4_4_, project4_.create_date as create_d2_4_4_, project4_.description as descript3_4_4_, project4_.name as name4_4_4_, project4_.user_id as user_id5_4_4_, user5_.id as id1_7_5_, user5_.email as email2_7_5_, user5_.name as name3_7_5_, user5_.password as password4_7_5_, user5_.tel as tel5_7_5_, user6_.id as id1_7_6_, user6_.email as email2_7_6_, user6_.name as name3_7_6_, user6_.password as password4_7_6_, user6_.tel as tel5_7_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2538b839]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e9a61bb]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@594402f]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ae63b5d]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16fc4915]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aed4e4c]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6834767a]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_7_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_7_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_7_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_7_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_, group1_.id as id1_2_1_, group1_.create_date as create_d2_2_1_, group1_.info as info3_2_1_, group1_.user_id as user_id5_2_1_, group1_.name as name4_2_1_, user2_.id as id1_7_2_, user2_.email as email2_7_2_, user2_.name as name3_7_2_, user2_.password as password4_7_2_, user2_.tel as tel5_7_2_, user3_.id as id1_7_3_, user3_.email as email2_7_3_, user3_.name as name3_7_3_, user3_.password as password4_7_3_, user3_.tel as tel5_7_3_, project4_.id as id1_4_4_, project4_.create_date as create_d2_4_4_, project4_.description as descript3_4_4_, project4_.name as name4_4_4_, project4_.user_id as user_id5_4_4_, user5_.id as id1_7_5_, user5_.email as email2_7_5_, user5_.name as name3_7_5_, user5_.password as password4_7_5_, user5_.tel as tel5_7_5_, user6_.id as id1_7_6_, user6_.email as email2_7_6_, user6_.name as name3_7_6_, user6_.password as password4_7_6_, user6_.tel as tel5_7_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1ab192]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a9f53c7]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e85a5cf]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@679a1fac]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d425708]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d133e0c]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ab58b0]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@365eb29a]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62690903]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@364b4253]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5546f2f2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cc47279]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50f1f668]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32424fe6]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e64c34c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@412c3543]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eac98f7]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462a42cd]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@660cf166]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e09806]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cd1cd0d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ff8fd8]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b2d0049]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69b60584]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f4a5c8c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a0e91f2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20415d23]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da2cb9b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@438d46dc]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d0ccc62]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78e34a5]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5519cb27]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ebd723a]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68605654]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8737ad]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@515c9d29]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ebd39b8]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d74559d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@87422cf]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b12392]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2366aa45]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@156af408]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@184ae884]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee84d4a]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c23a60d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_3_, menu_.name as name3_3_, menu_.pid as pid4_3_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eabcf35]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7da48fd6]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c64f371]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4459b375]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71689459]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379f4a8a]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@484ef485]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fa7a702]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@565c8a75]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d7fa269]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3be7d3fe]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.Referencefile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.file_name as file_nam2_6_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (file_name, id) values (?, ?)
 Update 0: update t_referencefile set file_name=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (file_name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70db6602]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [NONE]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bdeef6d]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [READ]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f42be73]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [UPGRADE]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7020230f]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [UPGRADE_NOWAIT]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f108361]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac772ac]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [FORCE]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c45bafb]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [PESSIMISTIC_READ]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@269717ec]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d852f1]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12c23786]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [OPTIMISTIC]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c03837f]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Referencefile: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Referencefile: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_4_, project_.description as descript3_4_, project_.name as name4_4_, project_.user_id as user_id5_4_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10e9a6fe]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2c56f9]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@676601d0]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40ac9b3]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b71838]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@185ef5d7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d9ac447]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@259ce760]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a035e49]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a92c341]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f78e94]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293addee]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554e8b43]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a22406a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7588396d]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c8ead67]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44b7878c]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49447ee2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60080738]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ca670d6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67fa0ce]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ece496]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a93183d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159c510b]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_3_1_, menu1_.href as href2_3_1_, menu1_.name as name3_3_1_, menu1_.pid as pid4_3_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a67f4d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e2b778d]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_3_1_, menu1_.href as href2_3_1_, menu1_.name as name3_3_1_, menu1_.pid as pid4_3_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29fd0a93]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e035a9]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@537317e4]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14453b50]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534f090c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@532cba4a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e8e84c4]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1af02a3a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb83dc4]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64414ce5]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7b0bad]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@758c5a5c]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b44166c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ce9ec5e]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ba00d25]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1639488c]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75d1cd09]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a7143ef]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76501305]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a9b59e5]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6beb16]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@103b7c78]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e7e717]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302e6d3a]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@609e0ae7]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_7_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_3_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_7_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_3_2_, menu2_.href as href2_3_2_, menu2_.name as name3_3_2_, menu2_.pid as pid4_3_2_, group3_.id as id1_2_3_, group3_.create_date as create_d2_2_3_, group3_.info as info3_2_3_, group3_.user_id as user_id5_2_3_, group3_.name as name4_2_3_, user4_.id as id1_7_4_, user4_.email as email2_7_4_, user4_.name as name3_7_4_, user4_.password as password4_7_4_, user4_.tel as tel5_7_4_, menu5_.id as id1_3_5_, menu5_.href as href2_3_5_, menu5_.name as name3_3_5_, menu5_.pid as pid4_3_5_, user6_.id as id1_7_6_, user6_.email as email2_7_6_, user6_.name as name3_7_6_, user6_.password as password4_7_6_, user6_.tel as tel5_7_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30802544]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@129f3f28]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76d85aa8]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29024a2c]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45480874]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ce2bde]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ac7381b]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_7_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_3_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_7_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_3_2_, menu2_.href as href2_3_2_, menu2_.name as name3_3_2_, menu2_.pid as pid4_3_2_, group3_.id as id1_2_3_, group3_.create_date as create_d2_2_3_, group3_.info as info3_2_3_, group3_.user_id as user_id5_2_3_, group3_.name as name4_2_3_, user4_.id as id1_7_4_, user4_.email as email2_7_4_, user4_.name as name3_7_4_, user4_.password as password4_7_4_, user4_.tel as tel5_7_4_, menu5_.id as id1_3_5_, menu5_.href as href2_3_5_, menu5_.name as name3_3_5_, menu5_.pid as pid4_3_5_, user6_.id as id1_7_6_, user6_.email as email2_7_6_, user6_.name as name3_7_6_, user6_.password as password4_7_6_, user6_.tel as tel5_7_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e28abf]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32bd27fd]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@695b4377]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3a8b91]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40cdca89]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b949fa2]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@436a57c2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d5d54a4]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@528bbf22]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43473fe8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5202a405]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a80e5b7]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20423970]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67a783f1]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf2fc0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@682179e]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c59828a]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200721a7]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@362fecde]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50cf6383]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70a2e6c2]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b1b38c]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc90f62]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cba6c2f]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a36b07b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27364f62]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b23255a]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6429f32d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71f1fd95]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a5a2d7c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6811d498]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3de9a28d]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46235981]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2070e0c9]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@347fed79]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44f2ccb1]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f10b786]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744f9138]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@268a5c44]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350f4cf8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f997158]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@734be300]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cec191d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78bbbc69]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@406a3d5b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4c03bd9a
Registering SessionFactory: 2fa7c57c-3b80-4c35-9a99-870377e426b2 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3f7e1a27
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'projectController': Unsatisfied dependency expressed through field 'groupAuthService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'sw.service.IGroupAuthManger' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 12088 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67bd1999: startup date [Wed Nov 15 20:36:48 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ec4f41b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3432 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5c2e38f8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1a68c861{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.Action
		sw.entity.ActionGroup
		sw.entity.Group
		sw.entity.Menu
		sw.entity.Project
		sw.entity.ProRef
		sw.entity.Referencefile
		sw.entity.User
		sw.entity.UserGroup]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@50af2ce2
Adding type registration boolean -> org.hibernate.type.BooleanType@50af2ce2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@50af2ce2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b92b777
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1af4afbc
Adding type registration yes_no -> org.hibernate.type.YesNoType@59fcd0f5
Adding type registration byte -> org.hibernate.type.ByteType@50fe1d15
Adding type registration byte -> org.hibernate.type.ByteType@50fe1d15
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@50fe1d15
Adding type registration character -> org.hibernate.type.CharacterType@3c98f837
Adding type registration char -> org.hibernate.type.CharacterType@3c98f837
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c98f837
Adding type registration short -> org.hibernate.type.ShortType@570ca38f
Adding type registration short -> org.hibernate.type.ShortType@570ca38f
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@570ca38f
Adding type registration integer -> org.hibernate.type.IntegerType@5ff2c82f
Adding type registration int -> org.hibernate.type.IntegerType@5ff2c82f
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5ff2c82f
Adding type registration long -> org.hibernate.type.LongType@492eddd4
Adding type registration long -> org.hibernate.type.LongType@492eddd4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@492eddd4
Adding type registration float -> org.hibernate.type.FloatType@37c394f7
Adding type registration float -> org.hibernate.type.FloatType@37c394f7
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37c394f7
Adding type registration double -> org.hibernate.type.DoubleType@3f9449ba
Adding type registration double -> org.hibernate.type.DoubleType@3f9449ba
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f9449ba
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7fa25c36
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7fa25c36
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f761d51
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f761d51
Adding type registration string -> org.hibernate.type.StringType@72cfa8fc
Adding type registration java.lang.String -> org.hibernate.type.StringType@72cfa8fc
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@163aac1
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1c0b97a3
Adding type registration url -> org.hibernate.type.UrlType@187a4a13
Adding type registration java.net.URL -> org.hibernate.type.UrlType@187a4a13
Adding type registration date -> org.hibernate.type.DateType@2d245416
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d245416
Adding type registration time -> org.hibernate.type.TimeType@41315158
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@41315158
Adding type registration timestamp -> org.hibernate.type.TimestampType@26cd69ce
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@26cd69ce
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@26cd69ce
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6e4103a4
Adding type registration calendar -> org.hibernate.type.CalendarType@88fe420
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@88fe420
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@88fe420
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b9a3ca7
Adding type registration locale -> org.hibernate.type.LocaleType@53d25e27
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53d25e27
Adding type registration currency -> org.hibernate.type.CurrencyType@3ef35e3a
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3ef35e3a
Adding type registration timezone -> org.hibernate.type.TimeZoneType@62dea91f
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@62dea91f
Adding type registration class -> org.hibernate.type.ClassType@34918073
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@34918073
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@59159577
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@59159577
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1851d55c
Adding type registration binary -> org.hibernate.type.BinaryType@7aa7836b
Adding type registration byte[] -> org.hibernate.type.BinaryType@7aa7836b
Adding type registration [B -> org.hibernate.type.BinaryType@7aa7836b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@71486004
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@71486004
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@71486004
Adding type registration row_version -> org.hibernate.type.RowVersionType@5be87b2c
Adding type registration image -> org.hibernate.type.ImageType@691f820c
Adding type registration characters -> org.hibernate.type.CharArrayType@78d3ef44
Adding type registration char[] -> org.hibernate.type.CharArrayType@78d3ef44
Adding type registration [C -> org.hibernate.type.CharArrayType@78d3ef44
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5edc215
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5edc215
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5edc215
Adding type registration text -> org.hibernate.type.TextType@65395e3e
Adding type registration ntext -> org.hibernate.type.NTextType@635df795
Adding type registration blob -> org.hibernate.type.BlobType@50e0953c
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@50e0953c
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b59376a
Adding type registration clob -> org.hibernate.type.ClobType@54775355
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@54775355
Adding type registration nclob -> org.hibernate.type.NClobType@20aa4ed
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20aa4ed
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1f454c6e
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f80dc39
Adding type registration serializable -> org.hibernate.type.SerializableType@74ebde30
Adding type registration object -> org.hibernate.type.ObjectType@1d4f762c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d4f762c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33249d41
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@55bc631f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48bd13db
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a2150d8
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d781e48
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@bea2663
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2b69cf0e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b6eed2b
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Group
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Group
Bind entity sw.entity.Group on table t_group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=info, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property info with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:info]
building SimpleValue for info
Building property info
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_group), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Group:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.ProRef
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ProRef
Bind entity sw.entity.ProRef on table t_project_refence
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ProRef:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='ref_pro_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project_refence), mappingColumn=referencefile, insertable=true, updatable=true, unique=false}
Building property referencefile
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Binding entity from annotated class: sw.entity.UserGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserGroup
Bind entity sw.entity.UserGroup on table t_usergroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=is_headman, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isHeadman with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.UserGroup:isHeadman]
building SimpleValue for isHeadman
Building property isHeadman
Binding column: Ejb3JoinColumn{logicalColumnName='modify_userid', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Binding column: Ejb3JoinColumn{logicalColumnName='project_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=project, insertable=true, updatable=true, unique=false}
Building property project
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_usergroup), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Menu
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Menu
Bind entity sw.entity.Menu on table t_menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=href, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property href with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:href]
building SimpleValue for href
Building property href
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_menu), mappingColumn=pid, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property pid with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Menu:pid]
building SimpleValue for pid
Building property pid
Binding entity from annotated class: sw.entity.Referencefile
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Referencefile
Bind entity sw.entity.Referencefile on table t_referencefile
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Referencefile:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_referencefile), mappingColumn=file_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property fileName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Referencefile:fileName]
building SimpleValue for fileName
Building property fileName
Binding entity from annotated class: sw.entity.Project
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Project
Bind entity sw.entity.Project on table t_project
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:description]
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Project:name]
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_project), mappingColumn=user, insertable=true, updatable=true, unique=false}
Building property user
Binding entity from annotated class: sw.entity.Action
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Action
Bind entity sw.entity.Action on table t_action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_action), mappingColumn=url, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property url with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Action:url]
building SimpleValue for url
Building property url
Binding entity from annotated class: sw.entity.ActionGroup
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ActionGroup
Bind entity sw.entity.ActionGroup on table t_actiongroup
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='action_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=action, insertable=true, updatable=true, unique=false}
Building property action
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property createDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.ActionGroup:createDate]
building SimpleValue for createDate
Building property createDate
Binding column: Ejb3JoinColumn{logicalColumnName='group_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3JoinColumn{logicalColumnName='menu_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=menu, insertable=true, updatable=true, unique=false}
Building property menu
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_actiongroup), mappingColumn=modify_user, insertable=true, updatable=true, unique=false}
Building property modifyUser
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for info
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for isHeadman
Starting fillSimpleValue for id
Starting fillSimpleValue for href
Starting fillSimpleValue for name
Starting fillSimpleValue for pid
Starting fillSimpleValue for id
Starting fillSimpleValue for fileName
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Starting fillSimpleValue for description
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for url
Starting fillSimpleValue for id
Starting fillSimpleValue for createDate
Forcing column [id] to be non-null as it is part of the primary key for table [t_group]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project_refence]
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Forcing column [id] to be non-null as it is part of the primary key for table [t_usergroup]
Forcing column [id] to be non-null as it is part of the primary key for table [t_menu]
Forcing column [id] to be non-null as it is part of the primary key for table [t_referencefile]
Forcing column [id] to be non-null as it is part of the primary key for table [t_project]
Forcing column [id] to be non-null as it is part of the primary key for table [t_action]
Forcing column [id] to be non-null as it is part of the primary key for table [t_actiongroup]
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.Referencefile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.Action
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.Menu
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.Referencefile
Resolving reference to class: sw.entity.Group
Resolving reference to class: sw.entity.User
Resolving reference to class: sw.entity.Project
Resolving reference to class: sw.entity.User
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@588cc16a
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2371174670582011803.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12088, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@34303565, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1a68c861{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2371174670582011803.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@143edacb, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Referencefile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Referencefile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.Group] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Group
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.ProRef] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ProRef
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.UserGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.UserGroup
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Menu] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Menu
Not known whether passed class name [sw.entity.Referencefile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Referencefile
Not known whether passed class name [sw.entity.Referencefile] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Referencefile
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Project] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Project
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.Action] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Action
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Not known whether passed class name [sw.entity.ActionGroup] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.ActionGroup
Static SQL for entity: sw.entity.Group
 Version select: select id from t_group where id =?
 Snapshot select: select group_.id, group_.create_date as create_d2_2_, group_.info as info3_2_, group_.user_id as user_id5_2_, group_.name as name4_2_ from t_group group_ where group_.id=?
 Insert 0: insert into t_group (create_date, info, user_id, name, id) values (?, ?, ?, ?, ?)
 Update 0: update t_group set create_date=?, info=?, user_id=?, name=? where id=?
 Delete 0: delete from t_group where id=?
 Identity insert: insert into t_group (create_date, info, user_id, name) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e332cb5]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5253a2df]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

Static select for entity sw.entity.Group [NONE]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd178c1]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79f6916]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

Static select for entity sw.entity.Group [READ]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@580fef77]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a8f83a0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [UPGRADE]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ca418f]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cf216a7]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [UPGRADE_NOWAIT]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a06101a]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@642be29a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [UPGRADE_SKIPLOCKED]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48409796]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cceb479]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [FORCE]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@174abc48]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f50f8d3]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_READ]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4664ea3c]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c548120]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@145a7619]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4436fd7]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb6b3fe]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c4f4773]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [OPTIMISTIC]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@736da0fa]
Visiting attribute path : createDate
Visiting attribute path : info
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ee4ce24]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Group)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Group, querySpaceUid=<gen:0>, path=sw.entity.Group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Group.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Group)
          - SQL table alias mapping - group0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity sw.entity.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Group: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Group: select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_ from t_group group0_ where group0_.id=?
Static SQL for entity: sw.entity.ProRef
 Version select: select id from t_project_refence where id =?
 Snapshot select: select proref_.id, proref_.project_id as project_2_5_, proref_.ref_pro_id as ref_pro_3_5_ from t_project_refence proref_ where proref_.id=?
 Insert 0: insert into t_project_refence (project_id, ref_pro_id, id) values (?, ?, ?)
 Update 0: update t_project_refence set project_id=?, ref_pro_id=? where id=?
 Delete 0: delete from t_project_refence where id=?
 Identity insert: insert into t_project_refence (project_id, ref_pro_id) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e20b4c3]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b1ca3d]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a53052b]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e5bebea]
Visiting attribute path : referencefile.fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_7_2_}
          - JOIN (JoinDefinedByMetadata(referencefile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Referencefile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.ProRef [NONE]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_, project1_.id as id1_4_1_, project1_.create_date as create_d2_4_1_, project1_.description as descript3_4_1_, project1_.name as name4_4_1_, project1_.user_id as user_id5_4_1_, user2_.id as id1_7_2_, user2_.email as email2_7_2_, user2_.name as name3_7_2_, user2_.password as password4_7_2_, user2_.tel as tel5_7_2_, referencef3_.id as id1_6_3_, referencef3_.file_name as file_nam2_6_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c66b03e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6286879b]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21287b6e]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d98533f]
Visiting attribute path : referencefile.fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.ProRef.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:3>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Project)
                - SQL table alias mapping - project1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_7_2_}
          - JOIN (JoinDefinedByMetadata(referencefile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Referencefile)
                - SQL table alias mapping - referencef3_
                - alias suffix - 3_
                - suffixed key columns - {id1_6_3_}

Static select for entity sw.entity.ProRef [READ]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_, project1_.id as id1_4_1_, project1_.create_date as create_d2_4_1_, project1_.description as descript3_4_1_, project1_.name as name4_4_1_, project1_.user_id as user_id5_4_1_, user2_.id as id1_7_2_, user2_.email as email2_7_2_, user2_.name as name3_7_2_, user2_.password as password4_7_2_, user2_.tel as tel5_7_2_, referencef3_.id as id1_6_3_, referencef3_.file_name as file_nam2_6_3_ from t_project_refence proref0_ left outer join t_project project1_ on proref0_.project_id=project1_.id left outer join t_user user2_ on project1_.user_id=user2_.id left outer join t_referencefile referencef3_ on proref0_.ref_pro_id=referencef3_.id where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61893f8b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a187c3]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15c08675]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [UPGRADE]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9d8621]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a26ef6]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16c0b359]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [UPGRADE_NOWAIT]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@473d832e]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3631806]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10aa3948]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [UPGRADE_SKIPLOCKED]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ba5fc80]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27369a50]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66979787]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [FORCE]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72422629]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dc0067c]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773187ec]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_READ]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14a1844d]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38363671]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4343c87c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_WRITE]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd8bfb5]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e27d3b]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b3f55b3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [PESSIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45047c76]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3104db]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c824e03]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a837429]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab1df73]
Visiting attribute path : referencefile
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14dd6a70]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ProRef)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ProRef, querySpaceUid=<gen:0>, path=sw.entity.ProRef)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:1>, path=sw.entity.ProRef.project)
          - EntityAttributeFetchImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:2>, path=sw.entity.ProRef.referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ProRef)
          - SQL table alias mapping - proref0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity sw.entity.ProRef [OPTIMISTIC_FORCE_INCREMENT]: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ProRef: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ProRef: select proref0_.id as id1_5_0_, proref0_.project_id as project_2_5_0_, proref0_.ref_pro_id as ref_pro_3_5_0_ from t_project_refence proref0_ where proref0_.id=?
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_7_, user_.name as name3_7_, user_.password as password4_7_, user_.tel as tel5_7_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@658e76fe]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f8c388]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fa60784]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b27f96f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b1fa54]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13959136]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31604756]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c74f40]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@489338ce]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec72bdd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10c613a1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Static SQL for entity: sw.entity.UserGroup
 Version select: select id from t_usergroup where id =?
 Snapshot select: select usergroup_.id, usergroup_.create_date as create_d2_8_, usergroup_.group_id as group_id4_8_, usergroup_.is_headman as is_headm3_8_, usergroup_.modify_userid as modify_u5_8_, usergroup_.project_id as project_6_8_, usergroup_.user_id as user_id7_8_ from t_usergroup usergroup_ where usergroup_.id=?
 Insert 0: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id, id) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update t_usergroup set create_date=?, group_id=?, is_headman=?, modify_userid=?, project_id=?, user_id=? where id=?
 Delete 0: delete from t_usergroup where id=?
 Identity insert: insert into t_usergroup (create_date, group_id, is_headman, modify_userid, project_id, user_id) values (?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23361c21]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@526edade]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a17ad2]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d57e369]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38db54e7]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b90786]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58bfbcf2]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_7_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_7_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_7_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_7_6_}

Static select for entity sw.entity.UserGroup [NONE]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_, group1_.id as id1_2_1_, group1_.create_date as create_d2_2_1_, group1_.info as info3_2_1_, group1_.user_id as user_id5_2_1_, group1_.name as name4_2_1_, user2_.id as id1_7_2_, user2_.email as email2_7_2_, user2_.name as name3_7_2_, user2_.password as password4_7_2_, user2_.tel as tel5_7_2_, user3_.id as id1_7_3_, user3_.email as email2_7_3_, user3_.name as name3_7_3_, user3_.password as password4_7_3_, user3_.tel as tel5_7_3_, project4_.id as id1_4_4_, project4_.create_date as create_d2_4_4_, project4_.description as descript3_4_4_, project4_.name as name4_4_4_, project4_.user_id as user_id5_4_4_, user5_.id as id1_7_5_, user5_.email as email2_7_5_, user5_.name as name3_7_5_, user5_.password as password4_7_5_, user5_.tel as tel5_7_5_, user6_.id as id1_7_6_, user6_.email as email2_7_6_, user6_.name as name3_7_6_, user6_.password as password4_7_6_, user6_.tel as tel5_7_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d7086e9]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f42cf20]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d23ddf]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c6def8c]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Visiting attribute path : project
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@319cc62b]
Visiting attribute path : project.createDate
Visiting attribute path : project.description
Visiting attribute path : project.name
Visiting attribute path : project.user
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f52cd1c]
Visiting attribute path : project.user.email
Visiting attribute path : project.user.name
Visiting attribute path : project.user.password
Visiting attribute path : project.user.tel
Visiting attribute path : user
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@436b8235]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.project)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:5>, path=sw.entity.UserGroup.project.user)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Group)
                - SQL table alias mapping - group1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_7_2_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_7_3_}
          - JOIN (JoinDefinedByMetadata(project)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.Project)
                - SQL table alias mapping - project4_
                - alias suffix - 4_
                - suffixed key columns - {id1_4_4_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.User)
                      - SQL table alias mapping - user5_
                      - alias suffix - 5_
                      - suffixed key columns - {id1_7_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_7_6_}

Static select for entity sw.entity.UserGroup [READ]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_, group1_.id as id1_2_1_, group1_.create_date as create_d2_2_1_, group1_.info as info3_2_1_, group1_.user_id as user_id5_2_1_, group1_.name as name4_2_1_, user2_.id as id1_7_2_, user2_.email as email2_7_2_, user2_.name as name3_7_2_, user2_.password as password4_7_2_, user2_.tel as tel5_7_2_, user3_.id as id1_7_3_, user3_.email as email2_7_3_, user3_.name as name3_7_3_, user3_.password as password4_7_3_, user3_.tel as tel5_7_3_, project4_.id as id1_4_4_, project4_.create_date as create_d2_4_4_, project4_.description as descript3_4_4_, project4_.name as name4_4_4_, project4_.user_id as user_id5_4_4_, user5_.id as id1_7_5_, user5_.email as email2_7_5_, user5_.name as name3_7_5_, user5_.password as password4_7_5_, user5_.tel as tel5_7_5_, user6_.id as id1_7_6_, user6_.email as email2_7_6_, user6_.name as name3_7_6_, user6_.password as password4_7_6_, user6_.tel as tel5_7_6_ from t_usergroup usergroup0_ left outer join t_group group1_ on usergroup0_.group_id=group1_.id left outer join t_user user2_ on group1_.user_id=user2_.id left outer join t_user user3_ on usergroup0_.modify_userid=user3_.id left outer join t_project project4_ on usergroup0_.project_id=project4_.id left outer join t_user user5_ on project4_.user_id=user5_.id left outer join t_user user6_ on usergroup0_.user_id=user6_.id where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64123a92]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6267d39e]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260252fd]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b12a05]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3b4756]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [UPGRADE]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669c98ac]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8064268]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68e7a5c9]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a3c0981]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55670b85]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_NOWAIT]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc80643]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302e5954]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5df847f7]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@722db815]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699e5111]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [UPGRADE_SKIPLOCKED]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b38418f]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b928779]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@301f5dc3]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c25676]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef236d2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [FORCE]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5164cd3a]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50e5f76b]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fde0f03]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58240adf]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3887a1a8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_READ]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4726477c]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d57dba]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65da1ae9]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b2bc89]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@777e1b8d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_WRITE]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c8d8075]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce67b14]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc3bb76]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b9d1c53]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c4dc04f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [PESSIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43cc3a09]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@668ed062]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74532b44]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@566d5bb5]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12e3c23c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fe1dc2]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53965167]
Visiting attribute path : isHeadman
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe88b0b]
Visiting attribute path : project
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d8a8d39]
Visiting attribute path : user
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1251e3c5]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.UserGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.UserGroup, querySpaceUid=<gen:0>, path=sw.entity.UserGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:1>, path=sw.entity.UserGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:2>, path=sw.entity.UserGroup.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Project, querySpaceUid=<gen:3>, path=sw.entity.UserGroup.project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.UserGroup.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.UserGroup)
          - SQL table alias mapping - usergroup0_
          - alias suffix - 0_
          - suffixed key columns - {id1_8_0_}

Static select for entity sw.entity.UserGroup [OPTIMISTIC_FORCE_INCREMENT]: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.UserGroup: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.UserGroup: select usergroup0_.id as id1_8_0_, usergroup0_.create_date as create_d2_8_0_, usergroup0_.group_id as group_id4_8_0_, usergroup0_.is_headman as is_headm3_8_0_, usergroup0_.modify_userid as modify_u5_8_0_, usergroup0_.project_id as project_6_8_0_, usergroup0_.user_id as user_id7_8_0_ from t_usergroup usergroup0_ where usergroup0_.id=?
Static SQL for entity: sw.entity.Menu
 Version select: select id from t_menu where id =?
 Snapshot select: select menu_.id, menu_.href as href2_3_, menu_.name as name3_3_, menu_.pid as pid4_3_ from t_menu menu_ where menu_.id=?
 Insert 0: insert into t_menu (href, name, pid, id) values (?, ?, ?, ?)
 Update 0: update t_menu set href=?, name=?, pid=? where id=?
 Delete 0: delete from t_menu where id=?
 Identity insert: insert into t_menu (href, name, pid) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73ad8581]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [NONE]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119c5340]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [READ]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1350d8e8]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [UPGRADE]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fbdd9bc]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [UPGRADE_NOWAIT]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a081cf]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [UPGRADE_SKIPLOCKED]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9689dc4]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [FORCE]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd18c1f]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_READ]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bf99e5]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_WRITE]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a2c657]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [PESSIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45bc5b98]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bf90ee4]
Visiting attribute path : href
Visiting attribute path : name
Visiting attribute path : pid
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Menu)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Menu, querySpaceUid=<gen:0>, path=sw.entity.Menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Menu)
          - SQL table alias mapping - menu0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity sw.entity.Menu [OPTIMISTIC_FORCE_INCREMENT]: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Menu: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Menu: select menu0_.id as id1_3_0_, menu0_.href as href2_3_0_, menu0_.name as name3_3_0_, menu0_.pid as pid4_3_0_ from t_menu menu0_ where menu0_.id=?
Static SQL for entity: sw.entity.Referencefile
 Version select: select id from t_referencefile where id =?
 Snapshot select: select referencef_.id, referencef_.file_name as file_nam2_6_ from t_referencefile referencef_ where referencef_.id=?
 Insert 0: insert into t_referencefile (file_name, id) values (?, ?)
 Update 0: update t_referencefile set file_name=? where id=?
 Delete 0: delete from t_referencefile where id=?
 Identity insert: insert into t_referencefile (file_name) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e33b7a1]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [NONE]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e11d79]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [READ]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7f1c32]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [UPGRADE]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30df4659]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [UPGRADE_NOWAIT]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7acd1d66]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [UPGRADE_SKIPLOCKED]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1262e6e0]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [FORCE]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74f5105d]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [PESSIMISTIC_READ]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@565ef1a]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [PESSIMISTIC_WRITE]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375ff544]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [PESSIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37179bb8]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [OPTIMISTIC]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37aae539]
Visiting attribute path : fileName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Referencefile)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Referencefile, querySpaceUid=<gen:0>, path=sw.entity.Referencefile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Referencefile)
          - SQL table alias mapping - referencef0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

Static select for entity sw.entity.Referencefile [OPTIMISTIC_FORCE_INCREMENT]: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Referencefile: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Referencefile: select referencef0_.id as id1_6_0_, referencef0_.file_name as file_nam2_6_0_ from t_referencefile referencef0_ where referencef0_.id=?
Static SQL for entity: sw.entity.Project
 Version select: select id from t_project where id =?
 Snapshot select: select project_.id, project_.create_date as create_d2_4_, project_.description as descript3_4_, project_.name as name4_4_, project_.user_id as user_id5_4_ from t_project project_ where project_.id=?
 Insert 0: insert into t_project (create_date, description, name, user_id, id) values (?, ?, ?, ?, ?)
 Update 0: update t_project set create_date=?, description=?, name=?, user_id=? where id=?
 Delete 0: delete from t_project where id=?
 Identity insert: insert into t_project (create_date, description, name, user_id) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2482749c]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5659df8]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

Static select for entity sw.entity.Project [NONE]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@283b621]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f884892]
Visiting attribute path : user.email
Visiting attribute path : user.name
Visiting attribute path : user.password
Visiting attribute path : user.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

Static select for entity sw.entity.Project [READ]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45868c68]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f91804]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [UPGRADE]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708dfb72]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e3304a6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [UPGRADE_NOWAIT]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b0045c]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c9a18f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [UPGRADE_SKIPLOCKED]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72499f84]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@240adfcc]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [FORCE]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d66c71b]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0051cb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_READ]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78860bf8]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eb7e8b0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_WRITE]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b17ca4]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7358e4c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [PESSIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26e60472]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6630b916]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [OPTIMISTIC]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d5c0c72]
Visiting attribute path : createDate
Visiting attribute path : description
Visiting attribute path : name
Visiting attribute path : user
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a10aa0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Project)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Project, querySpaceUid=<gen:0>, path=sw.entity.Project)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:1>, path=sw.entity.Project.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Project)
          - SQL table alias mapping - project0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

Static select for entity sw.entity.Project [OPTIMISTIC_FORCE_INCREMENT]: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Project: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Project: select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_ from t_project project0_ where project0_.id=?
Static SQL for entity: sw.entity.Action
 Version select: select id from t_action where id =?
 Snapshot select: select action_.id, action_.menu_id as menu_id4_0_, action_.name as name2_0_, action_.url as url3_0_ from t_action action_ where action_.id=?
 Insert 0: insert into t_action (menu_id, name, url, id) values (?, ?, ?, ?)
 Update 0: update t_action set menu_id=?, name=?, url=? where id=?
 Delete 0: delete from t_action where id=?
 Identity insert: insert into t_action (menu_id, name, url) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3af8ab]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7727cc64]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for entity sw.entity.Action [NONE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_3_1_, menu1_.href as href2_3_1_, menu1_.name as name3_3_1_, menu1_.pid as pid4_3_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b906fd9]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@160008a4]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for entity sw.entity.Action [READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_, menu1_.id as id1_3_1_, menu1_.href as href2_3_1_, menu1_.name as name3_3_1_, menu1_.pid as pid4_3_1_ from t_action action0_ left outer join t_menu menu1_ on action0_.menu_id=menu1_.id where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20fa0057]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4487b89]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ebfd266]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34c4016a]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_NOWAIT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7397a048]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a43eea]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [UPGRADE_SKIPLOCKED]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557fb8e5]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43320aa8]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [FORCE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23813f4a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b7ce08]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_READ]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6503e53c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cda9477]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_WRITE]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4495d46a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66227e95]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [PESSIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec3370a]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d53885]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f6387c]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fcc8ca4]
Visiting attribute path : name
Visiting attribute path : url
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Action)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Action, querySpaceUid=<gen:0>, path=sw.entity.Action)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:1>, path=sw.entity.Action.menu)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Action)
          - SQL table alias mapping - action0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.Action [OPTIMISTIC_FORCE_INCREMENT]: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Action: select action0_.id as id1_0_0_, action0_.menu_id as menu_id4_0_0_, action0_.name as name2_0_0_, action0_.url as url3_0_0_ from t_action action0_ where action0_.id=?
Static SQL for entity: sw.entity.ActionGroup
 Version select: select id from t_actiongroup where id =?
 Snapshot select: select actiongrou_.id, actiongrou_.action_id as action_i3_1_, actiongrou_.create_date as create_d2_1_, actiongrou_.group_id as group_id4_1_, actiongrou_.menu_id as menu_id5_1_, actiongrou_.user_id as user_id6_1_ from t_actiongroup actiongrou_ where actiongrou_.id=?
 Insert 0: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update t_actiongroup set action_id=?, create_date=?, group_id=?, menu_id=?, user_id=? where id=?
 Delete 0: delete from t_actiongroup where id=?
 Identity insert: insert into t_actiongroup (action_id, create_date, group_id, menu_id, user_id) values (?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@537182c8]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54f91f0f]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1073bc7b]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35fa0556]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f3fecfa]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@584faaa5]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab21b88]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_7_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_3_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_7_6_}

Static select for entity sw.entity.ActionGroup [NONE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_3_2_, menu2_.href as href2_3_2_, menu2_.name as name3_3_2_, menu2_.pid as pid4_3_2_, group3_.id as id1_2_3_, group3_.create_date as create_d2_2_3_, group3_.info as info3_2_3_, group3_.user_id as user_id5_2_3_, group3_.name as name4_2_3_, user4_.id as id1_7_4_, user4_.email as email2_7_4_, user4_.name as name3_7_4_, user4_.password as password4_7_4_, user4_.tel as tel5_7_4_, menu5_.id as id1_3_5_, menu5_.href as href2_3_5_, menu5_.name as name3_3_5_, menu5_.pid as pid4_3_5_, user6_.id as id1_7_6_, user6_.email as email2_7_6_, user6_.name as name3_7_6_, user6_.password as password4_7_6_, user6_.tel as tel5_7_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74db23bc]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@670c11ee]
Visiting attribute path : action.menu
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e7afabc]
Visiting attribute path : action.menu.href
Visiting attribute path : action.menu.name
Visiting attribute path : action.menu.pid
Visiting attribute path : action.name
Visiting attribute path : action.url
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@355630bf]
Visiting attribute path : group.createDate
Visiting attribute path : group.info
Visiting attribute path : group.modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40701f51]
Visiting attribute path : group.modifyUser.email
Visiting attribute path : group.modifyUser.name
Visiting attribute path : group.modifyUser.password
Visiting attribute path : group.modifyUser.tel
Visiting attribute path : group.name
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e5d2]
Visiting attribute path : menu.href
Visiting attribute path : menu.name
Visiting attribute path : menu.pid
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c6c04e8]
Visiting attribute path : modifyUser.email
Visiting attribute path : modifyUser.name
Visiting attribute path : modifyUser.password
Visiting attribute path : modifyUser.tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
             - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.action.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.group)
             - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.group.modifyUser)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:5>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:6>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(action)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.Action)
                - SQL table alias mapping - action1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(menu)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=sw.entity.Menu)
                      - SQL table alias mapping - menu2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
          - JOIN (JoinDefinedByMetadata(group)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=sw.entity.Group)
                - SQL table alias mapping - group3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}
                - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=sw.entity.User)
                      - SQL table alias mapping - user4_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_7_4_}
          - JOIN (JoinDefinedByMetadata(menu)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=sw.entity.Menu)
                - SQL table alias mapping - menu5_
                - alias suffix - 5_
                - suffixed key columns - {id1_3_5_}
          - JOIN (JoinDefinedByMetadata(modifyUser)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=sw.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {id1_7_6_}

Static select for entity sw.entity.ActionGroup [READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_, action1_.id as id1_0_1_, action1_.menu_id as menu_id4_0_1_, action1_.name as name2_0_1_, action1_.url as url3_0_1_, menu2_.id as id1_3_2_, menu2_.href as href2_3_2_, menu2_.name as name3_3_2_, menu2_.pid as pid4_3_2_, group3_.id as id1_2_3_, group3_.create_date as create_d2_2_3_, group3_.info as info3_2_3_, group3_.user_id as user_id5_2_3_, group3_.name as name4_2_3_, user4_.id as id1_7_4_, user4_.email as email2_7_4_, user4_.name as name3_7_4_, user4_.password as password4_7_4_, user4_.tel as tel5_7_4_, menu5_.id as id1_3_5_, menu5_.href as href2_3_5_, menu5_.name as name3_3_5_, menu5_.pid as pid4_3_5_, user6_.id as id1_7_6_, user6_.email as email2_7_6_, user6_.name as name3_7_6_, user6_.password as password4_7_6_, user6_.tel as tel5_7_6_ from t_actiongroup actiongrou0_ left outer join t_action action1_ on actiongrou0_.action_id=action1_.id left outer join t_menu menu2_ on action1_.menu_id=menu2_.id left outer join t_group group3_ on actiongrou0_.group_id=group3_.id left outer join t_user user4_ on group3_.user_id=user4_.id left outer join t_menu menu5_ on actiongrou0_.menu_id=menu5_.id left outer join t_user user6_ on actiongrou0_.user_id=user6_.id where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8eaeb]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10f039b0]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de368ad]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a4b3a48]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f2589ae]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e091443]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b335d04]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38b8d735]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e85776d]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf03343]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_NOWAIT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6a9e44]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@612edea3]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b9e93ee]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7548a267]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e8cc876]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [UPGRADE_SKIPLOCKED]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2940c2c2]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e5e8db]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ef25509]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@210bc0c7]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@363d680c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [FORCE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fe7ed20]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cd35c83]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71f33c1d]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d41ee]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6c8de4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_READ]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@696de5ce]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aff9cd7]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51472fc1]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5782f3b2]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@675d6907]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_WRITE]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7152481f]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59dc2722]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c5684f]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b4c058]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3572538d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [PESSIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d2f9736]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63f0b9ee]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44397026]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35ded9b0]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76c576a6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@109c8e59]
Visiting attribute path : action
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c7b3d20]
Visiting attribute path : createDate
Visiting attribute path : group
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@156004f]
Visiting attribute path : menu
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@754ca87a]
Visiting attribute path : modifyUser
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@318228eb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.ActionGroup)
    - Returns
       - EntityReturnImpl(entity=sw.entity.ActionGroup, querySpaceUid=<gen:0>, path=sw.entity.ActionGroup)
          - EntityAttributeFetchImpl(entity=sw.entity.Action, querySpaceUid=<gen:1>, path=sw.entity.ActionGroup.action)
          - EntityAttributeFetchImpl(entity=sw.entity.Group, querySpaceUid=<gen:2>, path=sw.entity.ActionGroup.group)
          - EntityAttributeFetchImpl(entity=sw.entity.Menu, querySpaceUid=<gen:3>, path=sw.entity.ActionGroup.menu)
          - EntityAttributeFetchImpl(entity=sw.entity.User, querySpaceUid=<gen:4>, path=sw.entity.ActionGroup.modifyUser)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.ActionGroup)
          - SQL table alias mapping - actiongrou0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.ActionGroup [OPTIMISTIC_FORCE_INCREMENT]: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.ActionGroup: select actiongrou0_.id as id1_1_0_, actiongrou0_.action_id as action_i3_1_0_, actiongrou0_.create_date as create_d2_1_0_, actiongrou0_.group_id as group_id4_1_0_, actiongrou0_.menu_id as menu_id5_1_0_, actiongrou0_.user_id as user_id6_1_0_ from t_actiongroup actiongrou0_ where actiongrou0_.id=?
Instantiated session factory
HHH000228: Running hbm2ddl schema update
No alter strings for table : t_action
No alter strings for table : t_actiongroup
No alter strings for table : t_group
No alter strings for table : t_menu
No alter strings for table : t_project
No alter strings for table : t_project_refence
No alter strings for table : t_referencefile
No alter strings for table : t_user
No alter strings for table : t_usergroup
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@43b15bf9
Registering SessionFactory: f6dcaca9-30c0-4818-8714-ffea103adf3b (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@fffc36d
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67bd1999: startup date [Wed Nov 15 20:36:48 CST 2017]; root of context hierarchy
Mapped "{[/pro/menu]}" onto public sw.model.MMenu sw.controller.ProjectController.findByroot()
Mapped "{[/pro/updateProject],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.updateProject(sw.entity.Project)
Mapped "{[/pro/findAllGroups/{projectId}],methods=[GET]}" onto public void sw.controller.ProjectController.findAllGroups(int,org.springframework.ui.Model)
Mapped "{[/pro/projectForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectForm(int,org.springframework.ui.Model)
Mapped "{[/pro/projectList],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectPage(org.springframework.ui.Model)
Mapped "{[/pro/delProject/{id}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.delCollege(int)
Mapped "{[/pro/projectMain/{projectId}/{groupIds}],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectMain(int,java.lang.String,org.springframework.ui.Model)
Mapped "{[/pro/projectAdd],methods=[POST]}" onto public java.lang.String sw.controller.ProjectController.projectAdd(sw.entity.Project,org.springframework.ui.Model)
Mapped "{[/pro/projectForm],methods=[GET]}" onto public java.lang.String sw.controller.ProjectController.showProjectFormView(org.springframework.ui.Model)
Mapped "{[/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage(org.springframework.ui.Model)
Mapped "{[/logout],methods=[GET]}" onto public java.lang.String sw.controller.UserController.logout(javax.servlet.http.HttpSession)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model,javax.servlet.http.HttpSession)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.io.IOException
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 11.097 seconds (JVM running for 11.714)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@74aefb06
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Project'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.Project (generatedAlias0) -> project0_
Resolved : generatedAlias0 -> project0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.Project (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> project0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> project0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@5ff2c82f
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} project0_.id ) ( FromClause{level=1} ( t_project project0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_project project0_]
Using FROM fragment [left outer join t_user user1_ on project0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_project)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'project0_.id as id1_4_' {alias=generatedAlias0, className=sw.entity.Project, tableAlias=project0_}
    |  \-[SQL_TOKEN] SqlFragment: 'project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[project0_, user1_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_project project0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_project,tableAlias=project0_,origin=null,columns={,className=sw.entity.Project}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on project0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.Project.user,tableName=t_user,tableAlias=user1_,origin=t_project project0_,columns={project0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@5ff2c82f}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
parse() - HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[IDENT] Node: 'sw'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'UserGroup'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'user'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.UserGroup (generatedAlias0) -> usergroup0_
Resolved : generatedAlias0 -> usergroup0_.id
getDataType() : user -> org.hibernate.type.ManyToOneType(sw.entity.User)
dereferenceEntityJoin() : generating join for user in sw.entity.UserGroup (generatedAlias1) parent = [ {null} ]
FromClause{level=1} : sw.entity.User (generatedAlias1) -> user1_
addJoinByPathMap() : generatedAlias0.user -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
Resolved : generatedAlias0.user -> usergroup0_.user_id
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 't_user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}

Resolved : generatedAlias0 -> usergroup0_.id
Resolved : generatedAlias1 -> user1_.id
getDataType() : id -> org.hibernate.type.IntegerType@5ff2c82f
Resolved : generatedAlias1.id -> user1_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} usergroup0_.id ) ( FromClause{level=1} ( t_usergroup usergroup0_ t_user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
Using FROM fragment [t_usergroup usergroup0_]
Using FROM fragment [left outer join t_user user1_ on usergroup0_.user_id=user1_.id]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user,t_usergroup)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'usergroup0_.id as id1_8_' {alias=generatedAlias0, className=sw.entity.UserGroup, tableAlias=usergroup0_}
    |  \-[SQL_TOKEN] SqlFragment: 'usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[user1_, usergroup0_], fromElementsByPath=[generatedAlias0.user], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_usergroup usergroup0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_usergroup,tableAlias=usergroup0_,origin=null,columns={,className=sw.entity.UserGroup}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join t_user user1_ on usergroup0_.user_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=sw.entity.UserGroup.user,tableName=t_user,tableAlias=user1_,origin=t_usergroup usergroup0_,columns={usergroup0_.user_id ,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=sw.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=sw.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@5ff2c82f}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
SQL: select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
throwQueryException() : no errors
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
begin
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#3]
Done materializing entity [sw.entity.Project#3]
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#3
committing
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
Rendered criteria query -> select generatedAlias0 from Project as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select project0_.id as id1_4_, project0_.create_date as create_d2_4_, project0_.description as descript3_4_, project0_.name as name4_4_, project0_.user_id as user_id5_4_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.Project#3]
Resolving associations for [sw.entity.Project#3]
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#1]
Done materializing entity [sw.entity.User#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#1
Done materializing entity [sw.entity.Project#3]
Rendered criteria query -> select generatedAlias0 from UserGroup as generatedAlias0 left join generatedAlias0.user as generatedAlias1 where generatedAlias1.id=:param0
select usergroup0_.id as id1_8_, usergroup0_.create_date as create_d2_8_, usergroup0_.group_id as group_id4_8_, usergroup0_.is_headman as is_headm3_8_, usergroup0_.modify_userid as modify_u5_8_, usergroup0_.project_id as project_6_8_, usergroup0_.user_id as user_id7_8_ from t_usergroup usergroup0_ left outer join t_user user1_ on usergroup0_.user_id=user1_.id where user1_.id=?
Result set row: 0
Result row: EntityKey[sw.entity.UserGroup#1]
Result set row: 1
Result row: EntityKey[sw.entity.UserGroup#2]
Resolving associations for [sw.entity.UserGroup#1]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#1]
Done materializing entity [sw.entity.Group#1]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#1
select user0_.id as id1_7_0_, user0_.email as email2_7_0_, user0_.name as name3_7_0_, user0_.password as password4_7_0_, user0_.tel as tel5_7_0_ from t_user user0_ where user0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.User#2]
Done materializing entity [sw.entity.User#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.User#2
select project0_.id as id1_4_0_, project0_.create_date as create_d2_4_0_, project0_.description as descript3_4_0_, project0_.name as name4_4_0_, project0_.user_id as user_id5_4_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_project project0_ left outer join t_user user1_ on project0_.user_id=user1_.id where project0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Project#2]
Done materializing entity [sw.entity.Project#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Project#2
Done materializing entity [sw.entity.UserGroup#1]
Resolving associations for [sw.entity.UserGroup#2]
select group0_.id as id1_2_0_, group0_.create_date as create_d2_2_0_, group0_.info as info3_2_0_, group0_.user_id as user_id5_2_0_, group0_.name as name4_2_0_, user1_.id as id1_7_1_, user1_.email as email2_7_1_, user1_.name as name3_7_1_, user1_.password as password4_7_1_, user1_.tel as tel5_7_1_ from t_group group0_ left outer join t_user user1_ on group0_.user_id=user1_.id where group0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [sw.entity.Group#2]
Done materializing entity [sw.entity.Group#2]
HHH000387: ResultSet's statement was not registered
Done entity load : sw.entity.Group#2
Done materializing entity [sw.entity.UserGroup#2]
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
parse() - HQL: select generatedAlias0 from sw.entity.Menu as generatedAlias0
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'sw'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Menu'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.Menu (generatedAlias0) -> menu0_
Resolved : generatedAlias0 -> menu0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} menu0_.id ) ( FromClause{level=1} t_menu menu0_ ) )
Using FROM fragment [t_menu menu0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_menu)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'menu0_.id as id1_3_' {alias=generatedAlias0, className=sw.entity.Menu, tableAlias=menu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'menu0_.href as href2_3_, menu0_.name as name3_3_, menu0_.pid as pid4_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[menu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 't_menu menu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_menu,tableAlias=menu0_,origin=null,columns={,className=sw.entity.Menu}}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.Menu as generatedAlias0
SQL: select menu0_.id as id1_3_, menu0_.href as href2_3_, menu0_.name as name3_3_, menu0_.pid as pid4_3_ from t_menu menu0_
throwQueryException() : no errors
select menu0_.id as id1_3_, menu0_.href as href2_3_, menu0_.name as name3_3_, menu0_.pid as pid4_3_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
Resolving associations for [sw.entity.Menu#1]
Done materializing entity [sw.entity.Menu#1]
Resolving associations for [sw.entity.Menu#2]
Done materializing entity [sw.entity.Menu#2]
Resolving associations for [sw.entity.Menu#3]
Done materializing entity [sw.entity.Menu#3]
Resolving associations for [sw.entity.Menu#4]
Done materializing entity [sw.entity.Menu#4]
Resolving associations for [sw.entity.Menu#5]
Done materializing entity [sw.entity.Menu#5]
Resolving associations for [sw.entity.Menu#6]
Done materializing entity [sw.entity.Menu#6]
Resolving associations for [sw.entity.Menu#7]
Done materializing entity [sw.entity.Menu#7]
Resolving associations for [sw.entity.Menu#8]
Done materializing entity [sw.entity.Menu#8]
committing
begin
committing
begin
Rendered criteria query -> select generatedAlias0 from Menu as generatedAlias0
select menu0_.id as id1_3_, menu0_.href as href2_3_, menu0_.name as name3_3_, menu0_.pid as pid4_3_ from t_menu menu0_
Result set row: 0
Result row: EntityKey[sw.entity.Menu#1]
Result set row: 1
Result row: EntityKey[sw.entity.Menu#2]
Result set row: 2
Result row: EntityKey[sw.entity.Menu#3]
Result set row: 3
Result row: EntityKey[sw.entity.Menu#4]
Result set row: 4
Result row: EntityKey[sw.entity.Menu#5]
Result set row: 5
Result row: EntityKey[sw.entity.Menu#6]
Result set row: 6
Result row: EntityKey[sw.entity.Menu#7]
Result set row: 7
Result row: EntityKey[sw.entity.Menu#8]
committing
begin
committing
