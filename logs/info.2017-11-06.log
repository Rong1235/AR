Starting Application on LuoRong with PID 2004 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@85e69a4: startup date [Mon Nov 06 16:35:22 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bfea19b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4619 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5fa3d305
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@79b3b27e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7f2f024d
Adding type registration boolean -> org.hibernate.type.BooleanType@7f2f024d
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f2f024d
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@65ddd5be
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e8ad5e
Adding type registration yes_no -> org.hibernate.type.YesNoType@72fa31e1
Adding type registration byte -> org.hibernate.type.ByteType@d77ee80
Adding type registration byte -> org.hibernate.type.ByteType@d77ee80
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d77ee80
Adding type registration character -> org.hibernate.type.CharacterType@1b611782
Adding type registration char -> org.hibernate.type.CharacterType@1b611782
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b611782
Adding type registration short -> org.hibernate.type.ShortType@6c888c3d
Adding type registration short -> org.hibernate.type.ShortType@6c888c3d
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c888c3d
Adding type registration integer -> org.hibernate.type.IntegerType@3b4cc8de
Adding type registration int -> org.hibernate.type.IntegerType@3b4cc8de
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b4cc8de
Adding type registration long -> org.hibernate.type.LongType@42fc1465
Adding type registration long -> org.hibernate.type.LongType@42fc1465
Adding type registration java.lang.Long -> org.hibernate.type.LongType@42fc1465
Adding type registration float -> org.hibernate.type.FloatType@41e1992b
Adding type registration float -> org.hibernate.type.FloatType@41e1992b
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41e1992b
Adding type registration double -> org.hibernate.type.DoubleType@7496a775
Adding type registration double -> org.hibernate.type.DoubleType@7496a775
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7496a775
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@651de9fa
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@651de9fa
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1487282
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1487282
Adding type registration string -> org.hibernate.type.StringType@7b335766
Adding type registration java.lang.String -> org.hibernate.type.StringType@7b335766
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3826286c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@eddb700
Adding type registration url -> org.hibernate.type.UrlType@3c92908b
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3c92908b
Adding type registration date -> org.hibernate.type.DateType@389bdb87
Adding type registration java.sql.Date -> org.hibernate.type.DateType@389bdb87
Adding type registration time -> org.hibernate.type.TimeType@2412295c
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2412295c
Adding type registration timestamp -> org.hibernate.type.TimestampType@174ce128
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@174ce128
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@174ce128
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d16d2c3
Adding type registration calendar -> org.hibernate.type.CalendarType@7b989790
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b989790
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b989790
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2f5e6722
Adding type registration locale -> org.hibernate.type.LocaleType@7bafd4fb
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7bafd4fb
Adding type registration currency -> org.hibernate.type.CurrencyType@1bd70a5b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1bd70a5b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@f22d225
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f22d225
Adding type registration class -> org.hibernate.type.ClassType@58fe37d6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58fe37d6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43756b1c
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43756b1c
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5ac67728
Adding type registration binary -> org.hibernate.type.BinaryType@58893ef0
Adding type registration byte[] -> org.hibernate.type.BinaryType@58893ef0
Adding type registration [B -> org.hibernate.type.BinaryType@58893ef0
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ab654d1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ab654d1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ab654d1
Adding type registration row_version -> org.hibernate.type.RowVersionType@3b7f0076
Adding type registration image -> org.hibernate.type.ImageType@37c589e7
Adding type registration characters -> org.hibernate.type.CharArrayType@624ab523
Adding type registration char[] -> org.hibernate.type.CharArrayType@624ab523
Adding type registration [C -> org.hibernate.type.CharArrayType@624ab523
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@61c4255d
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@61c4255d
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@61c4255d
Adding type registration text -> org.hibernate.type.TextType@54f46f5a
Adding type registration ntext -> org.hibernate.type.NTextType@434a3e57
Adding type registration blob -> org.hibernate.type.BlobType@1bae715b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1bae715b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@8d3c5ab
Adding type registration clob -> org.hibernate.type.ClobType@4788e27b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4788e27b
Adding type registration nclob -> org.hibernate.type.NClobType@6d0bb75b
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d0bb75b
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@e05702
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69da7ec
Adding type registration serializable -> org.hibernate.type.SerializableType@4e4bbc18
Adding type registration object -> org.hibernate.type.ObjectType@793cba3b
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@793cba3b
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75db360b
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69aaa7e9
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2684fefc
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@559c309b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@79db2f4d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45724a70
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44803f3c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@70acc7df
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@42d9b397
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8682928942748792899.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=2004, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@44d38cde, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@79b3b27e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8682928942748792899.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@aa42ce, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d43f48d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5187df15]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51ca8187]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b8f0fde]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3998176b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56a05f81]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4838150c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6d07a0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61cd23d5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@751034c2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a850688]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@265aad
Registering SessionFactory: 55fb27b8-d592-428e-a13f-d93229ce273c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@175173a9
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(java.lang.String,sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@85e69a4: startup date [Mon Nov 06 16:35:22 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 14.693 seconds (JVM running for 17.192)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 52 ms
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@85e69a4: startup date [Mon Nov 06 16:35:22 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 2004 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a86ded2: startup date [Mon Nov 06 16:38:40 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bfea19b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 850 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@47611dcf
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@5c9c90ec{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7f2f024d
Adding type registration boolean -> org.hibernate.type.BooleanType@7f2f024d
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f2f024d
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@65ddd5be
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e8ad5e
Adding type registration yes_no -> org.hibernate.type.YesNoType@72fa31e1
Adding type registration byte -> org.hibernate.type.ByteType@d77ee80
Adding type registration byte -> org.hibernate.type.ByteType@d77ee80
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d77ee80
Adding type registration character -> org.hibernate.type.CharacterType@1b611782
Adding type registration char -> org.hibernate.type.CharacterType@1b611782
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b611782
Adding type registration short -> org.hibernate.type.ShortType@6c888c3d
Adding type registration short -> org.hibernate.type.ShortType@6c888c3d
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c888c3d
Adding type registration integer -> org.hibernate.type.IntegerType@3b4cc8de
Adding type registration int -> org.hibernate.type.IntegerType@3b4cc8de
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b4cc8de
Adding type registration long -> org.hibernate.type.LongType@42fc1465
Adding type registration long -> org.hibernate.type.LongType@42fc1465
Adding type registration java.lang.Long -> org.hibernate.type.LongType@42fc1465
Adding type registration float -> org.hibernate.type.FloatType@41e1992b
Adding type registration float -> org.hibernate.type.FloatType@41e1992b
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41e1992b
Adding type registration double -> org.hibernate.type.DoubleType@7496a775
Adding type registration double -> org.hibernate.type.DoubleType@7496a775
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7496a775
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@651de9fa
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@651de9fa
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1487282
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1487282
Adding type registration string -> org.hibernate.type.StringType@7b335766
Adding type registration java.lang.String -> org.hibernate.type.StringType@7b335766
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3826286c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@eddb700
Adding type registration url -> org.hibernate.type.UrlType@3c92908b
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3c92908b
Adding type registration date -> org.hibernate.type.DateType@389bdb87
Adding type registration java.sql.Date -> org.hibernate.type.DateType@389bdb87
Adding type registration time -> org.hibernate.type.TimeType@2412295c
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2412295c
Adding type registration timestamp -> org.hibernate.type.TimestampType@174ce128
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@174ce128
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@174ce128
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d16d2c3
Adding type registration calendar -> org.hibernate.type.CalendarType@7b989790
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b989790
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b989790
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2f5e6722
Adding type registration locale -> org.hibernate.type.LocaleType@7bafd4fb
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7bafd4fb
Adding type registration currency -> org.hibernate.type.CurrencyType@1bd70a5b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1bd70a5b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@f22d225
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f22d225
Adding type registration class -> org.hibernate.type.ClassType@58fe37d6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58fe37d6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43756b1c
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43756b1c
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5ac67728
Adding type registration binary -> org.hibernate.type.BinaryType@58893ef0
Adding type registration byte[] -> org.hibernate.type.BinaryType@58893ef0
Adding type registration [B -> org.hibernate.type.BinaryType@58893ef0
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ab654d1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ab654d1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ab654d1
Adding type registration row_version -> org.hibernate.type.RowVersionType@3b7f0076
Adding type registration image -> org.hibernate.type.ImageType@37c589e7
Adding type registration characters -> org.hibernate.type.CharArrayType@624ab523
Adding type registration char[] -> org.hibernate.type.CharArrayType@624ab523
Adding type registration [C -> org.hibernate.type.CharArrayType@624ab523
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@61c4255d
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@61c4255d
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@61c4255d
Adding type registration text -> org.hibernate.type.TextType@54f46f5a
Adding type registration ntext -> org.hibernate.type.NTextType@434a3e57
Adding type registration blob -> org.hibernate.type.BlobType@1bae715b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1bae715b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@8d3c5ab
Adding type registration clob -> org.hibernate.type.ClobType@4788e27b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4788e27b
Adding type registration nclob -> org.hibernate.type.NClobType@6d0bb75b
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d0bb75b
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@e05702
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69da7ec
Adding type registration serializable -> org.hibernate.type.SerializableType@4e4bbc18
Adding type registration object -> org.hibernate.type.ObjectType@793cba3b
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@793cba3b
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@109ad0e6
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@38126622
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6cfad8b5
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4bb9dd9e
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@de229ef
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26ea7d07
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1cef361f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@193f4d31
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@42d9b397
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8682928942748792899.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=2004, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@9080977, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@5c9c90ec{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8682928942748792899.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@68fe2727, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f398d83]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fe54d6a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e34523]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41b85128]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@742da460]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d00d871]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e463ad8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c694dc2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@785b1047]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3792ac18]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@332fcb1e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: ce8e8afb-d7d8-41a9-8ab9-af226839cda7 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a86ded2: startup date [Mon Nov 06 16:38:40 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.175 seconds (JVM running for 205.829)
Starting Application on LuoRong with PID 1516 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Mon Nov 06 16:43:26 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e4b0264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3178 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@a5e01ba{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a18d0f6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@707a283
Adding type registration yes_no -> org.hibernate.type.YesNoType@460413b3
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration char -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c58da11
Adding type registration integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration int -> org.hibernate.type.IntegerType@780fabbe
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration java.lang.Long -> org.hibernate.type.LongType@50a17209
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18166346
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration string -> org.hibernate.type.StringType@55c17d55
Adding type registration java.lang.String -> org.hibernate.type.StringType@55c17d55
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d2cfd0
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28cb36a7
Adding type registration url -> org.hibernate.type.UrlType@58fb9357
Adding type registration java.net.URL -> org.hibernate.type.UrlType@58fb9357
Adding type registration date -> org.hibernate.type.DateType@3efa49d9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3efa49d9
Adding type registration time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d3a16c7
Adding type registration calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5836594a
Adding type registration locale -> org.hibernate.type.LocaleType@13137542
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13137542
Adding type registration currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration class -> org.hibernate.type.ClassType@58c60048
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58c60048
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d7f2dbe
Adding type registration binary -> org.hibernate.type.BinaryType@7cbea151
Adding type registration byte[] -> org.hibernate.type.BinaryType@7cbea151
Adding type registration [B -> org.hibernate.type.BinaryType@7cbea151
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration row_version -> org.hibernate.type.RowVersionType@d1350b8
Adding type registration image -> org.hibernate.type.ImageType@781879d5
Adding type registration characters -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration char[] -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration [C -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration text -> org.hibernate.type.TextType@60c2043a
Adding type registration ntext -> org.hibernate.type.NTextType@61445ff0
Adding type registration blob -> org.hibernate.type.BlobType@48917e29
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48917e29
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35eff963
Adding type registration clob -> org.hibernate.type.ClobType@77f24973
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77f24973
Adding type registration nclob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f4663a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cfd0212
Adding type registration serializable -> org.hibernate.type.SerializableType@6d0e21f3
Adding type registration object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33d09ee9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6d82a118
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@17efc232
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@62497b2e
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55d99658
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2dab779a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44bcce4f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6d855dfd
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2e0acef4
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1516, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@40bdb581, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@a5e01ba{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7247a208, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32ce771a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6c340b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d36360b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ec529d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16f7cdf4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205dead1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb5fc5b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64834ba8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b83dc96]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@274d48a4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8652480]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@435ecda6
Registering SessionFactory: 3279f767-3ac3-4157-8302-92b9e0ff4f6d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3048b962
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Mon Nov 06 16:43:26 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.251 seconds (JVM running for 9.858)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@727d30e6, payload=[Ljava.lang.Class;@3a6720a1}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@27c0ee03, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@6dcc9dfc}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@55dc76b3, payload=[Ljava.lang.Class;@5c763289}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@411323c6, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@553cd6dd}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Mon Nov 06 16:43:26 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 1516 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@619be3e7: startup date [Mon Nov 06 16:48:20 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e4b0264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 972 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4b55d251
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@556dbf8e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a18d0f6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@707a283
Adding type registration yes_no -> org.hibernate.type.YesNoType@460413b3
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration char -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c58da11
Adding type registration integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration int -> org.hibernate.type.IntegerType@780fabbe
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration java.lang.Long -> org.hibernate.type.LongType@50a17209
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18166346
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration string -> org.hibernate.type.StringType@55c17d55
Adding type registration java.lang.String -> org.hibernate.type.StringType@55c17d55
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d2cfd0
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28cb36a7
Adding type registration url -> org.hibernate.type.UrlType@58fb9357
Adding type registration java.net.URL -> org.hibernate.type.UrlType@58fb9357
Adding type registration date -> org.hibernate.type.DateType@3efa49d9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3efa49d9
Adding type registration time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d3a16c7
Adding type registration calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5836594a
Adding type registration locale -> org.hibernate.type.LocaleType@13137542
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13137542
Adding type registration currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration class -> org.hibernate.type.ClassType@58c60048
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58c60048
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d7f2dbe
Adding type registration binary -> org.hibernate.type.BinaryType@7cbea151
Adding type registration byte[] -> org.hibernate.type.BinaryType@7cbea151
Adding type registration [B -> org.hibernate.type.BinaryType@7cbea151
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration row_version -> org.hibernate.type.RowVersionType@d1350b8
Adding type registration image -> org.hibernate.type.ImageType@781879d5
Adding type registration characters -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration char[] -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration [C -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration text -> org.hibernate.type.TextType@60c2043a
Adding type registration ntext -> org.hibernate.type.NTextType@61445ff0
Adding type registration blob -> org.hibernate.type.BlobType@48917e29
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48917e29
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35eff963
Adding type registration clob -> org.hibernate.type.ClobType@77f24973
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77f24973
Adding type registration nclob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f4663a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cfd0212
Adding type registration serializable -> org.hibernate.type.SerializableType@6d0e21f3
Adding type registration object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2593d031
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@517c5309
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d4bbe77
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@428ee468
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7927b650
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a704666
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2aa8e159
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1fb0fdc0
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2e0acef4
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1516, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@16e3b0ac, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@556dbf8e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1c3f3a18, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a78c54]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28e25ec6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@540b78ad]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76752be]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f8500d8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760abda4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@778f4ba3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304cbabe]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59556b2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@513e26b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74baf91e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 00802b3f-7723-4523-a105-ba30cc76dc13 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@619be3e7: startup date [Mon Nov 06 16:48:20 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.231 seconds (JVM running for 298.099)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 5 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@5e5b902f, payload=[Ljava.lang.Class;@5a641f3c}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@1f669a14, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@2c6bb3a0}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@2e3384ea, payload=[Ljava.lang.Class;@54d4f3ef}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@7f49655b, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@ece3fa1}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@619be3e7: startup date [Mon Nov 06 16:48:20 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Starting Application on LuoRong with PID 1516 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7cf8b118: startup date [Mon Nov 06 16:48:59 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e4b0264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 771 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@69f0160e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2dd38d50{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a18d0f6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@707a283
Adding type registration yes_no -> org.hibernate.type.YesNoType@460413b3
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration char -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c58da11
Adding type registration integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration int -> org.hibernate.type.IntegerType@780fabbe
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration java.lang.Long -> org.hibernate.type.LongType@50a17209
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18166346
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration string -> org.hibernate.type.StringType@55c17d55
Adding type registration java.lang.String -> org.hibernate.type.StringType@55c17d55
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d2cfd0
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28cb36a7
Adding type registration url -> org.hibernate.type.UrlType@58fb9357
Adding type registration java.net.URL -> org.hibernate.type.UrlType@58fb9357
Adding type registration date -> org.hibernate.type.DateType@3efa49d9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3efa49d9
Adding type registration time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d3a16c7
Adding type registration calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5836594a
Adding type registration locale -> org.hibernate.type.LocaleType@13137542
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13137542
Adding type registration currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration class -> org.hibernate.type.ClassType@58c60048
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58c60048
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d7f2dbe
Adding type registration binary -> org.hibernate.type.BinaryType@7cbea151
Adding type registration byte[] -> org.hibernate.type.BinaryType@7cbea151
Adding type registration [B -> org.hibernate.type.BinaryType@7cbea151
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration row_version -> org.hibernate.type.RowVersionType@d1350b8
Adding type registration image -> org.hibernate.type.ImageType@781879d5
Adding type registration characters -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration char[] -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration [C -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration text -> org.hibernate.type.TextType@60c2043a
Adding type registration ntext -> org.hibernate.type.NTextType@61445ff0
Adding type registration blob -> org.hibernate.type.BlobType@48917e29
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48917e29
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35eff963
Adding type registration clob -> org.hibernate.type.ClobType@77f24973
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77f24973
Adding type registration nclob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f4663a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cfd0212
Adding type registration serializable -> org.hibernate.type.SerializableType@6d0e21f3
Adding type registration object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cff9e2c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1dd5aab2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@29977ff1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7af527c0
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a9bd84c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a2b6197
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3851fbd4
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6b491039
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2e0acef4
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1516, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4b9eaade, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2dd38d50{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5369579, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@334fb23a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58bdc963]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bdf461c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@406e621a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ba25e0d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9e4475]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f04704c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52fe9832]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10409ff4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4477e02b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c2b506d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 02a97bc5-ac70-4e69-a151-85471994cb21 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7cf8b118: startup date [Mon Nov 06 16:48:59 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.681 seconds (JVM running for 336.11)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Request method 'GET' not supported
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7cf8b118: startup date [Mon Nov 06 16:48:59 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 1516 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cdfa05f: startup date [Mon Nov 06 16:49:47 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e4b0264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 692 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73d2314c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@33c630cf{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a18d0f6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@707a283
Adding type registration yes_no -> org.hibernate.type.YesNoType@460413b3
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration char -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c58da11
Adding type registration integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration int -> org.hibernate.type.IntegerType@780fabbe
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration java.lang.Long -> org.hibernate.type.LongType@50a17209
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18166346
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration string -> org.hibernate.type.StringType@55c17d55
Adding type registration java.lang.String -> org.hibernate.type.StringType@55c17d55
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d2cfd0
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28cb36a7
Adding type registration url -> org.hibernate.type.UrlType@58fb9357
Adding type registration java.net.URL -> org.hibernate.type.UrlType@58fb9357
Adding type registration date -> org.hibernate.type.DateType@3efa49d9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3efa49d9
Adding type registration time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d3a16c7
Adding type registration calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5836594a
Adding type registration locale -> org.hibernate.type.LocaleType@13137542
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13137542
Adding type registration currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration class -> org.hibernate.type.ClassType@58c60048
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58c60048
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d7f2dbe
Adding type registration binary -> org.hibernate.type.BinaryType@7cbea151
Adding type registration byte[] -> org.hibernate.type.BinaryType@7cbea151
Adding type registration [B -> org.hibernate.type.BinaryType@7cbea151
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration row_version -> org.hibernate.type.RowVersionType@d1350b8
Adding type registration image -> org.hibernate.type.ImageType@781879d5
Adding type registration characters -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration char[] -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration [C -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration text -> org.hibernate.type.TextType@60c2043a
Adding type registration ntext -> org.hibernate.type.NTextType@61445ff0
Adding type registration blob -> org.hibernate.type.BlobType@48917e29
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48917e29
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35eff963
Adding type registration clob -> org.hibernate.type.ClobType@77f24973
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77f24973
Adding type registration nclob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f4663a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cfd0212
Adding type registration serializable -> org.hibernate.type.SerializableType@6d0e21f3
Adding type registration object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@173c8f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18a70362
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f7240b2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@197d7ccb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2037c82f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b7358
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@dd1d43f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7fb87a6a
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2e0acef4
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1516, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4c9e9044, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@33c630cf{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6e95dc6a, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3829982c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb946e6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70054a8d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36526ac]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@176f8983]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d8dac7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68026ef4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12f6842e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c83bf90]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cdec1d9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12c03f91]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: a2aa6508-677b-450a-860e-d192ee300f34 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cdfa05f: startup date [Mon Nov 06 16:49:47 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.568 seconds (JVM running for 384.125)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cdfa05f: startup date [Mon Nov 06 16:49:47 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 1516 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d5050b5: startup date [Mon Nov 06 16:49:56 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e4b0264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 907 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3b6608a4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@22239731{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a18d0f6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@707a283
Adding type registration yes_no -> org.hibernate.type.YesNoType@460413b3
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration char -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c58da11
Adding type registration integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration int -> org.hibernate.type.IntegerType@780fabbe
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration java.lang.Long -> org.hibernate.type.LongType@50a17209
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18166346
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration string -> org.hibernate.type.StringType@55c17d55
Adding type registration java.lang.String -> org.hibernate.type.StringType@55c17d55
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d2cfd0
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28cb36a7
Adding type registration url -> org.hibernate.type.UrlType@58fb9357
Adding type registration java.net.URL -> org.hibernate.type.UrlType@58fb9357
Adding type registration date -> org.hibernate.type.DateType@3efa49d9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3efa49d9
Adding type registration time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d3a16c7
Adding type registration calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5836594a
Adding type registration locale -> org.hibernate.type.LocaleType@13137542
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13137542
Adding type registration currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration class -> org.hibernate.type.ClassType@58c60048
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58c60048
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d7f2dbe
Adding type registration binary -> org.hibernate.type.BinaryType@7cbea151
Adding type registration byte[] -> org.hibernate.type.BinaryType@7cbea151
Adding type registration [B -> org.hibernate.type.BinaryType@7cbea151
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration row_version -> org.hibernate.type.RowVersionType@d1350b8
Adding type registration image -> org.hibernate.type.ImageType@781879d5
Adding type registration characters -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration char[] -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration [C -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration text -> org.hibernate.type.TextType@60c2043a
Adding type registration ntext -> org.hibernate.type.NTextType@61445ff0
Adding type registration blob -> org.hibernate.type.BlobType@48917e29
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48917e29
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35eff963
Adding type registration clob -> org.hibernate.type.ClobType@77f24973
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77f24973
Adding type registration nclob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f4663a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cfd0212
Adding type registration serializable -> org.hibernate.type.SerializableType@6d0e21f3
Adding type registration object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43bb412a
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21cf56d8
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7b0f91ea
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6294579a
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7b3ff8f3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@209d18da
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@271a4de2
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67f2f61c
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2e0acef4
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1516, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@17ccbc56, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@22239731{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4d4f97bd, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@174b8db]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f3b5b3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1447f340]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63c14dbd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7160b5ea]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58681241]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ab7b42]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@356ab2b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e2624a1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2152c33e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@788559bb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: a61aec22-c325-473c-8423-0f46045a5bd4 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d5050b5: startup date [Mon Nov 06 16:49:56 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.933 seconds (JVM running for 393.905)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d5050b5: startup date [Mon Nov 06 16:49:56 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 1516 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f2b1284: startup date [Mon Nov 06 16:50:24 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e4b0264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 659 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2ebac70f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1cc0c614{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a18d0f6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@707a283
Adding type registration yes_no -> org.hibernate.type.YesNoType@460413b3
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration char -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c58da11
Adding type registration integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration int -> org.hibernate.type.IntegerType@780fabbe
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration java.lang.Long -> org.hibernate.type.LongType@50a17209
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18166346
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration string -> org.hibernate.type.StringType@55c17d55
Adding type registration java.lang.String -> org.hibernate.type.StringType@55c17d55
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d2cfd0
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28cb36a7
Adding type registration url -> org.hibernate.type.UrlType@58fb9357
Adding type registration java.net.URL -> org.hibernate.type.UrlType@58fb9357
Adding type registration date -> org.hibernate.type.DateType@3efa49d9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3efa49d9
Adding type registration time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d3a16c7
Adding type registration calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5836594a
Adding type registration locale -> org.hibernate.type.LocaleType@13137542
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13137542
Adding type registration currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration class -> org.hibernate.type.ClassType@58c60048
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58c60048
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d7f2dbe
Adding type registration binary -> org.hibernate.type.BinaryType@7cbea151
Adding type registration byte[] -> org.hibernate.type.BinaryType@7cbea151
Adding type registration [B -> org.hibernate.type.BinaryType@7cbea151
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration row_version -> org.hibernate.type.RowVersionType@d1350b8
Adding type registration image -> org.hibernate.type.ImageType@781879d5
Adding type registration characters -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration char[] -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration [C -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration text -> org.hibernate.type.TextType@60c2043a
Adding type registration ntext -> org.hibernate.type.NTextType@61445ff0
Adding type registration blob -> org.hibernate.type.BlobType@48917e29
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48917e29
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35eff963
Adding type registration clob -> org.hibernate.type.ClobType@77f24973
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77f24973
Adding type registration nclob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f4663a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cfd0212
Adding type registration serializable -> org.hibernate.type.SerializableType@6d0e21f3
Adding type registration object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d9ee4ae
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@646f1e45
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a21e01b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6d1e1d7b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@276f3fe2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b6e807c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4e3a9e32
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5352a74b
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2e0acef4
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1516, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@333d4075, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1cc0c614{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2ff543f4, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c34bae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@de2e0d1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20de8293]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cbb85f5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6396d81f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d258436]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2faa3129]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad83e85]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@445ed95d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c581281]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f9fe1c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 34e88f75-51e3-4cdc-8bed-5fe2ebc5b7a8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f2b1284: startup date [Mon Nov 06 16:50:24 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.54 seconds (JVM running for 420.977)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@c36b03e, payload=[Ljava.lang.Class;@8092560}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@4d0bba05, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@4502ec7a}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@7c8c13a4, payload=[Ljava.lang.Class;@3d6f1b70}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@631a30dd, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@266b1355}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f2b1284: startup date [Mon Nov 06 16:50:24 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 1516 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7e8371ac: startup date [Mon Nov 06 16:54:32 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e4b0264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 685 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@688a0f68
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6e315b40{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8a60f4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a18d0f6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@707a283
Adding type registration yes_no -> org.hibernate.type.YesNoType@460413b3
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63e48d43
Adding type registration character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration char -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8d3d0c2
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration short -> org.hibernate.type.ShortType@1c58da11
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c58da11
Adding type registration integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration int -> org.hibernate.type.IntegerType@780fabbe
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@780fabbe
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration long -> org.hibernate.type.LongType@50a17209
Adding type registration java.lang.Long -> org.hibernate.type.LongType@50a17209
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration float -> org.hibernate.type.FloatType@18166346
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18166346
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bb08e0
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40252a78
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a58c7ab
Adding type registration string -> org.hibernate.type.StringType@55c17d55
Adding type registration java.lang.String -> org.hibernate.type.StringType@55c17d55
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d2cfd0
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28cb36a7
Adding type registration url -> org.hibernate.type.UrlType@58fb9357
Adding type registration java.net.URL -> org.hibernate.type.UrlType@58fb9357
Adding type registration date -> org.hibernate.type.DateType@3efa49d9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3efa49d9
Adding type registration time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28dc0ce8
Adding type registration timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72e67f7c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d3a16c7
Adding type registration calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18414d4f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5836594a
Adding type registration locale -> org.hibernate.type.LocaleType@13137542
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13137542
Adding type registration currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@71af2f03
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48ab158e
Adding type registration class -> org.hibernate.type.ClassType@58c60048
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58c60048
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c8ba706
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d7f2dbe
Adding type registration binary -> org.hibernate.type.BinaryType@7cbea151
Adding type registration byte[] -> org.hibernate.type.BinaryType@7cbea151
Adding type registration [B -> org.hibernate.type.BinaryType@7cbea151
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21ca0b69
Adding type registration row_version -> org.hibernate.type.RowVersionType@d1350b8
Adding type registration image -> org.hibernate.type.ImageType@781879d5
Adding type registration characters -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration char[] -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration [C -> org.hibernate.type.CharArrayType@26d201cd
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b03da3b
Adding type registration text -> org.hibernate.type.TextType@60c2043a
Adding type registration ntext -> org.hibernate.type.NTextType@61445ff0
Adding type registration blob -> org.hibernate.type.BlobType@48917e29
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48917e29
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35eff963
Adding type registration clob -> org.hibernate.type.ClobType@77f24973
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77f24973
Adding type registration nclob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2be17bd4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f4663a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cfd0212
Adding type registration serializable -> org.hibernate.type.SerializableType@6d0e21f3
Adding type registration object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74a5453e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d6fcc7d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c40c0fe
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@491efcdd
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7918c135
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@a67f64f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a90cd
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3eec6c01
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c20380
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2e0acef4
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1516, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@791ca15f, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6e315b40{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.9092850097077129543.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@29957836, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c3501cd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24787da5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dd6949f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@307e3531]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e239591]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f70f3da]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eda4e1a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c44cef6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42efbe88]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c9c54ad]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@216dcd6f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: ba4a6966-2775-45d0-9415-fe4dbcf24e10 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7e8371ac: startup date [Mon Nov 06 16:54:32 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.526 seconds (JVM running for 669.1)
Starting Application on LuoRong with PID 1156 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 16:55:04 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cdf14a98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3034 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@520028c2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@3166c616{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@83e8dfe
Adding type registration boolean -> org.hibernate.type.BooleanType@83e8dfe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@83e8dfe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2992b563
Adding type registration true_false -> org.hibernate.type.TrueFalseType@784f2c49
Adding type registration yes_no -> org.hibernate.type.YesNoType@4de23a50
Adding type registration byte -> org.hibernate.type.ByteType@288f0da8
Adding type registration byte -> org.hibernate.type.ByteType@288f0da8
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@288f0da8
Adding type registration character -> org.hibernate.type.CharacterType@4f9c667f
Adding type registration char -> org.hibernate.type.CharacterType@4f9c667f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f9c667f
Adding type registration short -> org.hibernate.type.ShortType@4410aa4a
Adding type registration short -> org.hibernate.type.ShortType@4410aa4a
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4410aa4a
Adding type registration integer -> org.hibernate.type.IntegerType@7310ae19
Adding type registration int -> org.hibernate.type.IntegerType@7310ae19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7310ae19
Adding type registration long -> org.hibernate.type.LongType@1d7cc531
Adding type registration long -> org.hibernate.type.LongType@1d7cc531
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d7cc531
Adding type registration float -> org.hibernate.type.FloatType@4b4021
Adding type registration float -> org.hibernate.type.FloatType@4b4021
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b4021
Adding type registration double -> org.hibernate.type.DoubleType@7574fa36
Adding type registration double -> org.hibernate.type.DoubleType@7574fa36
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7574fa36
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@356d3ba1
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@356d3ba1
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7a507775
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7a507775
Adding type registration string -> org.hibernate.type.StringType@ef663c7
Adding type registration java.lang.String -> org.hibernate.type.StringType@ef663c7
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@488c5d9f
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6a5de5c0
Adding type registration url -> org.hibernate.type.UrlType@7720f713
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7720f713
Adding type registration date -> org.hibernate.type.DateType@29070279
Adding type registration java.sql.Date -> org.hibernate.type.DateType@29070279
Adding type registration time -> org.hibernate.type.TimeType@6d836a91
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d836a91
Adding type registration timestamp -> org.hibernate.type.TimestampType@19d38e65
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19d38e65
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19d38e65
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35c16cfd
Adding type registration calendar -> org.hibernate.type.CalendarType@67252dc
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@67252dc
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@67252dc
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5ba26b8c
Adding type registration locale -> org.hibernate.type.LocaleType@c941502
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c941502
Adding type registration currency -> org.hibernate.type.CurrencyType@3a1d4dc9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a1d4dc9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@8e7f23e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8e7f23e
Adding type registration class -> org.hibernate.type.ClassType@92d90cc
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@92d90cc
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@432f9b95
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@432f9b95
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@37c21c6e
Adding type registration binary -> org.hibernate.type.BinaryType@384a50aa
Adding type registration byte[] -> org.hibernate.type.BinaryType@384a50aa
Adding type registration [B -> org.hibernate.type.BinaryType@384a50aa
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@cf655f7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@cf655f7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@cf655f7
Adding type registration row_version -> org.hibernate.type.RowVersionType@5f4f330c
Adding type registration image -> org.hibernate.type.ImageType@7264d6a6
Adding type registration characters -> org.hibernate.type.CharArrayType@4cae47a3
Adding type registration char[] -> org.hibernate.type.CharArrayType@4cae47a3
Adding type registration [C -> org.hibernate.type.CharArrayType@4cae47a3
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@dec9fc7
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@dec9fc7
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@dec9fc7
Adding type registration text -> org.hibernate.type.TextType@5eb69b0c
Adding type registration ntext -> org.hibernate.type.NTextType@54d49fbf
Adding type registration blob -> org.hibernate.type.BlobType@79e812e4
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79e812e4
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f6e0c71
Adding type registration clob -> org.hibernate.type.ClobType@43251668
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@43251668
Adding type registration nclob -> org.hibernate.type.NClobType@61456143
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@61456143
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b14cddd
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ea32dc6
Adding type registration serializable -> org.hibernate.type.SerializableType@5170eb56
Adding type registration object -> org.hibernate.type.ObjectType@5d4b9af3
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d4b9af3
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@583927c2
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@59a4a234
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@87cbab4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@62b1e639
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@73a7da9a
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@fee63d8
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@62aac18b
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@fc763c9
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@31927121
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2027025278517122989.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=1156, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@d2862b2, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@3166c616{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2027025278517122989.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5225fc0, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4265ba64]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b2b5e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@251840af]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab14f91]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e3a0feb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f64f68d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@395da4f6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f5ef9c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37aa1218]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d61e06c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7afca014]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4e9bdf38
Registering SessionFactory: 130012d6-c517-443b-be89-096ef570dde7 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@38a49a0c
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 16:55:04 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.28 seconds (JVM running for 9.852)
Starting Application on LuoRong with PID 2336 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 16:55:39 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fe2df8da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3015 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@520028c2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7b26ed80{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@362ccbe
Adding type registration boolean -> org.hibernate.type.BooleanType@362ccbe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@362ccbe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@251ee1c6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4ba6baa4
Adding type registration yes_no -> org.hibernate.type.YesNoType@4c4e7ac1
Adding type registration byte -> org.hibernate.type.ByteType@17e8897c
Adding type registration byte -> org.hibernate.type.ByteType@17e8897c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17e8897c
Adding type registration character -> org.hibernate.type.CharacterType@7e7091ef
Adding type registration char -> org.hibernate.type.CharacterType@7e7091ef
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e7091ef
Adding type registration short -> org.hibernate.type.ShortType@6cb16442
Adding type registration short -> org.hibernate.type.ShortType@6cb16442
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cb16442
Adding type registration integer -> org.hibernate.type.IntegerType@61af5498
Adding type registration int -> org.hibernate.type.IntegerType@61af5498
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61af5498
Adding type registration long -> org.hibernate.type.LongType@663f1fb2
Adding type registration long -> org.hibernate.type.LongType@663f1fb2
Adding type registration java.lang.Long -> org.hibernate.type.LongType@663f1fb2
Adding type registration float -> org.hibernate.type.FloatType@25a759ff
Adding type registration float -> org.hibernate.type.FloatType@25a759ff
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@25a759ff
Adding type registration double -> org.hibernate.type.DoubleType@7d34f43e
Adding type registration double -> org.hibernate.type.DoubleType@7d34f43e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d34f43e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ba45137
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ba45137
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71b9e5b2
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71b9e5b2
Adding type registration string -> org.hibernate.type.StringType@14d3a8d6
Adding type registration java.lang.String -> org.hibernate.type.StringType@14d3a8d6
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@eaa0d8a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6ef1d6f9
Adding type registration url -> org.hibernate.type.UrlType@ffc1ceb
Adding type registration java.net.URL -> org.hibernate.type.UrlType@ffc1ceb
Adding type registration date -> org.hibernate.type.DateType@4262038
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4262038
Adding type registration time -> org.hibernate.type.TimeType@529a9217
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@529a9217
Adding type registration timestamp -> org.hibernate.type.TimestampType@210092f0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@210092f0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@210092f0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30646c86
Adding type registration calendar -> org.hibernate.type.CalendarType@247d40d5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@247d40d5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@247d40d5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4f522696
Adding type registration locale -> org.hibernate.type.LocaleType@302d3575
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@302d3575
Adding type registration currency -> org.hibernate.type.CurrencyType@4ffea88c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ffea88c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@341eb22b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@341eb22b
Adding type registration class -> org.hibernate.type.ClassType@2f3a69d6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f3a69d6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@749b4802
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@749b4802
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@80eca30
Adding type registration binary -> org.hibernate.type.BinaryType@440e7fc8
Adding type registration byte[] -> org.hibernate.type.BinaryType@440e7fc8
Adding type registration [B -> org.hibernate.type.BinaryType@440e7fc8
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ed4bbd1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ed4bbd1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ed4bbd1
Adding type registration row_version -> org.hibernate.type.RowVersionType@106af983
Adding type registration image -> org.hibernate.type.ImageType@1f364d8f
Adding type registration characters -> org.hibernate.type.CharArrayType@3ce9c882
Adding type registration char[] -> org.hibernate.type.CharArrayType@3ce9c882
Adding type registration [C -> org.hibernate.type.CharArrayType@3ce9c882
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17bcfcc9
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17bcfcc9
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17bcfcc9
Adding type registration text -> org.hibernate.type.TextType@2914f65
Adding type registration ntext -> org.hibernate.type.NTextType@1c9f4a5d
Adding type registration blob -> org.hibernate.type.BlobType@46e481d6
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46e481d6
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@46a85e4a
Adding type registration clob -> org.hibernate.type.ClobType@1cb2f0f5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1cb2f0f5
Adding type registration nclob -> org.hibernate.type.NClobType@7f2a5f12
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7f2a5f12
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7191fc85
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@234465ea
Adding type registration serializable -> org.hibernate.type.SerializableType@721ae0f3
Adding type registration object -> org.hibernate.type.ObjectType@36dcfabe
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@36dcfabe
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@59a4a234
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@87cbab4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62b1e639
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@73a7da9a
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@fee63d8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62aac18b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@fc763c9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42f90ba1
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1dfaaa0b
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1601349477840430974.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=2336, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5225fc0, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@7b26ed80{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1601349477840430974.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@158f7644, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27e01ef4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@764ea794]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68cf5c5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59403154]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f79e734]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5776aca4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290db4ae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6384608a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73c66887]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d215b7a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3e7d9c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@490edd30
Registering SessionFactory: 4564389a-dae0-418b-8c74-5d102a474b0d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@35ce1b5e
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 16:55:39 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.647 seconds (JVM running for 9.204)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@727d30e6, payload=[Ljava.lang.Class;@3a6720a1}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@27c0ee03, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@6dcc9dfc}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@55dc76b3, payload=[Ljava.lang.Class;@5c763289}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@411323c6, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@553cd6dd}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 16:55:39 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 2336 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ab7ca88: startup date [Mon Nov 06 16:56:40 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fe2df8da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 881 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@63577452
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@eb5f71c{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@362ccbe
Adding type registration boolean -> org.hibernate.type.BooleanType@362ccbe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@362ccbe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@251ee1c6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4ba6baa4
Adding type registration yes_no -> org.hibernate.type.YesNoType@4c4e7ac1
Adding type registration byte -> org.hibernate.type.ByteType@17e8897c
Adding type registration byte -> org.hibernate.type.ByteType@17e8897c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17e8897c
Adding type registration character -> org.hibernate.type.CharacterType@7e7091ef
Adding type registration char -> org.hibernate.type.CharacterType@7e7091ef
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e7091ef
Adding type registration short -> org.hibernate.type.ShortType@6cb16442
Adding type registration short -> org.hibernate.type.ShortType@6cb16442
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cb16442
Adding type registration integer -> org.hibernate.type.IntegerType@61af5498
Adding type registration int -> org.hibernate.type.IntegerType@61af5498
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61af5498
Adding type registration long -> org.hibernate.type.LongType@663f1fb2
Adding type registration long -> org.hibernate.type.LongType@663f1fb2
Adding type registration java.lang.Long -> org.hibernate.type.LongType@663f1fb2
Adding type registration float -> org.hibernate.type.FloatType@25a759ff
Adding type registration float -> org.hibernate.type.FloatType@25a759ff
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@25a759ff
Adding type registration double -> org.hibernate.type.DoubleType@7d34f43e
Adding type registration double -> org.hibernate.type.DoubleType@7d34f43e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d34f43e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ba45137
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ba45137
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71b9e5b2
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71b9e5b2
Adding type registration string -> org.hibernate.type.StringType@14d3a8d6
Adding type registration java.lang.String -> org.hibernate.type.StringType@14d3a8d6
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@eaa0d8a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6ef1d6f9
Adding type registration url -> org.hibernate.type.UrlType@ffc1ceb
Adding type registration java.net.URL -> org.hibernate.type.UrlType@ffc1ceb
Adding type registration date -> org.hibernate.type.DateType@4262038
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4262038
Adding type registration time -> org.hibernate.type.TimeType@529a9217
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@529a9217
Adding type registration timestamp -> org.hibernate.type.TimestampType@210092f0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@210092f0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@210092f0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30646c86
Adding type registration calendar -> org.hibernate.type.CalendarType@247d40d5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@247d40d5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@247d40d5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4f522696
Adding type registration locale -> org.hibernate.type.LocaleType@302d3575
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@302d3575
Adding type registration currency -> org.hibernate.type.CurrencyType@4ffea88c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ffea88c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@341eb22b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@341eb22b
Adding type registration class -> org.hibernate.type.ClassType@2f3a69d6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f3a69d6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@749b4802
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@749b4802
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@80eca30
Adding type registration binary -> org.hibernate.type.BinaryType@440e7fc8
Adding type registration byte[] -> org.hibernate.type.BinaryType@440e7fc8
Adding type registration [B -> org.hibernate.type.BinaryType@440e7fc8
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ed4bbd1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ed4bbd1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ed4bbd1
Adding type registration row_version -> org.hibernate.type.RowVersionType@106af983
Adding type registration image -> org.hibernate.type.ImageType@1f364d8f
Adding type registration characters -> org.hibernate.type.CharArrayType@3ce9c882
Adding type registration char[] -> org.hibernate.type.CharArrayType@3ce9c882
Adding type registration [C -> org.hibernate.type.CharArrayType@3ce9c882
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17bcfcc9
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17bcfcc9
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17bcfcc9
Adding type registration text -> org.hibernate.type.TextType@2914f65
Adding type registration ntext -> org.hibernate.type.NTextType@1c9f4a5d
Adding type registration blob -> org.hibernate.type.BlobType@46e481d6
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46e481d6
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@46a85e4a
Adding type registration clob -> org.hibernate.type.ClobType@1cb2f0f5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1cb2f0f5
Adding type registration nclob -> org.hibernate.type.NClobType@7f2a5f12
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7f2a5f12
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7191fc85
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@234465ea
Adding type registration serializable -> org.hibernate.type.SerializableType@721ae0f3
Adding type registration object -> org.hibernate.type.ObjectType@36dcfabe
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@36dcfabe
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5093beee
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@378a031f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e8834be
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1ae64aef
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@574ff393
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@30ba909e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6f487ff3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4751e1c7
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1dfaaa0b
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1601349477840430974.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=2336, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7929e93b, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@eb5f71c{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1601349477840430974.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@34f85aa3, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d69029f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@380ffde9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48576b33]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73b114e3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24e325d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f8a38e5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@637484aa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d9bfe2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b59c918]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fbf4c53]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ccdffc4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: f38744bd-30fb-43f0-8e1c-1f94cbdc0344 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ab7ca88: startup date [Mon Nov 06 16:56:40 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.105 seconds (JVM running for 64.732)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 5 ms
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@7ce1be93, payload=[Ljava.lang.Class;@1576cb30}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@4dd744c2, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@6daa6fdc}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@1cce41dc, payload=[Ljava.lang.Class;@3f42363e}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@48c49440, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@76aec60b}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ab7ca88: startup date [Mon Nov 06 16:56:40 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 2336 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cda5170: startup date [Mon Nov 06 16:57:12 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fe2df8da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 852 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@56ac93a9
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@4ce77b9c{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@362ccbe
Adding type registration boolean -> org.hibernate.type.BooleanType@362ccbe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@362ccbe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@251ee1c6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4ba6baa4
Adding type registration yes_no -> org.hibernate.type.YesNoType@4c4e7ac1
Adding type registration byte -> org.hibernate.type.ByteType@17e8897c
Adding type registration byte -> org.hibernate.type.ByteType@17e8897c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17e8897c
Adding type registration character -> org.hibernate.type.CharacterType@7e7091ef
Adding type registration char -> org.hibernate.type.CharacterType@7e7091ef
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e7091ef
Adding type registration short -> org.hibernate.type.ShortType@6cb16442
Adding type registration short -> org.hibernate.type.ShortType@6cb16442
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cb16442
Adding type registration integer -> org.hibernate.type.IntegerType@61af5498
Adding type registration int -> org.hibernate.type.IntegerType@61af5498
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61af5498
Adding type registration long -> org.hibernate.type.LongType@663f1fb2
Adding type registration long -> org.hibernate.type.LongType@663f1fb2
Adding type registration java.lang.Long -> org.hibernate.type.LongType@663f1fb2
Adding type registration float -> org.hibernate.type.FloatType@25a759ff
Adding type registration float -> org.hibernate.type.FloatType@25a759ff
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@25a759ff
Adding type registration double -> org.hibernate.type.DoubleType@7d34f43e
Adding type registration double -> org.hibernate.type.DoubleType@7d34f43e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d34f43e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ba45137
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ba45137
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71b9e5b2
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71b9e5b2
Adding type registration string -> org.hibernate.type.StringType@14d3a8d6
Adding type registration java.lang.String -> org.hibernate.type.StringType@14d3a8d6
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@eaa0d8a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6ef1d6f9
Adding type registration url -> org.hibernate.type.UrlType@ffc1ceb
Adding type registration java.net.URL -> org.hibernate.type.UrlType@ffc1ceb
Adding type registration date -> org.hibernate.type.DateType@4262038
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4262038
Adding type registration time -> org.hibernate.type.TimeType@529a9217
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@529a9217
Adding type registration timestamp -> org.hibernate.type.TimestampType@210092f0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@210092f0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@210092f0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30646c86
Adding type registration calendar -> org.hibernate.type.CalendarType@247d40d5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@247d40d5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@247d40d5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4f522696
Adding type registration locale -> org.hibernate.type.LocaleType@302d3575
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@302d3575
Adding type registration currency -> org.hibernate.type.CurrencyType@4ffea88c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ffea88c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@341eb22b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@341eb22b
Adding type registration class -> org.hibernate.type.ClassType@2f3a69d6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f3a69d6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@749b4802
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@749b4802
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@80eca30
Adding type registration binary -> org.hibernate.type.BinaryType@440e7fc8
Adding type registration byte[] -> org.hibernate.type.BinaryType@440e7fc8
Adding type registration [B -> org.hibernate.type.BinaryType@440e7fc8
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ed4bbd1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ed4bbd1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ed4bbd1
Adding type registration row_version -> org.hibernate.type.RowVersionType@106af983
Adding type registration image -> org.hibernate.type.ImageType@1f364d8f
Adding type registration characters -> org.hibernate.type.CharArrayType@3ce9c882
Adding type registration char[] -> org.hibernate.type.CharArrayType@3ce9c882
Adding type registration [C -> org.hibernate.type.CharArrayType@3ce9c882
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17bcfcc9
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17bcfcc9
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17bcfcc9
Adding type registration text -> org.hibernate.type.TextType@2914f65
Adding type registration ntext -> org.hibernate.type.NTextType@1c9f4a5d
Adding type registration blob -> org.hibernate.type.BlobType@46e481d6
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46e481d6
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@46a85e4a
Adding type registration clob -> org.hibernate.type.ClobType@1cb2f0f5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1cb2f0f5
Adding type registration nclob -> org.hibernate.type.NClobType@7f2a5f12
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7f2a5f12
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7191fc85
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@234465ea
Adding type registration serializable -> org.hibernate.type.SerializableType@721ae0f3
Adding type registration object -> org.hibernate.type.ObjectType@36dcfabe
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@36dcfabe
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6e17ab1e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6697bd63
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54be17bf
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c70bfc1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3fecb60a
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@64cb6831
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@406c88f8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@298ba983
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1dfaaa0b
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1601349477840430974.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=2336, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@59199c41, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@4ce77b9c{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1601349477840430974.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5d7cdd7f, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61dc85f9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b73ab5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e7fda6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29704eee]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1984158e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@449317d9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f8c380]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d3f50ed]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e4c646b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d6f1049]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4527ee80]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: e6b237d9-3967-49ed-b3fc-a895ec8013ae (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cda5170: startup date [Mon Nov 06 16:57:12 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.822 seconds (JVM running for 96.777)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 4 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Starting Application on LuoRong with PID 4480 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 17:00:11 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a184b9e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3150 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@520028c2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@10c03600{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@370507bf
Adding type registration boolean -> org.hibernate.type.BooleanType@370507bf
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@370507bf
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c008961
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b254f75
Adding type registration yes_no -> org.hibernate.type.YesNoType@3c4d944b
Adding type registration byte -> org.hibernate.type.ByteType@2f096e07
Adding type registration byte -> org.hibernate.type.ByteType@2f096e07
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2f096e07
Adding type registration character -> org.hibernate.type.CharacterType@1c6cbfe7
Adding type registration char -> org.hibernate.type.CharacterType@1c6cbfe7
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c6cbfe7
Adding type registration short -> org.hibernate.type.ShortType@59334eef
Adding type registration short -> org.hibernate.type.ShortType@59334eef
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59334eef
Adding type registration integer -> org.hibernate.type.IntegerType@14e44bb3
Adding type registration int -> org.hibernate.type.IntegerType@14e44bb3
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14e44bb3
Adding type registration long -> org.hibernate.type.LongType@20e1194b
Adding type registration long -> org.hibernate.type.LongType@20e1194b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@20e1194b
Adding type registration float -> org.hibernate.type.FloatType@41c104c5
Adding type registration float -> org.hibernate.type.FloatType@41c104c5
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41c104c5
Adding type registration double -> org.hibernate.type.DoubleType@27e2b125
Adding type registration double -> org.hibernate.type.DoubleType@27e2b125
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27e2b125
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e1c3ad7
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e1c3ad7
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@63e4bfd7
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@63e4bfd7
Adding type registration string -> org.hibernate.type.StringType@305c840b
Adding type registration java.lang.String -> org.hibernate.type.StringType@305c840b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4110c873
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34c5688f
Adding type registration url -> org.hibernate.type.UrlType@1786bd04
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1786bd04
Adding type registration date -> org.hibernate.type.DateType@2d8c1126
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d8c1126
Adding type registration time -> org.hibernate.type.TimeType@6d9081bf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d9081bf
Adding type registration timestamp -> org.hibernate.type.TimestampType@5ed2b617
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ed2b617
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ed2b617
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e681f29
Adding type registration calendar -> org.hibernate.type.CalendarType@15611caa
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@15611caa
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@15611caa
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@46bbabbd
Adding type registration locale -> org.hibernate.type.LocaleType@52acef57
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@52acef57
Adding type registration currency -> org.hibernate.type.CurrencyType@63c24a59
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63c24a59
Adding type registration timezone -> org.hibernate.type.TimeZoneType@32e78626
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@32e78626
Adding type registration class -> org.hibernate.type.ClassType@4863ec01
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4863ec01
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3451b66c
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3451b66c
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e193917
Adding type registration binary -> org.hibernate.type.BinaryType@46eb4d0d
Adding type registration byte[] -> org.hibernate.type.BinaryType@46eb4d0d
Adding type registration [B -> org.hibernate.type.BinaryType@46eb4d0d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3bb18d76
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3bb18d76
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3bb18d76
Adding type registration row_version -> org.hibernate.type.RowVersionType@64fe0671
Adding type registration image -> org.hibernate.type.ImageType@35058764
Adding type registration characters -> org.hibernate.type.CharArrayType@61d93422
Adding type registration char[] -> org.hibernate.type.CharArrayType@61d93422
Adding type registration [C -> org.hibernate.type.CharArrayType@61d93422
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7f33f57b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7f33f57b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7f33f57b
Adding type registration text -> org.hibernate.type.TextType@2e9c60a2
Adding type registration ntext -> org.hibernate.type.NTextType@5cb6192b
Adding type registration blob -> org.hibernate.type.BlobType@1df18847
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1df18847
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6ecc125f
Adding type registration clob -> org.hibernate.type.ClobType@5665fb4e
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5665fb4e
Adding type registration nclob -> org.hibernate.type.NClobType@5e7db0f9
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e7db0f9
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8dd4e47
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ceeff6a
Adding type registration serializable -> org.hibernate.type.SerializableType@511bafaa
Adding type registration object -> org.hibernate.type.ObjectType@420a2a8e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@420a2a8e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b743a78
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@583927c2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59a4a234
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@87cbab4
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62b1e639
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73a7da9a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@fee63d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62aac18b
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@409eeba0
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.763221327771630173.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=4480, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1341ea7, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@10c03600{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.763221327771630173.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@d2862b2, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c6a164c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8456e5f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@764ea794]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68cf5c5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59403154]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f79e734]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5776aca4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290db4ae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6384608a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73c66887]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d215b7a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7e6bd2d3
Registering SessionFactory: 7923b55d-401f-4c7e-9f8f-cf4872ceadda (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1e5e31ab
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 17:00:11 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.67 seconds (JVM running for 9.246)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Starting Application on LuoRong with PID 7044 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67bd1999: startup date [Mon Nov 06 17:01:44 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a4dc02d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3234 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5c2e38f8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@46c5534f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2796b179
Adding type registration boolean -> org.hibernate.type.BooleanType@2796b179
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2796b179
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7725d6ac
Adding type registration true_false -> org.hibernate.type.TrueFalseType@14c08bf5
Adding type registration yes_no -> org.hibernate.type.YesNoType@7e5c6f45
Adding type registration byte -> org.hibernate.type.ByteType@d3aa06
Adding type registration byte -> org.hibernate.type.ByteType@d3aa06
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d3aa06
Adding type registration character -> org.hibernate.type.CharacterType@79ba8600
Adding type registration char -> org.hibernate.type.CharacterType@79ba8600
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@79ba8600
Adding type registration short -> org.hibernate.type.ShortType@3c29deab
Adding type registration short -> org.hibernate.type.ShortType@3c29deab
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c29deab
Adding type registration integer -> org.hibernate.type.IntegerType@202f642
Adding type registration int -> org.hibernate.type.IntegerType@202f642
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@202f642
Adding type registration long -> org.hibernate.type.LongType@1a2b58b3
Adding type registration long -> org.hibernate.type.LongType@1a2b58b3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a2b58b3
Adding type registration float -> org.hibernate.type.FloatType@20a9d1e6
Adding type registration float -> org.hibernate.type.FloatType@20a9d1e6
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@20a9d1e6
Adding type registration double -> org.hibernate.type.DoubleType@4eb95f45
Adding type registration double -> org.hibernate.type.DoubleType@4eb95f45
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4eb95f45
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37c87116
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37c87116
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c34df6c
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c34df6c
Adding type registration string -> org.hibernate.type.StringType@6a74f697
Adding type registration java.lang.String -> org.hibernate.type.StringType@6a74f697
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@136c9c05
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7e5fb426
Adding type registration url -> org.hibernate.type.UrlType@39bc344a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@39bc344a
Adding type registration date -> org.hibernate.type.DateType@19a9090b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@19a9090b
Adding type registration time -> org.hibernate.type.TimeType@105c10c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@105c10c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@5a9adc5a
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5a9adc5a
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5a9adc5a
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6483b5a8
Adding type registration calendar -> org.hibernate.type.CalendarType@1999a12
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1999a12
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1999a12
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eac8ca0
Adding type registration locale -> org.hibernate.type.LocaleType@40f7c381
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40f7c381
Adding type registration currency -> org.hibernate.type.CurrencyType@389f0b81
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@389f0b81
Adding type registration timezone -> org.hibernate.type.TimeZoneType@45c9edaf
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45c9edaf
Adding type registration class -> org.hibernate.type.ClassType@651e6f0d
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@651e6f0d
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66d64dec
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66d64dec
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a2bf260
Adding type registration binary -> org.hibernate.type.BinaryType@185bcc6a
Adding type registration byte[] -> org.hibernate.type.BinaryType@185bcc6a
Adding type registration [B -> org.hibernate.type.BinaryType@185bcc6a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@60118150
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@60118150
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@60118150
Adding type registration row_version -> org.hibernate.type.RowVersionType@19f5e834
Adding type registration image -> org.hibernate.type.ImageType@50af2ce2
Adding type registration characters -> org.hibernate.type.CharArrayType@3b92b777
Adding type registration char[] -> org.hibernate.type.CharArrayType@3b92b777
Adding type registration [C -> org.hibernate.type.CharArrayType@3b92b777
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2a1df9b3
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2a1df9b3
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2a1df9b3
Adding type registration text -> org.hibernate.type.TextType@59fcd0f5
Adding type registration ntext -> org.hibernate.type.NTextType@7bc2478
Adding type registration blob -> org.hibernate.type.BlobType@60ccca80
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@60ccca80
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@55690ca0
Adding type registration clob -> org.hibernate.type.ClobType@28ec906f
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28ec906f
Adding type registration nclob -> org.hibernate.type.NClobType@187a4a13
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@187a4a13
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cd6230f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4718f815
Adding type registration serializable -> org.hibernate.type.SerializableType@7c9b8f8f
Adding type registration object -> org.hibernate.type.ObjectType@6e4103a4
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e4103a4
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31407197
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57fa1838
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@88fe420
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6e58cc56
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c26d4c3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b9a3ca7
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2cc36d10
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d12ea2
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1856c745
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2043070122811507992.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7044, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@21579d52, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@46c5534f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2043070122811507992.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@273b0135, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62484912]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5797f8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@611ba597]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d2309c5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e705d6c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72046055]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@179c8425]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4033f4e9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ac6736]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e7117d1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@da2fc07]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2ef0528e
Registering SessionFactory: f231c814-8352-4cd5-83b4-eb887e06d1dc (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@55112a5e
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67bd1999: startup date [Mon Nov 06 17:01:44 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.792 seconds (JVM running for 9.367)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@382a1396, payload=[Ljava.lang.Class;@6b58f022}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@49fbeb75, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@3c325443}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@6e2f898a, payload=[Ljava.lang.Class;@40114840}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@76fcdd74, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@457b6a89}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67bd1999: startup date [Mon Nov 06 17:01:44 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 7044 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f35de6f: startup date [Mon Nov 06 17:04:21 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a4dc02d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 851 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@21c4b85d
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@796f9acd{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2796b179
Adding type registration boolean -> org.hibernate.type.BooleanType@2796b179
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2796b179
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7725d6ac
Adding type registration true_false -> org.hibernate.type.TrueFalseType@14c08bf5
Adding type registration yes_no -> org.hibernate.type.YesNoType@7e5c6f45
Adding type registration byte -> org.hibernate.type.ByteType@d3aa06
Adding type registration byte -> org.hibernate.type.ByteType@d3aa06
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d3aa06
Adding type registration character -> org.hibernate.type.CharacterType@79ba8600
Adding type registration char -> org.hibernate.type.CharacterType@79ba8600
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@79ba8600
Adding type registration short -> org.hibernate.type.ShortType@3c29deab
Adding type registration short -> org.hibernate.type.ShortType@3c29deab
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c29deab
Adding type registration integer -> org.hibernate.type.IntegerType@202f642
Adding type registration int -> org.hibernate.type.IntegerType@202f642
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@202f642
Adding type registration long -> org.hibernate.type.LongType@1a2b58b3
Adding type registration long -> org.hibernate.type.LongType@1a2b58b3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a2b58b3
Adding type registration float -> org.hibernate.type.FloatType@20a9d1e6
Adding type registration float -> org.hibernate.type.FloatType@20a9d1e6
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@20a9d1e6
Adding type registration double -> org.hibernate.type.DoubleType@4eb95f45
Adding type registration double -> org.hibernate.type.DoubleType@4eb95f45
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4eb95f45
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37c87116
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37c87116
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c34df6c
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c34df6c
Adding type registration string -> org.hibernate.type.StringType@6a74f697
Adding type registration java.lang.String -> org.hibernate.type.StringType@6a74f697
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@136c9c05
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7e5fb426
Adding type registration url -> org.hibernate.type.UrlType@39bc344a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@39bc344a
Adding type registration date -> org.hibernate.type.DateType@19a9090b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@19a9090b
Adding type registration time -> org.hibernate.type.TimeType@105c10c6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@105c10c6
Adding type registration timestamp -> org.hibernate.type.TimestampType@5a9adc5a
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5a9adc5a
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5a9adc5a
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6483b5a8
Adding type registration calendar -> org.hibernate.type.CalendarType@1999a12
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1999a12
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1999a12
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eac8ca0
Adding type registration locale -> org.hibernate.type.LocaleType@40f7c381
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40f7c381
Adding type registration currency -> org.hibernate.type.CurrencyType@389f0b81
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@389f0b81
Adding type registration timezone -> org.hibernate.type.TimeZoneType@45c9edaf
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45c9edaf
Adding type registration class -> org.hibernate.type.ClassType@651e6f0d
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@651e6f0d
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66d64dec
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66d64dec
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a2bf260
Adding type registration binary -> org.hibernate.type.BinaryType@185bcc6a
Adding type registration byte[] -> org.hibernate.type.BinaryType@185bcc6a
Adding type registration [B -> org.hibernate.type.BinaryType@185bcc6a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@60118150
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@60118150
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@60118150
Adding type registration row_version -> org.hibernate.type.RowVersionType@19f5e834
Adding type registration image -> org.hibernate.type.ImageType@50af2ce2
Adding type registration characters -> org.hibernate.type.CharArrayType@3b92b777
Adding type registration char[] -> org.hibernate.type.CharArrayType@3b92b777
Adding type registration [C -> org.hibernate.type.CharArrayType@3b92b777
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2a1df9b3
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2a1df9b3
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2a1df9b3
Adding type registration text -> org.hibernate.type.TextType@59fcd0f5
Adding type registration ntext -> org.hibernate.type.NTextType@7bc2478
Adding type registration blob -> org.hibernate.type.BlobType@60ccca80
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@60ccca80
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@55690ca0
Adding type registration clob -> org.hibernate.type.ClobType@28ec906f
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28ec906f
Adding type registration nclob -> org.hibernate.type.NClobType@187a4a13
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@187a4a13
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cd6230f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4718f815
Adding type registration serializable -> org.hibernate.type.SerializableType@7c9b8f8f
Adding type registration object -> org.hibernate.type.ObjectType@6e4103a4
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e4103a4
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c2f9fb0
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ee679e5
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@273f6955
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@417f4511
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41ad8091
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1cd9f010
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4070471f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7b9cc5cd
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1856c745
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2043070122811507992.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7044, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1878919d, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@796f9acd{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2043070122811507992.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@55f93fd9, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fdfff77]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41c1ce7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a052e49]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67860db3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46208d3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e9aac84]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d5339df]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1963d5da]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@859b1dc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@684eb21d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16458b25]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 6aad7162-ac0d-46da-9db2-cf4fafa92763 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f35de6f: startup date [Mon Nov 06 17:04:21 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.043 seconds (JVM running for 160.91)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 5 ms
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@117a1a35, payload=[Ljava.lang.Class;@488eb031}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@20210e4e, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@303ffafa}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@7155e57a, payload=[Ljava.lang.Class;@4ce7cc59}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@641ce8f5, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@2b3b36a6}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Starting Application on LuoRong with PID 2876 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Mon Nov 06 17:15:55 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f52a2e4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2901 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1b62dc8b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@54109473{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77adb12e
Adding type registration boolean -> org.hibernate.type.BooleanType@77adb12e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77adb12e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6d820bd5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e8d54f5
Adding type registration yes_no -> org.hibernate.type.YesNoType@655dbe02
Adding type registration byte -> org.hibernate.type.ByteType@77326ffd
Adding type registration byte -> org.hibernate.type.ByteType@77326ffd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77326ffd
Adding type registration character -> org.hibernate.type.CharacterType@550ddf15
Adding type registration char -> org.hibernate.type.CharacterType@550ddf15
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@550ddf15
Adding type registration short -> org.hibernate.type.ShortType@507ace99
Adding type registration short -> org.hibernate.type.ShortType@507ace99
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@507ace99
Adding type registration integer -> org.hibernate.type.IntegerType@7a43fe92
Adding type registration int -> org.hibernate.type.IntegerType@7a43fe92
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a43fe92
Adding type registration long -> org.hibernate.type.LongType@33fa5039
Adding type registration long -> org.hibernate.type.LongType@33fa5039
Adding type registration java.lang.Long -> org.hibernate.type.LongType@33fa5039
Adding type registration float -> org.hibernate.type.FloatType@41aa1c78
Adding type registration float -> org.hibernate.type.FloatType@41aa1c78
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41aa1c78
Adding type registration double -> org.hibernate.type.DoubleType@659b309d
Adding type registration double -> org.hibernate.type.DoubleType@659b309d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@659b309d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@eb730d7
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@eb730d7
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@24cfc68d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@24cfc68d
Adding type registration string -> org.hibernate.type.StringType@66e4ffd0
Adding type registration java.lang.String -> org.hibernate.type.StringType@66e4ffd0
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@72e41747
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3c00ca31
Adding type registration url -> org.hibernate.type.UrlType@233d9525
Adding type registration java.net.URL -> org.hibernate.type.UrlType@233d9525
Adding type registration date -> org.hibernate.type.DateType@48c9e9a8
Adding type registration java.sql.Date -> org.hibernate.type.DateType@48c9e9a8
Adding type registration time -> org.hibernate.type.TimeType@1872b869
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1872b869
Adding type registration timestamp -> org.hibernate.type.TimestampType@4e14964a
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4e14964a
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4e14964a
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7918d389
Adding type registration calendar -> org.hibernate.type.CalendarType@73a0de11
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@73a0de11
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@73a0de11
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60943e4e
Adding type registration locale -> org.hibernate.type.LocaleType@a6f6836
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a6f6836
Adding type registration currency -> org.hibernate.type.CurrencyType@200c5c57
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@200c5c57
Adding type registration timezone -> org.hibernate.type.TimeZoneType@79bb094d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@79bb094d
Adding type registration class -> org.hibernate.type.ClassType@2614d34e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2614d34e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@382d746b
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@382d746b
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9bb052f
Adding type registration binary -> org.hibernate.type.BinaryType@2fe492c
Adding type registration byte[] -> org.hibernate.type.BinaryType@2fe492c
Adding type registration [B -> org.hibernate.type.BinaryType@2fe492c
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f2ea637
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f2ea637
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f2ea637
Adding type registration row_version -> org.hibernate.type.RowVersionType@6690771d
Adding type registration image -> org.hibernate.type.ImageType@27e7c623
Adding type registration characters -> org.hibernate.type.CharArrayType@4fa09035
Adding type registration char[] -> org.hibernate.type.CharArrayType@4fa09035
Adding type registration [C -> org.hibernate.type.CharArrayType@4fa09035
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@542a88da
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@542a88da
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@542a88da
Adding type registration text -> org.hibernate.type.TextType@287cf72f
Adding type registration ntext -> org.hibernate.type.NTextType@447b14d1
Adding type registration blob -> org.hibernate.type.BlobType@4d9b639e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d9b639e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@457c5302
Adding type registration clob -> org.hibernate.type.ClobType@522ae371
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@522ae371
Adding type registration nclob -> org.hibernate.type.NClobType@431fcf
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@431fcf
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1dc59ee5
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44ce867f
Adding type registration serializable -> org.hibernate.type.SerializableType@4a9d0dd5
Adding type registration object -> org.hibernate.type.ObjectType@3e8d3215
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e8d3215
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17936503
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4059e07e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2ea3f00d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@36f03311
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ac7e3b1
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3592ae87
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48013a0
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@33dfc09a
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@f8d9c05
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.671627507426782527.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=2876, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d4870cc, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@54109473{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.671627507426782527.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1c5444b7, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5573b420]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@550d99e9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345857d6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@399b4ce7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2716e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60b1202a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1629e5de]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96e0b53]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c9a5a3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65d5a989]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cafb73b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4d12f175
Registering SessionFactory: 44dafe8d-027d-4670-8675-3c1e65c6cc30 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@8bd5179
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Mon Nov 06 17:15:55 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.197 seconds (JVM running for 8.776)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Mon Nov 06 17:15:55 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 2876 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@39e17385: startup date [Mon Nov 06 17:45:49 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f52a2e4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 865 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Starting Application on LuoRong with PID 9040 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Mon Nov 06 17:45:56 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd0d974e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3114 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3c95c83a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2851cd31{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@595398d2
Adding type registration true_false -> org.hibernate.type.TrueFalseType@d031c3e
Adding type registration yes_no -> org.hibernate.type.YesNoType@773d3ddd
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@70624924
Adding type registration character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration char -> org.hibernate.type.CharacterType@541cab4b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6de49e56
Adding type registration integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration int -> org.hibernate.type.IntegerType@534bdad7
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@19fa41a3
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6477bea0
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration string -> org.hibernate.type.StringType@611a1d8c
Adding type registration java.lang.String -> org.hibernate.type.StringType@611a1d8c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c2e2bc7
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3740583a
Adding type registration url -> org.hibernate.type.UrlType@7a832d56
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a832d56
Adding type registration date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration java.sql.Date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4480d94d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543b57bc
Adding type registration calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63068846
Adding type registration locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration timezone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50a6971e
Adding type registration binary -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration byte[] -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration [B -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration row_version -> org.hibernate.type.RowVersionType@5dd25ed7
Adding type registration image -> org.hibernate.type.ImageType@528ce1e4
Adding type registration characters -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration char[] -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration [C -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration text -> org.hibernate.type.TextType@3f07aef8
Adding type registration ntext -> org.hibernate.type.NTextType@796df3a0
Adding type registration blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11cad083
Adding type registration clob -> org.hibernate.type.ClobType@10114231
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10114231
Adding type registration nclob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73b8a1ba
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69cdf480
Adding type registration serializable -> org.hibernate.type.SerializableType@5efb300a
Adding type registration object -> org.hibernate.type.ObjectType@597ad390
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@597ad390
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ec9bc0e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31a00e14
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2ac7ed7c
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c500579
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f0afb31
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e6b906a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b5232d6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@57759508
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@20ec7621
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.4355065605615295039.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=9040, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@65b033f, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2851cd31{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.4355065605615295039.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6a64ea9c, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33157e60]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d35ddd3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62432e7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11032a1b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@110af924]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46632a6b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@440c9087]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1143c3b5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7de031]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae9ff1e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bfe14f7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@afcee3
Registering SessionFactory: 9878b7f0-805b-4841-be0a-cac4e5348637 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1b4daf93
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Mon Nov 06 17:45:56 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.418 seconds (JVM running for 9.966)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Mon Nov 06 17:45:56 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 9040 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@230372a8: startup date [Mon Nov 06 17:51:04 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd0d974e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1011 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f804c06
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@5dc69858{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@595398d2
Adding type registration true_false -> org.hibernate.type.TrueFalseType@d031c3e
Adding type registration yes_no -> org.hibernate.type.YesNoType@773d3ddd
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@70624924
Adding type registration character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration char -> org.hibernate.type.CharacterType@541cab4b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6de49e56
Adding type registration integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration int -> org.hibernate.type.IntegerType@534bdad7
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@19fa41a3
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6477bea0
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration string -> org.hibernate.type.StringType@611a1d8c
Adding type registration java.lang.String -> org.hibernate.type.StringType@611a1d8c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c2e2bc7
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3740583a
Adding type registration url -> org.hibernate.type.UrlType@7a832d56
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a832d56
Adding type registration date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration java.sql.Date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4480d94d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543b57bc
Adding type registration calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63068846
Adding type registration locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration timezone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50a6971e
Adding type registration binary -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration byte[] -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration [B -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration row_version -> org.hibernate.type.RowVersionType@5dd25ed7
Adding type registration image -> org.hibernate.type.ImageType@528ce1e4
Adding type registration characters -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration char[] -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration [C -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration text -> org.hibernate.type.TextType@3f07aef8
Adding type registration ntext -> org.hibernate.type.NTextType@796df3a0
Adding type registration blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11cad083
Adding type registration clob -> org.hibernate.type.ClobType@10114231
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10114231
Adding type registration nclob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73b8a1ba
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69cdf480
Adding type registration serializable -> org.hibernate.type.SerializableType@5efb300a
Adding type registration object -> org.hibernate.type.ObjectType@597ad390
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@597ad390
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@39381b13
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58f68dd7
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3483da3b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@42ebf4ea
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3bf28f27
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@570625bb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7dfe7f62
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@602f8893
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@20ec7621
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.4355065605615295039.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=9040, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@54d64157, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@5dc69858{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.4355065605615295039.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@498ee5d9, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608ab168]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b97eff2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7184f1d8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2445a1e8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a34d70]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76934335]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4147b422]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b7737f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591f99b0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@611183b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28144415]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: d8ba586c-0994-40cf-8ad3-bd8fb71f6574 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@230372a8: startup date [Mon Nov 06 17:51:04 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.277 seconds (JVM running for 311.675)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@230372a8: startup date [Mon Nov 06 17:51:04 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 9040 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@23b4c873: startup date [Mon Nov 06 17:54:32 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd0d974e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 814 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@584ec42a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@41a3144e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@595398d2
Adding type registration true_false -> org.hibernate.type.TrueFalseType@d031c3e
Adding type registration yes_no -> org.hibernate.type.YesNoType@773d3ddd
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@70624924
Adding type registration character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration char -> org.hibernate.type.CharacterType@541cab4b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6de49e56
Adding type registration integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration int -> org.hibernate.type.IntegerType@534bdad7
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@19fa41a3
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6477bea0
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration string -> org.hibernate.type.StringType@611a1d8c
Adding type registration java.lang.String -> org.hibernate.type.StringType@611a1d8c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c2e2bc7
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3740583a
Adding type registration url -> org.hibernate.type.UrlType@7a832d56
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a832d56
Adding type registration date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration java.sql.Date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4480d94d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543b57bc
Adding type registration calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63068846
Adding type registration locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration timezone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50a6971e
Adding type registration binary -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration byte[] -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration [B -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration row_version -> org.hibernate.type.RowVersionType@5dd25ed7
Adding type registration image -> org.hibernate.type.ImageType@528ce1e4
Adding type registration characters -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration char[] -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration [C -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration text -> org.hibernate.type.TextType@3f07aef8
Adding type registration ntext -> org.hibernate.type.NTextType@796df3a0
Adding type registration blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11cad083
Adding type registration clob -> org.hibernate.type.ClobType@10114231
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10114231
Adding type registration nclob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73b8a1ba
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69cdf480
Adding type registration serializable -> org.hibernate.type.SerializableType@5efb300a
Adding type registration object -> org.hibernate.type.ObjectType@597ad390
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@597ad390
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ebdb624
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7772cf59
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@75c4c3ff
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21105423
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@229fdab3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4376d1be
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@107e2914
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@33ecd674
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@20ec7621
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.4355065605615295039.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=9040, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@70c855fc, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@41a3144e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.4355065605615295039.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2b8adddd, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ddc187]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@407d992f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66961bf9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6477ca81]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32d546a4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc57aae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@764558cc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6325f0d9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fd9e36b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70303d5f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51f243e2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 5984ea0b-f4fb-48eb-b471-71d430c1467c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public java.lang.String sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@23b4c873: startup date [Mon Nov 06 17:54:32 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.761 seconds (JVM running for 519.197)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@23b4c873: startup date [Mon Nov 06 17:54:32 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 9040 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@66c926f: startup date [Mon Nov 06 17:55:59 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd0d974e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 698 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1a2a86a2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7198de03{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@595398d2
Adding type registration true_false -> org.hibernate.type.TrueFalseType@d031c3e
Adding type registration yes_no -> org.hibernate.type.YesNoType@773d3ddd
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@70624924
Adding type registration character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration char -> org.hibernate.type.CharacterType@541cab4b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6de49e56
Adding type registration integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration int -> org.hibernate.type.IntegerType@534bdad7
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@19fa41a3
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6477bea0
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration string -> org.hibernate.type.StringType@611a1d8c
Adding type registration java.lang.String -> org.hibernate.type.StringType@611a1d8c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c2e2bc7
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3740583a
Adding type registration url -> org.hibernate.type.UrlType@7a832d56
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a832d56
Adding type registration date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration java.sql.Date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4480d94d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543b57bc
Adding type registration calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63068846
Adding type registration locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration timezone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50a6971e
Adding type registration binary -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration byte[] -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration [B -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration row_version -> org.hibernate.type.RowVersionType@5dd25ed7
Adding type registration image -> org.hibernate.type.ImageType@528ce1e4
Adding type registration characters -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration char[] -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration [C -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration text -> org.hibernate.type.TextType@3f07aef8
Adding type registration ntext -> org.hibernate.type.NTextType@796df3a0
Adding type registration blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11cad083
Adding type registration clob -> org.hibernate.type.ClobType@10114231
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10114231
Adding type registration nclob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73b8a1ba
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69cdf480
Adding type registration serializable -> org.hibernate.type.SerializableType@5efb300a
Adding type registration object -> org.hibernate.type.ObjectType@597ad390
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@597ad390
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ce61096
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e02421d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6df2715f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@72613ab0
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e8ff6ca
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@12f151ac
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6c77b224
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@17b8b1a0
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@20ec7621
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.4355065605615295039.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=9040, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@543eac68, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@7198de03{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.4355065605615295039.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6d652c5d, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59872204]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38168d16]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c22cbe]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17310259]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b1a75f3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55f45dc2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f69e523]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ab6e3c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7553886f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68efc03e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d01f5a3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 9865ba9c-6cd2-42fe-a591-436d4b10c125 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public java.lang.String sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.Errors)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@66c926f: startup date [Mon Nov 06 17:55:59 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.636 seconds (JVM running for 606.812)
Starting Application on LuoRong with PID 648 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2288e92d: startup date [Mon Nov 06 17:57:28 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7cd81320] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2855 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@47476de6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@4793346d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@21bec100
Adding type registration boolean -> org.hibernate.type.BooleanType@21bec100
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@21bec100
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d0bf28e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@28a1f739
Adding type registration yes_no -> org.hibernate.type.YesNoType@69bacb75
Adding type registration byte -> org.hibernate.type.ByteType@37e5eacb
Adding type registration byte -> org.hibernate.type.ByteType@37e5eacb
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37e5eacb
Adding type registration character -> org.hibernate.type.CharacterType@64e1f346
Adding type registration char -> org.hibernate.type.CharacterType@64e1f346
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@64e1f346
Adding type registration short -> org.hibernate.type.ShortType@175115fe
Adding type registration short -> org.hibernate.type.ShortType@175115fe
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@175115fe
Adding type registration integer -> org.hibernate.type.IntegerType@406e11c9
Adding type registration int -> org.hibernate.type.IntegerType@406e11c9
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@406e11c9
Adding type registration long -> org.hibernate.type.LongType@50d5d4d3
Adding type registration long -> org.hibernate.type.LongType@50d5d4d3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@50d5d4d3
Adding type registration float -> org.hibernate.type.FloatType@1f37e4c8
Adding type registration float -> org.hibernate.type.FloatType@1f37e4c8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1f37e4c8
Adding type registration double -> org.hibernate.type.DoubleType@7358c478
Adding type registration double -> org.hibernate.type.DoubleType@7358c478
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7358c478
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4074fc16
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4074fc16
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fcc8a30
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fcc8a30
Adding type registration string -> org.hibernate.type.StringType@7de94a76
Adding type registration java.lang.String -> org.hibernate.type.StringType@7de94a76
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3450820d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@373f8e78
Adding type registration url -> org.hibernate.type.UrlType@468b2a1b
Adding type registration java.net.URL -> org.hibernate.type.UrlType@468b2a1b
Adding type registration date -> org.hibernate.type.DateType@69cc711e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@69cc711e
Adding type registration time -> org.hibernate.type.TimeType@5d9e905a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d9e905a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5f644c85
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f644c85
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f644c85
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4fbb9b97
Adding type registration calendar -> org.hibernate.type.CalendarType@27340b2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@27340b2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@27340b2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@547722c1
Adding type registration locale -> org.hibernate.type.LocaleType@312dbf53
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@312dbf53
Adding type registration currency -> org.hibernate.type.CurrencyType@220ef67e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@220ef67e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e7f60d4
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e7f60d4
Adding type registration class -> org.hibernate.type.ClassType@3dd27115
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3dd27115
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@482e5eb
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@482e5eb
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@66e33ddf
Adding type registration binary -> org.hibernate.type.BinaryType@4baf800e
Adding type registration byte[] -> org.hibernate.type.BinaryType@4baf800e
Adding type registration [B -> org.hibernate.type.BinaryType@4baf800e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e71564d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e71564d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e71564d
Adding type registration row_version -> org.hibernate.type.RowVersionType@472a0969
Adding type registration image -> org.hibernate.type.ImageType@39dec999
Adding type registration characters -> org.hibernate.type.CharArrayType@15b65910
Adding type registration char[] -> org.hibernate.type.CharArrayType@15b65910
Adding type registration [C -> org.hibernate.type.CharArrayType@15b65910
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@377548d9
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@377548d9
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@377548d9
Adding type registration text -> org.hibernate.type.TextType@2d09304d
Adding type registration ntext -> org.hibernate.type.NTextType@6c7eada0
Adding type registration blob -> org.hibernate.type.BlobType@6fdb1600
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6fdb1600
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75264b9e
Adding type registration clob -> org.hibernate.type.ClobType@5a9ae5fc
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a9ae5fc
Adding type registration nclob -> org.hibernate.type.NClobType@5651e7c9
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5651e7c9
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b779ce2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@60cef8d7
Adding type registration serializable -> org.hibernate.type.SerializableType@39f3969
Adding type registration object -> org.hibernate.type.ObjectType@7ca94e95
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca94e95
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67a1947f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@514ab3f8
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27c3e2c4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69cb4188
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@22222a2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@673946d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e9e83a5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d6a42ff
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@473751ce
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6654999353969198960.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=648, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4cc1106d, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@4793346d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6654999353969198960.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@10cb9bfd, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2710d5e0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d0ab872]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75b2f851]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d032f2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cf74203]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2be16361]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@590e936e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7c95ef]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f3134b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42186b2b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c61a18d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@66f45667
Registering SessionFactory: 504b18a5-3c3c-4e53-a449-146f3b4e8057 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@26ee5bff
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public java.lang.String sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.Errors)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2288e92d: startup date [Mon Nov 06 17:57:28 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.263 seconds (JVM running for 8.853)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2288e92d: startup date [Mon Nov 06 17:57:28 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 648 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2b6d22: startup date [Mon Nov 06 17:58:09 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7cd81320] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 749 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4e4e2e74
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@14f2d82e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@21bec100
Adding type registration boolean -> org.hibernate.type.BooleanType@21bec100
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@21bec100
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d0bf28e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@28a1f739
Adding type registration yes_no -> org.hibernate.type.YesNoType@69bacb75
Adding type registration byte -> org.hibernate.type.ByteType@37e5eacb
Adding type registration byte -> org.hibernate.type.ByteType@37e5eacb
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37e5eacb
Adding type registration character -> org.hibernate.type.CharacterType@64e1f346
Adding type registration char -> org.hibernate.type.CharacterType@64e1f346
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@64e1f346
Adding type registration short -> org.hibernate.type.ShortType@175115fe
Adding type registration short -> org.hibernate.type.ShortType@175115fe
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@175115fe
Adding type registration integer -> org.hibernate.type.IntegerType@406e11c9
Adding type registration int -> org.hibernate.type.IntegerType@406e11c9
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@406e11c9
Adding type registration long -> org.hibernate.type.LongType@50d5d4d3
Adding type registration long -> org.hibernate.type.LongType@50d5d4d3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@50d5d4d3
Adding type registration float -> org.hibernate.type.FloatType@1f37e4c8
Adding type registration float -> org.hibernate.type.FloatType@1f37e4c8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1f37e4c8
Adding type registration double -> org.hibernate.type.DoubleType@7358c478
Adding type registration double -> org.hibernate.type.DoubleType@7358c478
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7358c478
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4074fc16
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4074fc16
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fcc8a30
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fcc8a30
Adding type registration string -> org.hibernate.type.StringType@7de94a76
Adding type registration java.lang.String -> org.hibernate.type.StringType@7de94a76
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3450820d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@373f8e78
Adding type registration url -> org.hibernate.type.UrlType@468b2a1b
Adding type registration java.net.URL -> org.hibernate.type.UrlType@468b2a1b
Adding type registration date -> org.hibernate.type.DateType@69cc711e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@69cc711e
Adding type registration time -> org.hibernate.type.TimeType@5d9e905a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d9e905a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5f644c85
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f644c85
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f644c85
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4fbb9b97
Adding type registration calendar -> org.hibernate.type.CalendarType@27340b2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@27340b2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@27340b2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@547722c1
Adding type registration locale -> org.hibernate.type.LocaleType@312dbf53
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@312dbf53
Adding type registration currency -> org.hibernate.type.CurrencyType@220ef67e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@220ef67e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e7f60d4
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e7f60d4
Adding type registration class -> org.hibernate.type.ClassType@3dd27115
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3dd27115
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@482e5eb
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@482e5eb
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@66e33ddf
Adding type registration binary -> org.hibernate.type.BinaryType@4baf800e
Adding type registration byte[] -> org.hibernate.type.BinaryType@4baf800e
Adding type registration [B -> org.hibernate.type.BinaryType@4baf800e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e71564d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e71564d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e71564d
Adding type registration row_version -> org.hibernate.type.RowVersionType@472a0969
Adding type registration image -> org.hibernate.type.ImageType@39dec999
Adding type registration characters -> org.hibernate.type.CharArrayType@15b65910
Adding type registration char[] -> org.hibernate.type.CharArrayType@15b65910
Adding type registration [C -> org.hibernate.type.CharArrayType@15b65910
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@377548d9
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@377548d9
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@377548d9
Adding type registration text -> org.hibernate.type.TextType@2d09304d
Adding type registration ntext -> org.hibernate.type.NTextType@6c7eada0
Adding type registration blob -> org.hibernate.type.BlobType@6fdb1600
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6fdb1600
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75264b9e
Adding type registration clob -> org.hibernate.type.ClobType@5a9ae5fc
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a9ae5fc
Adding type registration nclob -> org.hibernate.type.NClobType@5651e7c9
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5651e7c9
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b779ce2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@60cef8d7
Adding type registration serializable -> org.hibernate.type.SerializableType@39f3969
Adding type registration object -> org.hibernate.type.ObjectType@7ca94e95
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ca94e95
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e00f79e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ed09382
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@121017df
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f843d95
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@26f19bfc
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c475023
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4efb0a9b
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5dee44
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@473751ce
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6654999353969198960.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=648, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13f8ff8c, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@14f2d82e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6654999353969198960.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3f6ea010, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33559ac4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2effb3a5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b7151ea]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7df42c66]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9d34c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f53497e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@313fca3a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@312c0249]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@be3de2a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ec81a8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@676cf39c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: c6e7f98c-612f-404c-a64e-41eaf85cdb51 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.Errors)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c2b6d22: startup date [Mon Nov 06 17:58:09 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.945 seconds (JVM running for 44.086)
Starting Application on LuoRong with PID 3916 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Mon Nov 06 17:58:18 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54379762] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2905 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2f261819{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c8de02
Adding type registration true_false -> org.hibernate.type.TrueFalseType@579105f2
Adding type registration yes_no -> org.hibernate.type.YesNoType@1c58da11
Adding type registration byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration character -> org.hibernate.type.CharacterType@50a17209
Adding type registration char -> org.hibernate.type.CharacterType@50a17209
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@50a17209
Adding type registration short -> org.hibernate.type.ShortType@8ca10df
Adding type registration short -> org.hibernate.type.ShortType@8ca10df
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8ca10df
Adding type registration integer -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration int -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration long -> org.hibernate.type.LongType@14f7e858
Adding type registration long -> org.hibernate.type.LongType@14f7e858
Adding type registration java.lang.Long -> org.hibernate.type.LongType@14f7e858
Adding type registration float -> org.hibernate.type.FloatType@79f1462f
Adding type registration float -> org.hibernate.type.FloatType@79f1462f
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@79f1462f
Adding type registration double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e9c6587
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e9c6587
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@123dfd84
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@123dfd84
Adding type registration string -> org.hibernate.type.StringType@73dd6de0
Adding type registration java.lang.String -> org.hibernate.type.StringType@73dd6de0
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3efa49d9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f1fb247
Adding type registration url -> org.hibernate.type.UrlType@226a0706
Adding type registration java.net.URL -> org.hibernate.type.UrlType@226a0706
Adding type registration date -> org.hibernate.type.DateType@13c2017
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13c2017
Adding type registration time -> org.hibernate.type.TimeType@4a8f4c36
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4a8f4c36
Adding type registration timestamp -> org.hibernate.type.TimestampType@a0c43db
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a0c43db
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a0c43db
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d8dddf
Adding type registration calendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@556f1838
Adding type registration locale -> org.hibernate.type.LocaleType@4bd65770
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4bd65770
Adding type registration currency -> org.hibernate.type.CurrencyType@1c8ba706
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c8ba706
Adding type registration timezone -> org.hibernate.type.TimeZoneType@115ad05e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@115ad05e
Adding type registration class -> org.hibernate.type.ClassType@397ffc0b
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@397ffc0b
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@430318dd
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@430318dd
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@23865888
Adding type registration binary -> org.hibernate.type.BinaryType@6e061503
Adding type registration byte[] -> org.hibernate.type.BinaryType@6e061503
Adding type registration [B -> org.hibernate.type.BinaryType@6e061503
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration row_version -> org.hibernate.type.RowVersionType@516471c
Adding type registration image -> org.hibernate.type.ImageType@1fd4b42
Adding type registration characters -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration char[] -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration [C -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration text -> org.hibernate.type.TextType@29e741b7
Adding type registration ntext -> org.hibernate.type.NTextType@71c07d64
Adding type registration blob -> org.hibernate.type.BlobType@62b962d5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62b962d5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37348572
Adding type registration clob -> org.hibernate.type.ClobType@70be7bc
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@70be7bc
Adding type registration nclob -> org.hibernate.type.NClobType@633e1c54
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@633e1c54
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d8f8dde
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5565c331
Adding type registration serializable -> org.hibernate.type.SerializableType@6d82a118
Adding type registration object -> org.hibernate.type.ObjectType@31c17015
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@31c17015
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6d245ec8
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57dfcaa1
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e1eb6e9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60705644
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2fed869c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@64edb02
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d4c9cdc
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fec2d47
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7c1f6071
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2304811737739351531.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=3916, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@784927dd, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2f261819{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2304811737739351531.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7767eb88, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e612bc7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d0cafe0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@145c03e0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d97be27]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2793443f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21e93884]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f44a795]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8e1ca4d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8d3628]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cc54ea6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5515476d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1aff81cb
Registering SessionFactory: eccf69d7-e421-4203-bc91-c7a11571c46f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@15d89612
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.Errors)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Mon Nov 06 17:58:18 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.072 seconds (JVM running for 8.66)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Mon Nov 06 17:58:18 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 3916 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c3914a5: startup date [Mon Nov 06 17:58:56 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54379762] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 846 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4d4ef65d
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@5c56b05f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c8de02
Adding type registration true_false -> org.hibernate.type.TrueFalseType@579105f2
Adding type registration yes_no -> org.hibernate.type.YesNoType@1c58da11
Adding type registration byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration character -> org.hibernate.type.CharacterType@50a17209
Adding type registration char -> org.hibernate.type.CharacterType@50a17209
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@50a17209
Adding type registration short -> org.hibernate.type.ShortType@8ca10df
Adding type registration short -> org.hibernate.type.ShortType@8ca10df
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8ca10df
Adding type registration integer -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration int -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration long -> org.hibernate.type.LongType@14f7e858
Adding type registration long -> org.hibernate.type.LongType@14f7e858
Adding type registration java.lang.Long -> org.hibernate.type.LongType@14f7e858
Adding type registration float -> org.hibernate.type.FloatType@79f1462f
Adding type registration float -> org.hibernate.type.FloatType@79f1462f
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@79f1462f
Adding type registration double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e9c6587
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e9c6587
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@123dfd84
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@123dfd84
Adding type registration string -> org.hibernate.type.StringType@73dd6de0
Adding type registration java.lang.String -> org.hibernate.type.StringType@73dd6de0
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3efa49d9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f1fb247
Adding type registration url -> org.hibernate.type.UrlType@226a0706
Adding type registration java.net.URL -> org.hibernate.type.UrlType@226a0706
Adding type registration date -> org.hibernate.type.DateType@13c2017
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13c2017
Adding type registration time -> org.hibernate.type.TimeType@4a8f4c36
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4a8f4c36
Adding type registration timestamp -> org.hibernate.type.TimestampType@a0c43db
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a0c43db
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a0c43db
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d8dddf
Adding type registration calendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@556f1838
Adding type registration locale -> org.hibernate.type.LocaleType@4bd65770
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4bd65770
Adding type registration currency -> org.hibernate.type.CurrencyType@1c8ba706
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c8ba706
Adding type registration timezone -> org.hibernate.type.TimeZoneType@115ad05e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@115ad05e
Adding type registration class -> org.hibernate.type.ClassType@397ffc0b
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@397ffc0b
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@430318dd
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@430318dd
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@23865888
Adding type registration binary -> org.hibernate.type.BinaryType@6e061503
Adding type registration byte[] -> org.hibernate.type.BinaryType@6e061503
Adding type registration [B -> org.hibernate.type.BinaryType@6e061503
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration row_version -> org.hibernate.type.RowVersionType@516471c
Adding type registration image -> org.hibernate.type.ImageType@1fd4b42
Adding type registration characters -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration char[] -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration [C -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration text -> org.hibernate.type.TextType@29e741b7
Adding type registration ntext -> org.hibernate.type.NTextType@71c07d64
Adding type registration blob -> org.hibernate.type.BlobType@62b962d5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62b962d5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37348572
Adding type registration clob -> org.hibernate.type.ClobType@70be7bc
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@70be7bc
Adding type registration nclob -> org.hibernate.type.NClobType@633e1c54
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@633e1c54
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d8f8dde
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5565c331
Adding type registration serializable -> org.hibernate.type.SerializableType@6d82a118
Adding type registration object -> org.hibernate.type.ObjectType@31c17015
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@31c17015
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7b53be88
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2a3f742e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45336a0d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@38a31bf3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e624591
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@fadd477
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5190b48d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@71cc41cf
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7c1f6071
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2304811737739351531.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=3916, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@427dd721, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@5c56b05f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2304811737739351531.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@264454f8, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d3d666]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13d95e87]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d2fb1b0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c3925ec]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e22cbb3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65a7b330]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b3a8d5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e82b9e7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ffa9870]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ca31bc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542d4b14]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 06e73557-6935-4717-b051-c57e00914882 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c3914a5: startup date [Mon Nov 06 17:58:56 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.001 seconds (JVM running for 41.807)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@64c8c783, payload=[Ljava.lang.Class;@4a6c97bb}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@436eda8c, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@a2451c4}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@20971923, payload=[Ljava.lang.Class;@49725157}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@6dd22440, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@7720cc63}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c3914a5: startup date [Mon Nov 06 17:58:56 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Starting Application on LuoRong with PID 3916 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aea312c: startup date [Mon Nov 06 18:01:53 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54379762] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 888 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@24fd3383
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@503fc604{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c8de02
Adding type registration true_false -> org.hibernate.type.TrueFalseType@579105f2
Adding type registration yes_no -> org.hibernate.type.YesNoType@1c58da11
Adding type registration byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration character -> org.hibernate.type.CharacterType@50a17209
Adding type registration char -> org.hibernate.type.CharacterType@50a17209
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@50a17209
Adding type registration short -> org.hibernate.type.ShortType@8ca10df
Adding type registration short -> org.hibernate.type.ShortType@8ca10df
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8ca10df
Adding type registration integer -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration int -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration long -> org.hibernate.type.LongType@14f7e858
Adding type registration long -> org.hibernate.type.LongType@14f7e858
Adding type registration java.lang.Long -> org.hibernate.type.LongType@14f7e858
Adding type registration float -> org.hibernate.type.FloatType@79f1462f
Adding type registration float -> org.hibernate.type.FloatType@79f1462f
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@79f1462f
Adding type registration double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e9c6587
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e9c6587
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@123dfd84
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@123dfd84
Adding type registration string -> org.hibernate.type.StringType@73dd6de0
Adding type registration java.lang.String -> org.hibernate.type.StringType@73dd6de0
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3efa49d9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f1fb247
Adding type registration url -> org.hibernate.type.UrlType@226a0706
Adding type registration java.net.URL -> org.hibernate.type.UrlType@226a0706
Adding type registration date -> org.hibernate.type.DateType@13c2017
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13c2017
Adding type registration time -> org.hibernate.type.TimeType@4a8f4c36
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4a8f4c36
Adding type registration timestamp -> org.hibernate.type.TimestampType@a0c43db
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a0c43db
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a0c43db
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d8dddf
Adding type registration calendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@556f1838
Adding type registration locale -> org.hibernate.type.LocaleType@4bd65770
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4bd65770
Adding type registration currency -> org.hibernate.type.CurrencyType@1c8ba706
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c8ba706
Adding type registration timezone -> org.hibernate.type.TimeZoneType@115ad05e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@115ad05e
Adding type registration class -> org.hibernate.type.ClassType@397ffc0b
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@397ffc0b
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@430318dd
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@430318dd
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@23865888
Adding type registration binary -> org.hibernate.type.BinaryType@6e061503
Adding type registration byte[] -> org.hibernate.type.BinaryType@6e061503
Adding type registration [B -> org.hibernate.type.BinaryType@6e061503
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration row_version -> org.hibernate.type.RowVersionType@516471c
Adding type registration image -> org.hibernate.type.ImageType@1fd4b42
Adding type registration characters -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration char[] -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration [C -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration text -> org.hibernate.type.TextType@29e741b7
Adding type registration ntext -> org.hibernate.type.NTextType@71c07d64
Adding type registration blob -> org.hibernate.type.BlobType@62b962d5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62b962d5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37348572
Adding type registration clob -> org.hibernate.type.ClobType@70be7bc
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@70be7bc
Adding type registration nclob -> org.hibernate.type.NClobType@633e1c54
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@633e1c54
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d8f8dde
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5565c331
Adding type registration serializable -> org.hibernate.type.SerializableType@6d82a118
Adding type registration object -> org.hibernate.type.ObjectType@31c17015
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@31c17015
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@581daf25
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9261b13
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f756559
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@473b77b3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@72ea9cf6
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4b2dff3b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f8614aa
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@239c7a06
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7c1f6071
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2304811737739351531.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=3916, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@306c6c5b, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@503fc604{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2304811737739351531.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@777ec547, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d09940]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7df76bf3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e47a90]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b7943b1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a318a5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@572c7f70]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c572392]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33550c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@115c175a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ce2143e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9b7d82]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: bb7b11d7-477e-4fa4-9764-a82cbeed40e3 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.Errors)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aea312c: startup date [Mon Nov 06 18:01:53 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.933 seconds (JVM running for 218.821)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@542d58f6, payload=[Ljava.lang.Class;@72227c23}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@65b3ce90, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@a56b4ed}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@55a0067e, payload=[Ljava.lang.Class;@2e9c8514}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@1152bdf6, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@304cff0a}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Request method 'POST' not supported
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Request method 'POST' not supported
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aea312c: startup date [Mon Nov 06 18:01:53 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 3916 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44d53e13: startup date [Mon Nov 06 18:02:18 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54379762] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 709 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@599ad53f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@5f7f9ea9{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c01f5fb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c8de02
Adding type registration true_false -> org.hibernate.type.TrueFalseType@579105f2
Adding type registration yes_no -> org.hibernate.type.YesNoType@1c58da11
Adding type registration byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52b22d20
Adding type registration character -> org.hibernate.type.CharacterType@50a17209
Adding type registration char -> org.hibernate.type.CharacterType@50a17209
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@50a17209
Adding type registration short -> org.hibernate.type.ShortType@8ca10df
Adding type registration short -> org.hibernate.type.ShortType@8ca10df
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8ca10df
Adding type registration integer -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration int -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6eaa4f32
Adding type registration long -> org.hibernate.type.LongType@14f7e858
Adding type registration long -> org.hibernate.type.LongType@14f7e858
Adding type registration java.lang.Long -> org.hibernate.type.LongType@14f7e858
Adding type registration float -> org.hibernate.type.FloatType@79f1462f
Adding type registration float -> org.hibernate.type.FloatType@79f1462f
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@79f1462f
Adding type registration double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55c17d55
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e9c6587
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e9c6587
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@123dfd84
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@123dfd84
Adding type registration string -> org.hibernate.type.StringType@73dd6de0
Adding type registration java.lang.String -> org.hibernate.type.StringType@73dd6de0
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3efa49d9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f1fb247
Adding type registration url -> org.hibernate.type.UrlType@226a0706
Adding type registration java.net.URL -> org.hibernate.type.UrlType@226a0706
Adding type registration date -> org.hibernate.type.DateType@13c2017
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13c2017
Adding type registration time -> org.hibernate.type.TimeType@4a8f4c36
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4a8f4c36
Adding type registration timestamp -> org.hibernate.type.TimestampType@a0c43db
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a0c43db
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a0c43db
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d8dddf
Adding type registration calendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@32d7ee6b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@556f1838
Adding type registration locale -> org.hibernate.type.LocaleType@4bd65770
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4bd65770
Adding type registration currency -> org.hibernate.type.CurrencyType@1c8ba706
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c8ba706
Adding type registration timezone -> org.hibernate.type.TimeZoneType@115ad05e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@115ad05e
Adding type registration class -> org.hibernate.type.ClassType@397ffc0b
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@397ffc0b
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@430318dd
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@430318dd
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@23865888
Adding type registration binary -> org.hibernate.type.BinaryType@6e061503
Adding type registration byte[] -> org.hibernate.type.BinaryType@6e061503
Adding type registration [B -> org.hibernate.type.BinaryType@6e061503
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4500b599
Adding type registration row_version -> org.hibernate.type.RowVersionType@516471c
Adding type registration image -> org.hibernate.type.ImageType@1fd4b42
Adding type registration characters -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration char[] -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration [C -> org.hibernate.type.CharArrayType@3299eed1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1619b6e4
Adding type registration text -> org.hibernate.type.TextType@29e741b7
Adding type registration ntext -> org.hibernate.type.NTextType@71c07d64
Adding type registration blob -> org.hibernate.type.BlobType@62b962d5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62b962d5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37348572
Adding type registration clob -> org.hibernate.type.ClobType@70be7bc
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@70be7bc
Adding type registration nclob -> org.hibernate.type.NClobType@633e1c54
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@633e1c54
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d8f8dde
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5565c331
Adding type registration serializable -> org.hibernate.type.SerializableType@6d82a118
Adding type registration object -> org.hibernate.type.ObjectType@31c17015
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@31c17015
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@678f81da
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@311fd040
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a376497
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3df5042
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18c590b2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5797de3a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76250b83
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f011845
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7c1f6071
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2304811737739351531.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=3916, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e55715, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@5f7f9ea9{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2304811737739351531.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@278aa328, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5311a4a2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fe72ca4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f76a26f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@318ca136]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b6d7e26]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19897669]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e3da062]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56d87142]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60ef0320]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7233d10e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d94456d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: d0f7a40b-81c1-4165-ae4e-58bb67a180fd (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44d53e13: startup date [Mon Nov 06 18:02:18 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.653 seconds (JVM running for 243.52)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
Request method 'POST' not supported
------:跳转到login页面！
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Starting Application on LuoRong with PID 8512 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Mon Nov 06 18:06:03 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$639694ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2778 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3c95c83a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@4e855662{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@759381a0
Adding type registration boolean -> org.hibernate.type.BooleanType@759381a0
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@759381a0
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f861bab
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3e25cb6a
Adding type registration yes_no -> org.hibernate.type.YesNoType@41bde867
Adding type registration byte -> org.hibernate.type.ByteType@25ffc638
Adding type registration byte -> org.hibernate.type.ByteType@25ffc638
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25ffc638
Adding type registration character -> org.hibernate.type.CharacterType@70624924
Adding type registration char -> org.hibernate.type.CharacterType@70624924
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@70624924
Adding type registration short -> org.hibernate.type.ShortType@437e33f3
Adding type registration short -> org.hibernate.type.ShortType@437e33f3
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@437e33f3
Adding type registration integer -> org.hibernate.type.IntegerType@6de49e56
Adding type registration int -> org.hibernate.type.IntegerType@6de49e56
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6de49e56
Adding type registration long -> org.hibernate.type.LongType@2534ccdc
Adding type registration long -> org.hibernate.type.LongType@2534ccdc
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2534ccdc
Adding type registration float -> org.hibernate.type.FloatType@720f94ca
Adding type registration float -> org.hibernate.type.FloatType@720f94ca
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@720f94ca
Adding type registration double -> org.hibernate.type.DoubleType@1e9ce154
Adding type registration double -> org.hibernate.type.DoubleType@1e9ce154
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e9ce154
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@36a52648
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@36a52648
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b2f337a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b2f337a
Adding type registration string -> org.hibernate.type.StringType@340fedc5
Adding type registration java.lang.String -> org.hibernate.type.StringType@340fedc5
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@611a1d8c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3c2e2bc7
Adding type registration url -> org.hibernate.type.UrlType@3740583a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3740583a
Adding type registration date -> org.hibernate.type.DateType@225fa5af
Adding type registration java.sql.Date -> org.hibernate.type.DateType@225fa5af
Adding type registration time -> org.hibernate.type.TimeType@3d4e5656
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d4e5656
Adding type registration timestamp -> org.hibernate.type.TimestampType@4bbb33e7
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4bbb33e7
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4bbb33e7
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@345751c1
Adding type registration calendar -> org.hibernate.type.CalendarType@543b57bc
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@543b57bc
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@543b57bc
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24a5b758
Adding type registration locale -> org.hibernate.type.LocaleType@63068846
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@63068846
Adding type registration currency -> org.hibernate.type.CurrencyType@19d1777b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@19d1777b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a325bde
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a325bde
Adding type registration class -> org.hibernate.type.ClassType@12e56de3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12e56de3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49dec7b6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49dec7b6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@de91554
Adding type registration binary -> org.hibernate.type.BinaryType@50a6971e
Adding type registration byte[] -> org.hibernate.type.BinaryType@50a6971e
Adding type registration [B -> org.hibernate.type.BinaryType@50a6971e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e4e80e5
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e4e80e5
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e4e80e5
Adding type registration row_version -> org.hibernate.type.RowVersionType@3c49358f
Adding type registration image -> org.hibernate.type.ImageType@5dd25ed7
Adding type registration characters -> org.hibernate.type.CharArrayType@528ce1e4
Adding type registration char[] -> org.hibernate.type.CharArrayType@528ce1e4
Adding type registration [C -> org.hibernate.type.CharArrayType@528ce1e4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5dd57678
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5dd57678
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5dd57678
Adding type registration text -> org.hibernate.type.TextType@17fdb65a
Adding type registration ntext -> org.hibernate.type.NTextType@3f07aef8
Adding type registration blob -> org.hibernate.type.BlobType@260a895d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@260a895d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@677c3d6
Adding type registration clob -> org.hibernate.type.ClobType@3118ee7
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3118ee7
Adding type registration nclob -> org.hibernate.type.NClobType@6812496a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6812496a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b937008
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@134361e2
Adding type registration serializable -> org.hibernate.type.SerializableType@69cdf480
Adding type registration object -> org.hibernate.type.ObjectType@1e9c4b33
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e9c4b33
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19ca92b
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d25bff8
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@597ad390
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a7221d5
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e431441
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3ec9bc0e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31a00e14
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ac7ed7c
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@705723ed
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2392393759044582553.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=8512, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@57c632b0, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@4e855662{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2392393759044582553.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@339e7d95, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e8d25fc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73841095]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57a4c7bf]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1983bd0a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c5d7cf5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24bb4c4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@369e561a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eb89255]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2098a3b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2c9869]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f55dbf4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@234b047
Registering SessionFactory: 0247f8a3-7ac5-4735-98ce-18f51d2f71a9 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@37f205e5
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Mon Nov 06 18:06:03 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.003 seconds (JVM running for 8.624)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Starting Application on LuoRong with PID 7748 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b136a67: startup date [Mon Nov 06 18:11:10 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$691362b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3989 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7a0291b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6fdff5e3{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@24b3d267
Adding type registration boolean -> org.hibernate.type.BooleanType@24b3d267
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@24b3d267
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@66ef4656
Adding type registration true_false -> org.hibernate.type.TrueFalseType@61b99d19
Adding type registration yes_no -> org.hibernate.type.YesNoType@19a8267
Adding type registration byte -> org.hibernate.type.ByteType@b857188
Adding type registration byte -> org.hibernate.type.ByteType@b857188
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b857188
Adding type registration character -> org.hibernate.type.CharacterType@16b4357a
Adding type registration char -> org.hibernate.type.CharacterType@16b4357a
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16b4357a
Adding type registration short -> org.hibernate.type.ShortType@640a25c9
Adding type registration short -> org.hibernate.type.ShortType@640a25c9
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@640a25c9
Adding type registration integer -> org.hibernate.type.IntegerType@3f8bb65e
Adding type registration int -> org.hibernate.type.IntegerType@3f8bb65e
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f8bb65e
Adding type registration long -> org.hibernate.type.LongType@53ebbbbf
Adding type registration long -> org.hibernate.type.LongType@53ebbbbf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@53ebbbbf
Adding type registration float -> org.hibernate.type.FloatType@53c7b525
Adding type registration float -> org.hibernate.type.FloatType@53c7b525
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53c7b525
Adding type registration double -> org.hibernate.type.DoubleType@57583efe
Adding type registration double -> org.hibernate.type.DoubleType@57583efe
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57583efe
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a3ec5d5
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a3ec5d5
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f1891b0
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f1891b0
Adding type registration string -> org.hibernate.type.StringType@57c91c59
Adding type registration java.lang.String -> org.hibernate.type.StringType@57c91c59
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@236a8ed0
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@353826e1
Adding type registration url -> org.hibernate.type.UrlType@1bc5cc42
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1bc5cc42
Adding type registration date -> org.hibernate.type.DateType@57cdd5d3
Adding type registration java.sql.Date -> org.hibernate.type.DateType@57cdd5d3
Adding type registration time -> org.hibernate.type.TimeType@2e7bcb4a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e7bcb4a
Adding type registration timestamp -> org.hibernate.type.TimestampType@42534116
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@42534116
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@42534116
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47a82755
Adding type registration calendar -> org.hibernate.type.CalendarType@662c091a
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@662c091a
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@662c091a
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@664aaa03
Adding type registration locale -> org.hibernate.type.LocaleType@53bf4b8c
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53bf4b8c
Adding type registration currency -> org.hibernate.type.CurrencyType@3dfd7069
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3dfd7069
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d7a2112
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d7a2112
Adding type registration class -> org.hibernate.type.ClassType@44591a5e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44591a5e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1de2f841
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1de2f841
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3af89b0a
Adding type registration binary -> org.hibernate.type.BinaryType@64ca31f8
Adding type registration byte[] -> org.hibernate.type.BinaryType@64ca31f8
Adding type registration [B -> org.hibernate.type.BinaryType@64ca31f8
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c32e9fc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c32e9fc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c32e9fc
Adding type registration row_version -> org.hibernate.type.RowVersionType@700b8a47
Adding type registration image -> org.hibernate.type.ImageType@5fcda686
Adding type registration characters -> org.hibernate.type.CharArrayType@333c5695
Adding type registration char[] -> org.hibernate.type.CharArrayType@333c5695
Adding type registration [C -> org.hibernate.type.CharArrayType@333c5695
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e94da58
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e94da58
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e94da58
Adding type registration text -> org.hibernate.type.TextType@3df0cc2e
Adding type registration ntext -> org.hibernate.type.NTextType@792547d7
Adding type registration blob -> org.hibernate.type.BlobType@179146b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@179146b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@eae975f
Adding type registration clob -> org.hibernate.type.ClobType@40c6ca71
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@40c6ca71
Adding type registration nclob -> org.hibernate.type.NClobType@53e2e12a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@53e2e12a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@495b9d65
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@33b6c505
Adding type registration serializable -> org.hibernate.type.SerializableType@6c9757e9
Adding type registration object -> org.hibernate.type.ObjectType@3bfdce1d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3bfdce1d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@614ca7a
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f6c2dce
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2315cf56
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1330e537
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3357aa31
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d7be3c8
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1019e04e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@414b627
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@18e9f901
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.567697830125377485.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7748, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@448115d, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6fdff5e3{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_121\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.567697830125377485.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1d785221, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32062e2f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@778b6420]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cf8719a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43cd83fc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e532aa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce48493]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d5ef423]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f9ebecf]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28923670]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1637af17]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34dceaf5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@128a4555
Registering SessionFactory: 0087993a-186f-4ec3-bfd0-13176ec1e3c6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3e2092b7
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2b136a67: startup date [Mon Nov 06 18:11:10 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 11.383 seconds (JVM running for 12.629)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
------:跳转到login页面！
Starting Application on LuoRong with PID 7360 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@66311e3a: startup date [Mon Nov 06 18:12:53 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d9e3571] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2900 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7abd2b13
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@236d83e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1c8e4d02
Adding type registration boolean -> org.hibernate.type.BooleanType@1c8e4d02
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c8e4d02
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5addc5d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@56e067ad
Adding type registration yes_no -> org.hibernate.type.YesNoType@1096713f
Adding type registration byte -> org.hibernate.type.ByteType@1627f669
Adding type registration byte -> org.hibernate.type.ByteType@1627f669
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1627f669
Adding type registration character -> org.hibernate.type.CharacterType@67d5a995
Adding type registration char -> org.hibernate.type.CharacterType@67d5a995
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@67d5a995
Adding type registration short -> org.hibernate.type.ShortType@70fc4246
Adding type registration short -> org.hibernate.type.ShortType@70fc4246
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@70fc4246
Adding type registration integer -> org.hibernate.type.IntegerType@4815b596
Adding type registration int -> org.hibernate.type.IntegerType@4815b596
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4815b596
Adding type registration long -> org.hibernate.type.LongType@556ff240
Adding type registration long -> org.hibernate.type.LongType@556ff240
Adding type registration java.lang.Long -> org.hibernate.type.LongType@556ff240
Adding type registration float -> org.hibernate.type.FloatType@f153bba
Adding type registration float -> org.hibernate.type.FloatType@f153bba
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f153bba
Adding type registration double -> org.hibernate.type.DoubleType@79478d3e
Adding type registration double -> org.hibernate.type.DoubleType@79478d3e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@79478d3e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f84b04f
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f84b04f
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67dc8eec
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67dc8eec
Adding type registration string -> org.hibernate.type.StringType@23391191
Adding type registration java.lang.String -> org.hibernate.type.StringType@23391191
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4cd9fec1
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@536fedf1
Adding type registration url -> org.hibernate.type.UrlType@238b7a61
Adding type registration java.net.URL -> org.hibernate.type.UrlType@238b7a61
Adding type registration date -> org.hibernate.type.DateType@397bb079
Adding type registration java.sql.Date -> org.hibernate.type.DateType@397bb079
Adding type registration time -> org.hibernate.type.TimeType@e583bc7
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e583bc7
Adding type registration timestamp -> org.hibernate.type.TimestampType@63bb428
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@63bb428
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@63bb428
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6540221c
Adding type registration calendar -> org.hibernate.type.CalendarType@607c13d9
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@607c13d9
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@607c13d9
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d220832
Adding type registration locale -> org.hibernate.type.LocaleType@3685ef73
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3685ef73
Adding type registration currency -> org.hibernate.type.CurrencyType@7429af15
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7429af15
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f4e4c59
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f4e4c59
Adding type registration class -> org.hibernate.type.ClassType@53368713
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@53368713
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7459bff8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7459bff8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@73d5e4e
Adding type registration binary -> org.hibernate.type.BinaryType@74b71390
Adding type registration byte[] -> org.hibernate.type.BinaryType@74b71390
Adding type registration [B -> org.hibernate.type.BinaryType@74b71390
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4489e37a
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4489e37a
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4489e37a
Adding type registration row_version -> org.hibernate.type.RowVersionType@66dd0cf2
Adding type registration image -> org.hibernate.type.ImageType@13f147b1
Adding type registration characters -> org.hibernate.type.CharArrayType@6148607d
Adding type registration char[] -> org.hibernate.type.CharArrayType@6148607d
Adding type registration [C -> org.hibernate.type.CharArrayType@6148607d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1863f28f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1863f28f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1863f28f
Adding type registration text -> org.hibernate.type.TextType@7166b15b
Adding type registration ntext -> org.hibernate.type.NTextType@4cdf4aaf
Adding type registration blob -> org.hibernate.type.BlobType@2a8b152a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a8b152a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6475a389
Adding type registration clob -> org.hibernate.type.ClobType@6280206
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6280206
Adding type registration nclob -> org.hibernate.type.NClobType@9cc767
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@9cc767
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4457cacd
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@28e9fbc3
Adding type registration serializable -> org.hibernate.type.SerializableType@2fd1d88d
Adding type registration object -> org.hibernate.type.ObjectType@375b9317
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@375b9317
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6d1f5d2a
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b7b8b5
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55682ac2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e5c0971
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@293de59d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@12f4821f
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65e94b9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58170282
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@650186d6
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5718431521558344466.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7360, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@46c8410a, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@236d83e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5718431521558344466.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@16e309c7, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54620cc0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dac269b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@672aae70]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c02d71f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62521bd0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d4a640e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6422c300]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a72eaee]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a23378]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@556feb00]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60863481]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@45741fb3
Registering SessionFactory: fdc94255-dc82-47d0-8554-059246bf8b53 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@72d29a6
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@66311e3a: startup date [Mon Nov 06 18:12:53 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 7.887 seconds (JVM running for 8.451)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
Starting Application on LuoRong with PID 8612 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Mon Nov 06 18:20:19 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f9df078a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2819 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@42ef0f90
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@541b928{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77ee2b17
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d8b37f0
Adding type registration yes_no -> org.hibernate.type.YesNoType@6d41058d
Adding type registration byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration character -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration char -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration integer -> org.hibernate.type.IntegerType@3c263a66
Adding type registration int -> org.hibernate.type.IntegerType@3c263a66
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c263a66
Adding type registration long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration java.lang.Long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d88127a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d88127a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9714688
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9714688
Adding type registration string -> org.hibernate.type.StringType@2aed004d
Adding type registration java.lang.String -> org.hibernate.type.StringType@2aed004d
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14964d64
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2153453b
Adding type registration url -> org.hibernate.type.UrlType@4d20bbf5
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d20bbf5
Adding type registration date -> org.hibernate.type.DateType@711d55e7
Adding type registration java.sql.Date -> org.hibernate.type.DateType@711d55e7
Adding type registration time -> org.hibernate.type.TimeType@3db2af88
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3db2af88
Adding type registration timestamp -> org.hibernate.type.TimestampType@4af879b0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4af879b0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4af879b0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5c5620fc
Adding type registration calendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@579ce42e
Adding type registration locale -> org.hibernate.type.LocaleType@74868eba
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@74868eba
Adding type registration currency -> org.hibernate.type.CurrencyType@5a024e0f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5a024e0f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c1bb51d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c1bb51d
Adding type registration class -> org.hibernate.type.ClassType@61851965
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61851965
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@68eb20e8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@68eb20e8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@371ca649
Adding type registration binary -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration byte[] -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration [B -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration row_version -> org.hibernate.type.RowVersionType@1d81e30a
Adding type registration image -> org.hibernate.type.ImageType@53df9efa
Adding type registration characters -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration char[] -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration [C -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration text -> org.hibernate.type.TextType@58ba3efd
Adding type registration ntext -> org.hibernate.type.NTextType@3d38a5b5
Adding type registration blob -> org.hibernate.type.BlobType@39a0181
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39a0181
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29edc4b3
Adding type registration clob -> org.hibernate.type.ClobType@6fc7b172
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6fc7b172
Adding type registration nclob -> org.hibernate.type.NClobType@783d0162
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@783d0162
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23141bed
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24ba087a
Adding type registration serializable -> org.hibernate.type.SerializableType@16ccac5
Adding type registration object -> org.hibernate.type.ObjectType@594497ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@594497ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16ad366a
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba99a42
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@587b53a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@290828d9
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@56e955f4
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@71b5bee1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73511524
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b77a577
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@24ca8c3a
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7369333952940361610.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=8612, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@446adefe, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@541b928{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7369333952940361610.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@66cf842d, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1179740b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ac73ded]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@582feca1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@598e3479]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d58dd11]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452c7955]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73cf41]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@991f339]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db0033e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ac406ad]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dd3982d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42e9357a
Registering SessionFactory: 0014d7e4-c448-4f4f-adfd-43f7c0a9e44d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@25aeff35
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Mon Nov 06 18:20:19 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 7.977 seconds (JVM running for 8.55)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Mon Nov 06 18:20:19 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 8612 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5a807c4e: startup date [Mon Nov 06 18:27:16 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f9df078a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 989 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73cb7dcf
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2a2196da{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77ee2b17
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d8b37f0
Adding type registration yes_no -> org.hibernate.type.YesNoType@6d41058d
Adding type registration byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration character -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration char -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration integer -> org.hibernate.type.IntegerType@3c263a66
Adding type registration int -> org.hibernate.type.IntegerType@3c263a66
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c263a66
Adding type registration long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration java.lang.Long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d88127a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d88127a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9714688
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9714688
Adding type registration string -> org.hibernate.type.StringType@2aed004d
Adding type registration java.lang.String -> org.hibernate.type.StringType@2aed004d
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14964d64
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2153453b
Adding type registration url -> org.hibernate.type.UrlType@4d20bbf5
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d20bbf5
Adding type registration date -> org.hibernate.type.DateType@711d55e7
Adding type registration java.sql.Date -> org.hibernate.type.DateType@711d55e7
Adding type registration time -> org.hibernate.type.TimeType@3db2af88
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3db2af88
Adding type registration timestamp -> org.hibernate.type.TimestampType@4af879b0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4af879b0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4af879b0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5c5620fc
Adding type registration calendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@579ce42e
Adding type registration locale -> org.hibernate.type.LocaleType@74868eba
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@74868eba
Adding type registration currency -> org.hibernate.type.CurrencyType@5a024e0f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5a024e0f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c1bb51d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c1bb51d
Adding type registration class -> org.hibernate.type.ClassType@61851965
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61851965
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@68eb20e8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@68eb20e8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@371ca649
Adding type registration binary -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration byte[] -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration [B -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration row_version -> org.hibernate.type.RowVersionType@1d81e30a
Adding type registration image -> org.hibernate.type.ImageType@53df9efa
Adding type registration characters -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration char[] -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration [C -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration text -> org.hibernate.type.TextType@58ba3efd
Adding type registration ntext -> org.hibernate.type.NTextType@3d38a5b5
Adding type registration blob -> org.hibernate.type.BlobType@39a0181
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39a0181
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29edc4b3
Adding type registration clob -> org.hibernate.type.ClobType@6fc7b172
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6fc7b172
Adding type registration nclob -> org.hibernate.type.NClobType@783d0162
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@783d0162
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23141bed
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24ba087a
Adding type registration serializable -> org.hibernate.type.SerializableType@16ccac5
Adding type registration object -> org.hibernate.type.ObjectType@594497ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@594497ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6777bd13
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d0991c2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54819bee
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20252bee
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ae085dc
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4b569cc3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@135030ac
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1aa30373
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@24ca8c3a
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7369333952940361610.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=8612, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@654d8747, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2a2196da{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7369333952940361610.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@357614d7, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67df3ff7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cfc77ff]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d342af7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@327cbd41]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59818e9b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602ab0bb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33c81e30]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dff17a1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7764f6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e68a2c4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787769d2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: c8bbbc39-b330-4eec-a375-0d9f7a2c00ca (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public java.lang.String sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5a807c4e: startup date [Mon Nov 06 18:27:16 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.178 seconds (JVM running for 420.608)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 2 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5a807c4e: startup date [Mon Nov 06 18:27:16 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 8612 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@180a16e4: startup date [Mon Nov 06 18:30:14 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f9df078a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 727 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@d88c4c3
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@38eb0c3f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77ee2b17
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d8b37f0
Adding type registration yes_no -> org.hibernate.type.YesNoType@6d41058d
Adding type registration byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration character -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration char -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration integer -> org.hibernate.type.IntegerType@3c263a66
Adding type registration int -> org.hibernate.type.IntegerType@3c263a66
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c263a66
Adding type registration long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration java.lang.Long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d88127a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d88127a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9714688
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9714688
Adding type registration string -> org.hibernate.type.StringType@2aed004d
Adding type registration java.lang.String -> org.hibernate.type.StringType@2aed004d
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14964d64
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2153453b
Adding type registration url -> org.hibernate.type.UrlType@4d20bbf5
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d20bbf5
Adding type registration date -> org.hibernate.type.DateType@711d55e7
Adding type registration java.sql.Date -> org.hibernate.type.DateType@711d55e7
Adding type registration time -> org.hibernate.type.TimeType@3db2af88
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3db2af88
Adding type registration timestamp -> org.hibernate.type.TimestampType@4af879b0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4af879b0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4af879b0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5c5620fc
Adding type registration calendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@579ce42e
Adding type registration locale -> org.hibernate.type.LocaleType@74868eba
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@74868eba
Adding type registration currency -> org.hibernate.type.CurrencyType@5a024e0f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5a024e0f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c1bb51d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c1bb51d
Adding type registration class -> org.hibernate.type.ClassType@61851965
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61851965
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@68eb20e8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@68eb20e8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@371ca649
Adding type registration binary -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration byte[] -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration [B -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration row_version -> org.hibernate.type.RowVersionType@1d81e30a
Adding type registration image -> org.hibernate.type.ImageType@53df9efa
Adding type registration characters -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration char[] -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration [C -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration text -> org.hibernate.type.TextType@58ba3efd
Adding type registration ntext -> org.hibernate.type.NTextType@3d38a5b5
Adding type registration blob -> org.hibernate.type.BlobType@39a0181
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39a0181
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29edc4b3
Adding type registration clob -> org.hibernate.type.ClobType@6fc7b172
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6fc7b172
Adding type registration nclob -> org.hibernate.type.NClobType@783d0162
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@783d0162
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23141bed
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24ba087a
Adding type registration serializable -> org.hibernate.type.SerializableType@16ccac5
Adding type registration object -> org.hibernate.type.ObjectType@594497ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@594497ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3985b6c6
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2aa0ccc
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ef2a77f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1da89ceb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@90f2a1e
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b119b9f
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30b306dd
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@69a58be4
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@24ca8c3a
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7369333952940361610.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=8612, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@76ca070d, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@38eb0c3f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7369333952940361610.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@48196088, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6705585e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ab70b29]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac6e6d4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f8629e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a342bfe]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d22334c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dcc4a7c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c1c4ab]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fa80fe8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d238b9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aa2f338]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 9391022a-3ddf-4fe5-9d6e-a0db5f90707b (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@180a16e4: startup date [Mon Nov 06 18:30:14 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.663 seconds (JVM running for 598.67)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@180a16e4: startup date [Mon Nov 06 18:30:14 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 8612 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19587866: startup date [Mon Nov 06 18:30:22 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f9df078a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 614 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@369f1374
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@25b3c303{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d8ca1dd
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@77ee2b17
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d8b37f0
Adding type registration yes_no -> org.hibernate.type.YesNoType@6d41058d
Adding type registration byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c27e23e
Adding type registration character -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration char -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e857fbc
Adding type registration short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a0eafd4
Adding type registration integer -> org.hibernate.type.IntegerType@3c263a66
Adding type registration int -> org.hibernate.type.IntegerType@3c263a66
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c263a66
Adding type registration long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration java.lang.Long -> org.hibernate.type.LongType@48a1b4ea
Adding type registration float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d5f1f97
Adding type registration double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a4b67ac
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d88127a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d88127a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9714688
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9714688
Adding type registration string -> org.hibernate.type.StringType@2aed004d
Adding type registration java.lang.String -> org.hibernate.type.StringType@2aed004d
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14964d64
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2153453b
Adding type registration url -> org.hibernate.type.UrlType@4d20bbf5
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d20bbf5
Adding type registration date -> org.hibernate.type.DateType@711d55e7
Adding type registration java.sql.Date -> org.hibernate.type.DateType@711d55e7
Adding type registration time -> org.hibernate.type.TimeType@3db2af88
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3db2af88
Adding type registration timestamp -> org.hibernate.type.TimestampType@4af879b0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4af879b0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4af879b0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5c5620fc
Adding type registration calendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@225d60b4
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@579ce42e
Adding type registration locale -> org.hibernate.type.LocaleType@74868eba
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@74868eba
Adding type registration currency -> org.hibernate.type.CurrencyType@5a024e0f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5a024e0f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c1bb51d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c1bb51d
Adding type registration class -> org.hibernate.type.ClassType@61851965
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61851965
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@68eb20e8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@68eb20e8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@371ca649
Adding type registration binary -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration byte[] -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration [B -> org.hibernate.type.BinaryType@231aa2bb
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c34c874
Adding type registration row_version -> org.hibernate.type.RowVersionType@1d81e30a
Adding type registration image -> org.hibernate.type.ImageType@53df9efa
Adding type registration characters -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration char[] -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration [C -> org.hibernate.type.CharArrayType@3d9aa61
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@74b3177
Adding type registration text -> org.hibernate.type.TextType@58ba3efd
Adding type registration ntext -> org.hibernate.type.NTextType@3d38a5b5
Adding type registration blob -> org.hibernate.type.BlobType@39a0181
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39a0181
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29edc4b3
Adding type registration clob -> org.hibernate.type.ClobType@6fc7b172
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6fc7b172
Adding type registration nclob -> org.hibernate.type.NClobType@783d0162
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@783d0162
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23141bed
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24ba087a
Adding type registration serializable -> org.hibernate.type.SerializableType@16ccac5
Adding type registration object -> org.hibernate.type.ObjectType@594497ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@594497ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18413bac
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bb541f5
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@56de9190
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c1d915b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6d90492f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ccb0781
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e3b4599
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ebc8e4c
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@24ca8c3a
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7369333952940361610.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=8612, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4714f03a, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@25b3c303{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7369333952940361610.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5bd2e4e1, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@328e0726]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@358d93a4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3198e9f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ed45a9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a379d42]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e2f2e07]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2128202a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39631f13]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35956e39]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@707ea21b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8239b1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 7912e463-0234-4ecf-b924-2f3080438cbf (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19587866: startup date [Mon Nov 06 18:30:22 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.514 seconds (JVM running for 605.924)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 4 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Starting Application on LuoRong with PID 8824 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Mon Nov 06 18:34:22 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd0d974e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2986 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3c95c83a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2851cd31{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f861bab
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@595398d2
Adding type registration true_false -> org.hibernate.type.TrueFalseType@d031c3e
Adding type registration yes_no -> org.hibernate.type.YesNoType@773d3ddd
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration byte -> org.hibernate.type.ByteType@70624924
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@70624924
Adding type registration character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration char -> org.hibernate.type.CharacterType@541cab4b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@541cab4b
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration short -> org.hibernate.type.ShortType@6de49e56
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6de49e56
Adding type registration integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration int -> org.hibernate.type.IntegerType@534bdad7
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@534bdad7
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration long -> org.hibernate.type.LongType@19fa41a3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@19fa41a3
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration float -> org.hibernate.type.FloatType@6477bea0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6477bea0
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7bf07155
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b2f337a
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@340fedc5
Adding type registration string -> org.hibernate.type.StringType@611a1d8c
Adding type registration java.lang.String -> org.hibernate.type.StringType@611a1d8c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c2e2bc7
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3740583a
Adding type registration url -> org.hibernate.type.UrlType@7a832d56
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a832d56
Adding type registration date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration java.sql.Date -> org.hibernate.type.DateType@53c2b8fa
Adding type registration time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b73cf88
Adding type registration timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4480d94d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4480d94d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543b57bc
Adding type registration calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21a38ccb
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63068846
Adding type registration locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19d1777b
Adding type registration currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a325bde
Adding type registration timezone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12e56de3
Adding type registration class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5e4d3d
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4773af44
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50a6971e
Adding type registration binary -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration byte[] -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration [B -> org.hibernate.type.BinaryType@3e4e80e5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c49358f
Adding type registration row_version -> org.hibernate.type.RowVersionType@5dd25ed7
Adding type registration image -> org.hibernate.type.ImageType@528ce1e4
Adding type registration characters -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration char[] -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration [C -> org.hibernate.type.CharArrayType@5dd57678
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17fdb65a
Adding type registration text -> org.hibernate.type.TextType@3f07aef8
Adding type registration ntext -> org.hibernate.type.NTextType@796df3a0
Adding type registration blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@186cea1b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11cad083
Adding type registration clob -> org.hibernate.type.ClobType@10114231
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10114231
Adding type registration nclob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3f7384b0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73b8a1ba
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69cdf480
Adding type registration serializable -> org.hibernate.type.SerializableType@5efb300a
Adding type registration object -> org.hibernate.type.ObjectType@597ad390
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@597ad390
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ec9bc0e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31a00e14
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2ac7ed7c
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c500579
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f0afb31
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e6b906a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b5232d6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@57759508
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@20ec7621
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3327851282705084185.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=8824, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@65b033f, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2851cd31{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3327851282705084185.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6a64ea9c, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33157e60]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d35ddd3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62432e7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11032a1b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@110af924]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46632a6b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@440c9087]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1143c3b5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7de031]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae9ff1e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bfe14f7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@afcee3
Registering SessionFactory: 8e98368a-e24f-4479-a8fd-6c1799dd85c6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1b4daf93
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Mon Nov 06 18:34:22 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.316 seconds (JVM running for 8.891)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Starting Application on LuoRong with PID 10328 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 22:27:14 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dbbd6d6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 5126 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@520028c2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1bc5b6bc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c4d944b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2f096e07
Adding type registration yes_no -> org.hibernate.type.YesNoType@28c333d0
Adding type registration byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration character -> org.hibernate.type.CharacterType@16e089ba
Adding type registration char -> org.hibernate.type.CharacterType@16e089ba
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16e089ba
Adding type registration short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration integer -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration int -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration long -> org.hibernate.type.LongType@4b4021
Adding type registration long -> org.hibernate.type.LongType@4b4021
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b4021
Adding type registration float -> org.hibernate.type.FloatType@543d28ea
Adding type registration float -> org.hibernate.type.FloatType@543d28ea
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@543d28ea
Adding type registration double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@305c840b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@305c840b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4110c873
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4110c873
Adding type registration string -> org.hibernate.type.StringType@34c5688f
Adding type registration java.lang.String -> org.hibernate.type.StringType@34c5688f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1786bd04
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ef0f716
Adding type registration url -> org.hibernate.type.UrlType@29070279
Adding type registration java.net.URL -> org.hibernate.type.UrlType@29070279
Adding type registration date -> org.hibernate.type.DateType@4e58f050
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e58f050
Adding type registration time -> org.hibernate.type.TimeType@7e681f29
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e681f29
Adding type registration timestamp -> org.hibernate.type.TimestampType@247d40d5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@247d40d5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@247d40d5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f522696
Adding type registration calendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63c24a59
Adding type registration locale -> org.hibernate.type.LocaleType@32e78626
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@32e78626
Adding type registration currency -> org.hibernate.type.CurrencyType@4863ec01
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4863ec01
Adding type registration timezone -> org.hibernate.type.TimeZoneType@76571904
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76571904
Adding type registration class -> org.hibernate.type.ClassType@432f9b95
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@432f9b95
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@440e7fc8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@440e7fc8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bb18d76
Adding type registration binary -> org.hibernate.type.BinaryType@64fe0671
Adding type registration byte[] -> org.hibernate.type.BinaryType@64fe0671
Adding type registration [B -> org.hibernate.type.BinaryType@64fe0671
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration row_version -> org.hibernate.type.RowVersionType@61d93422
Adding type registration image -> org.hibernate.type.ImageType@7f33f57b
Adding type registration characters -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration char[] -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration [C -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration text -> org.hibernate.type.TextType@22150c3e
Adding type registration ntext -> org.hibernate.type.NTextType@cde6440
Adding type registration blob -> org.hibernate.type.BlobType@147f318
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@147f318
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c5953ff
Adding type registration clob -> org.hibernate.type.ClobType@17937427
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@17937427
Adding type registration nclob -> org.hibernate.type.NClobType@767171bf
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@767171bf
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@721ae0f3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@550d6253
Adding type registration serializable -> org.hibernate.type.SerializableType@4e65e944
Adding type registration object -> org.hibernate.type.ObjectType@62aac18b
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62aac18b
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ef54085
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a677849
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e0a8be7
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34a43b84
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20c1b4fd
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1155259c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7beac1e2
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6e07bd00
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@109e54a6
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2200185838187327485.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=10328, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5eb5d0, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1bc5b6bc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2200185838187327485.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@26faffce, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25d43d82]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5776aca4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290db4ae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6384608a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73c66887]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d215b7a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3e7d9c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f63e4c7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291b443e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@556d31a8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@467d75e9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5f5eb48e
Registering SessionFactory: bdf832fe-46cb-429a-9663-a6dc6c11b752 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@22552422
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 22:27:14 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 14.645 seconds (JVM running for 15.322)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@3e6301a7, payload=[Ljava.lang.Class;@2a6d786d}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@569a7649, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@13005d8d}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@710aa844, payload=[Ljava.lang.Class;@60f76fdd}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@15896820, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@5c62503e}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
No mapping found for HTTP request with URI [/css/bootstrap.min.css] in DispatcherServlet with name 'dispatcherServlet'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Mon Nov 06 22:27:14 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 10328 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d9dae5a: startup date [Mon Nov 06 22:42:28 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dbbd6d6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1198 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6acc7dd5
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@235326ee{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c4d944b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2f096e07
Adding type registration yes_no -> org.hibernate.type.YesNoType@28c333d0
Adding type registration byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration character -> org.hibernate.type.CharacterType@16e089ba
Adding type registration char -> org.hibernate.type.CharacterType@16e089ba
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16e089ba
Adding type registration short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration integer -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration int -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration long -> org.hibernate.type.LongType@4b4021
Adding type registration long -> org.hibernate.type.LongType@4b4021
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b4021
Adding type registration float -> org.hibernate.type.FloatType@543d28ea
Adding type registration float -> org.hibernate.type.FloatType@543d28ea
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@543d28ea
Adding type registration double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@305c840b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@305c840b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4110c873
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4110c873
Adding type registration string -> org.hibernate.type.StringType@34c5688f
Adding type registration java.lang.String -> org.hibernate.type.StringType@34c5688f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1786bd04
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ef0f716
Adding type registration url -> org.hibernate.type.UrlType@29070279
Adding type registration java.net.URL -> org.hibernate.type.UrlType@29070279
Adding type registration date -> org.hibernate.type.DateType@4e58f050
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e58f050
Adding type registration time -> org.hibernate.type.TimeType@7e681f29
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e681f29
Adding type registration timestamp -> org.hibernate.type.TimestampType@247d40d5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@247d40d5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@247d40d5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f522696
Adding type registration calendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63c24a59
Adding type registration locale -> org.hibernate.type.LocaleType@32e78626
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@32e78626
Adding type registration currency -> org.hibernate.type.CurrencyType@4863ec01
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4863ec01
Adding type registration timezone -> org.hibernate.type.TimeZoneType@76571904
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76571904
Adding type registration class -> org.hibernate.type.ClassType@432f9b95
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@432f9b95
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@440e7fc8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@440e7fc8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bb18d76
Adding type registration binary -> org.hibernate.type.BinaryType@64fe0671
Adding type registration byte[] -> org.hibernate.type.BinaryType@64fe0671
Adding type registration [B -> org.hibernate.type.BinaryType@64fe0671
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration row_version -> org.hibernate.type.RowVersionType@61d93422
Adding type registration image -> org.hibernate.type.ImageType@7f33f57b
Adding type registration characters -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration char[] -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration [C -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration text -> org.hibernate.type.TextType@22150c3e
Adding type registration ntext -> org.hibernate.type.NTextType@cde6440
Adding type registration blob -> org.hibernate.type.BlobType@147f318
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@147f318
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c5953ff
Adding type registration clob -> org.hibernate.type.ClobType@17937427
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@17937427
Adding type registration nclob -> org.hibernate.type.NClobType@767171bf
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@767171bf
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@721ae0f3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@550d6253
Adding type registration serializable -> org.hibernate.type.SerializableType@4e65e944
Adding type registration object -> org.hibernate.type.ObjectType@62aac18b
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62aac18b
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@56575458
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@120b301f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4cc83acf
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1827ccec
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@743eae24
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3ffef374
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@326db806
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@140b520b
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@109e54a6
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2200185838187327485.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=10328, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@d758e59, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@235326ee{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2200185838187327485.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@240fbbfa, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@610693ac]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@174a48c5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4de3c413]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ba285cc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d902419]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@530c1165]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43f1267]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70dd42f7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e30a660]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58231ce7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@208b4292]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 47568169-7b61-48e1-9f49-944eb94de70e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d9dae5a: startup date [Mon Nov 06 22:42:28 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.845 seconds (JVM running for 918.016)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d9dae5a: startup date [Mon Nov 06 22:42:28 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 10328 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@424434fa: startup date [Mon Nov 06 22:42:39 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dbbd6d6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 944 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@52fc47f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@458f6a65{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c4d944b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2f096e07
Adding type registration yes_no -> org.hibernate.type.YesNoType@28c333d0
Adding type registration byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration character -> org.hibernate.type.CharacterType@16e089ba
Adding type registration char -> org.hibernate.type.CharacterType@16e089ba
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16e089ba
Adding type registration short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration integer -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration int -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration long -> org.hibernate.type.LongType@4b4021
Adding type registration long -> org.hibernate.type.LongType@4b4021
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b4021
Adding type registration float -> org.hibernate.type.FloatType@543d28ea
Adding type registration float -> org.hibernate.type.FloatType@543d28ea
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@543d28ea
Adding type registration double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@305c840b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@305c840b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4110c873
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4110c873
Adding type registration string -> org.hibernate.type.StringType@34c5688f
Adding type registration java.lang.String -> org.hibernate.type.StringType@34c5688f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1786bd04
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ef0f716
Adding type registration url -> org.hibernate.type.UrlType@29070279
Adding type registration java.net.URL -> org.hibernate.type.UrlType@29070279
Adding type registration date -> org.hibernate.type.DateType@4e58f050
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e58f050
Adding type registration time -> org.hibernate.type.TimeType@7e681f29
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e681f29
Adding type registration timestamp -> org.hibernate.type.TimestampType@247d40d5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@247d40d5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@247d40d5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f522696
Adding type registration calendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63c24a59
Adding type registration locale -> org.hibernate.type.LocaleType@32e78626
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@32e78626
Adding type registration currency -> org.hibernate.type.CurrencyType@4863ec01
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4863ec01
Adding type registration timezone -> org.hibernate.type.TimeZoneType@76571904
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76571904
Adding type registration class -> org.hibernate.type.ClassType@432f9b95
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@432f9b95
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@440e7fc8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@440e7fc8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bb18d76
Adding type registration binary -> org.hibernate.type.BinaryType@64fe0671
Adding type registration byte[] -> org.hibernate.type.BinaryType@64fe0671
Adding type registration [B -> org.hibernate.type.BinaryType@64fe0671
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration row_version -> org.hibernate.type.RowVersionType@61d93422
Adding type registration image -> org.hibernate.type.ImageType@7f33f57b
Adding type registration characters -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration char[] -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration [C -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration text -> org.hibernate.type.TextType@22150c3e
Adding type registration ntext -> org.hibernate.type.NTextType@cde6440
Adding type registration blob -> org.hibernate.type.BlobType@147f318
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@147f318
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c5953ff
Adding type registration clob -> org.hibernate.type.ClobType@17937427
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@17937427
Adding type registration nclob -> org.hibernate.type.NClobType@767171bf
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@767171bf
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@721ae0f3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@550d6253
Adding type registration serializable -> org.hibernate.type.SerializableType@4e65e944
Adding type registration object -> org.hibernate.type.ObjectType@62aac18b
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62aac18b
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@191bbe3a
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51cfc79f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4978ee36
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2774bc37
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63da3c8d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c86fc56
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4201b2ae
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40162bdd
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@109e54a6
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2200185838187327485.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=10328, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@29a98512, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@458f6a65{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2200185838187327485.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2dce8b66, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26081cbe]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12c32bf3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a35e2c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@140b2920]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a208d0e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1860d4e0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2343b2f5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1577f40d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea83870]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b5e6a7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f03fdc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: f6d797de-e296-4e4f-bea3-271d5800de8b (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test()
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@424434fa: startup date [Mon Nov 06 22:42:39 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.067 seconds (JVM running for 928.933)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
No mapping found for HTTP request with URI [/favicon.ico] in DispatcherServlet with name 'dispatcherServlet'
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@424434fa: startup date [Mon Nov 06 22:42:39 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 10328 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50658251: startup date [Mon Nov 06 22:59:39 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dbbd6d6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 910 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@142cd058
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1994d0bc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c87ebb7
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c4d944b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2f096e07
Adding type registration yes_no -> org.hibernate.type.YesNoType@28c333d0
Adding type registration byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1737f7d5
Adding type registration character -> org.hibernate.type.CharacterType@16e089ba
Adding type registration char -> org.hibernate.type.CharacterType@16e089ba
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16e089ba
Adding type registration short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4bf619dd
Adding type registration integer -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration int -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2c0ff3d
Adding type registration long -> org.hibernate.type.LongType@4b4021
Adding type registration long -> org.hibernate.type.LongType@4b4021
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b4021
Adding type registration float -> org.hibernate.type.FloatType@543d28ea
Adding type registration float -> org.hibernate.type.FloatType@543d28ea
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@543d28ea
Adding type registration double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@356d3ba1
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@305c840b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@305c840b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4110c873
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4110c873
Adding type registration string -> org.hibernate.type.StringType@34c5688f
Adding type registration java.lang.String -> org.hibernate.type.StringType@34c5688f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1786bd04
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ef0f716
Adding type registration url -> org.hibernate.type.UrlType@29070279
Adding type registration java.net.URL -> org.hibernate.type.UrlType@29070279
Adding type registration date -> org.hibernate.type.DateType@4e58f050
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e58f050
Adding type registration time -> org.hibernate.type.TimeType@7e681f29
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e681f29
Adding type registration timestamp -> org.hibernate.type.TimestampType@247d40d5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@247d40d5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@247d40d5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f522696
Adding type registration calendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@302d3575
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63c24a59
Adding type registration locale -> org.hibernate.type.LocaleType@32e78626
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@32e78626
Adding type registration currency -> org.hibernate.type.CurrencyType@4863ec01
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4863ec01
Adding type registration timezone -> org.hibernate.type.TimeZoneType@76571904
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76571904
Adding type registration class -> org.hibernate.type.ClassType@432f9b95
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@432f9b95
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@440e7fc8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@440e7fc8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bb18d76
Adding type registration binary -> org.hibernate.type.BinaryType@64fe0671
Adding type registration byte[] -> org.hibernate.type.BinaryType@64fe0671
Adding type registration [B -> org.hibernate.type.BinaryType@64fe0671
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@35058764
Adding type registration row_version -> org.hibernate.type.RowVersionType@61d93422
Adding type registration image -> org.hibernate.type.ImageType@7f33f57b
Adding type registration characters -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration char[] -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration [C -> org.hibernate.type.CharArrayType@2e9c60a2
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5cb6192b
Adding type registration text -> org.hibernate.type.TextType@22150c3e
Adding type registration ntext -> org.hibernate.type.NTextType@cde6440
Adding type registration blob -> org.hibernate.type.BlobType@147f318
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@147f318
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c5953ff
Adding type registration clob -> org.hibernate.type.ClobType@17937427
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@17937427
Adding type registration nclob -> org.hibernate.type.NClobType@767171bf
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@767171bf
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@721ae0f3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@550d6253
Adding type registration serializable -> org.hibernate.type.SerializableType@4e65e944
Adding type registration object -> org.hibernate.type.ObjectType@62aac18b
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62aac18b
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2612fa8
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e65f3f3
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@faecd44
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@88ad3fc
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31da12a
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@422620d1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3b9b013c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65d02080
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@109e54a6
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2200185838187327485.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=10328, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@10dcefce, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1994d0bc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2200185838187327485.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5d33827c, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1750dd60]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c01b1a6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1303faf9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a65da33]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83ae8ad]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ec1293]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3acda40a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59588847]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13cc6df]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f53ec3e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5877206a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 1929789a-ada4-4f58-9b12-530221f4afcf (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test()
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.Errors)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50658251: startup date [Mon Nov 06 22:59:39 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.006 seconds (JVM running for 1948.465)
Starting Application on LuoRong with PID 10752 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Mon Nov 06 23:05:35 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d22d4691] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4723 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1b62dc8b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7a5712df{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@71ab91b8
Adding type registration boolean -> org.hibernate.type.BooleanType@71ab91b8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71ab91b8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ba28779
Adding type registration true_false -> org.hibernate.type.TrueFalseType@484d54fe
Adding type registration yes_no -> org.hibernate.type.YesNoType@7800deb1
Adding type registration byte -> org.hibernate.type.ByteType@75a3a46a
Adding type registration byte -> org.hibernate.type.ByteType@75a3a46a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75a3a46a
Adding type registration character -> org.hibernate.type.CharacterType@509a8912
Adding type registration char -> org.hibernate.type.CharacterType@509a8912
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@509a8912
Adding type registration short -> org.hibernate.type.ShortType@10e469
Adding type registration short -> org.hibernate.type.ShortType@10e469
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10e469
Adding type registration integer -> org.hibernate.type.IntegerType@7156dd61
Adding type registration int -> org.hibernate.type.IntegerType@7156dd61
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7156dd61
Adding type registration long -> org.hibernate.type.LongType@67266c47
Adding type registration long -> org.hibernate.type.LongType@67266c47
Adding type registration java.lang.Long -> org.hibernate.type.LongType@67266c47
Adding type registration float -> org.hibernate.type.FloatType@3697e8e0
Adding type registration float -> org.hibernate.type.FloatType@3697e8e0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3697e8e0
Adding type registration double -> org.hibernate.type.DoubleType@24cfc68d
Adding type registration double -> org.hibernate.type.DoubleType@24cfc68d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@24cfc68d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3683d396
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3683d396
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38b9221c
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38b9221c
Adding type registration string -> org.hibernate.type.StringType@64b2783e
Adding type registration java.lang.String -> org.hibernate.type.StringType@64b2783e
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29796a31
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48c9e9a8
Adding type registration url -> org.hibernate.type.UrlType@2d111b94
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2d111b94
Adding type registration date -> org.hibernate.type.DateType@4e14964a
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e14964a
Adding type registration time -> org.hibernate.type.TimeType@4523ff1f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4523ff1f
Adding type registration timestamp -> org.hibernate.type.TimestampType@57c5a5f5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57c5a5f5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57c5a5f5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2605329f
Adding type registration calendar -> org.hibernate.type.CalendarType@52e6b918
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52e6b918
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52e6b918
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ef24df2
Adding type registration locale -> org.hibernate.type.LocaleType@3ff3590a
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3ff3590a
Adding type registration currency -> org.hibernate.type.CurrencyType@500c02e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@500c02e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@382d746b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@382d746b
Adding type registration class -> org.hibernate.type.ClassType@49fc8b28
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49fc8b28
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@517a0dd5
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@517a0dd5
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6705ca8d
Adding type registration binary -> org.hibernate.type.BinaryType@291ce63a
Adding type registration byte[] -> org.hibernate.type.BinaryType@291ce63a
Adding type registration [B -> org.hibernate.type.BinaryType@291ce63a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e411250
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e411250
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e411250
Adding type registration row_version -> org.hibernate.type.RowVersionType@242b5a24
Adding type registration image -> org.hibernate.type.ImageType@762c242d
Adding type registration characters -> org.hibernate.type.CharArrayType@2ab84468
Adding type registration char[] -> org.hibernate.type.CharArrayType@2ab84468
Adding type registration [C -> org.hibernate.type.CharArrayType@2ab84468
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@756fdd3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@756fdd3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@756fdd3b
Adding type registration text -> org.hibernate.type.TextType@5dd58d6e
Adding type registration ntext -> org.hibernate.type.NTextType@495eac5b
Adding type registration blob -> org.hibernate.type.BlobType@613d1106
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@613d1106
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f8e9bc0
Adding type registration clob -> org.hibernate.type.ClobType@3dc5bfa
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3dc5bfa
Adding type registration nclob -> org.hibernate.type.NClobType@4999c9e9
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4999c9e9
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cde0121
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59d12143
Adding type registration serializable -> org.hibernate.type.SerializableType@3de3667c
Adding type registration object -> org.hibernate.type.ObjectType@5f49c450
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f49c450
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26f3f34f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3789c885
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73c163e8
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69178de2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@50476204
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29734569
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5155ad8c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4f842d9
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@452103c5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5308613787151402588.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=10752, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@38cce4e8, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@7a5712df{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5308613787151402588.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4a01c7f1, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56dff563]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c9a5a3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65d5a989]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cafb73b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58547fc1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d61f2d4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea04d04]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@447b0343]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@318706ef]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e370ac4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@778c366f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70a5bc23
Registering SessionFactory: 0e852203-3b0b-4876-bd62-b884d7ff7fdd (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3cffc732
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test()
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Mon Nov 06 23:05:35 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 17.517 seconds (JVM running for 18.272)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Mon Nov 06 23:05:35 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 10752 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@524f42a7: startup date [Mon Nov 06 23:09:32 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d22d4691] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 853 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73a910b8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@765d8d9e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@71ab91b8
Adding type registration boolean -> org.hibernate.type.BooleanType@71ab91b8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71ab91b8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ba28779
Adding type registration true_false -> org.hibernate.type.TrueFalseType@484d54fe
Adding type registration yes_no -> org.hibernate.type.YesNoType@7800deb1
Adding type registration byte -> org.hibernate.type.ByteType@75a3a46a
Adding type registration byte -> org.hibernate.type.ByteType@75a3a46a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75a3a46a
Adding type registration character -> org.hibernate.type.CharacterType@509a8912
Adding type registration char -> org.hibernate.type.CharacterType@509a8912
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@509a8912
Adding type registration short -> org.hibernate.type.ShortType@10e469
Adding type registration short -> org.hibernate.type.ShortType@10e469
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10e469
Adding type registration integer -> org.hibernate.type.IntegerType@7156dd61
Adding type registration int -> org.hibernate.type.IntegerType@7156dd61
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7156dd61
Adding type registration long -> org.hibernate.type.LongType@67266c47
Adding type registration long -> org.hibernate.type.LongType@67266c47
Adding type registration java.lang.Long -> org.hibernate.type.LongType@67266c47
Adding type registration float -> org.hibernate.type.FloatType@3697e8e0
Adding type registration float -> org.hibernate.type.FloatType@3697e8e0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3697e8e0
Adding type registration double -> org.hibernate.type.DoubleType@24cfc68d
Adding type registration double -> org.hibernate.type.DoubleType@24cfc68d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@24cfc68d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3683d396
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3683d396
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38b9221c
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38b9221c
Adding type registration string -> org.hibernate.type.StringType@64b2783e
Adding type registration java.lang.String -> org.hibernate.type.StringType@64b2783e
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29796a31
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48c9e9a8
Adding type registration url -> org.hibernate.type.UrlType@2d111b94
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2d111b94
Adding type registration date -> org.hibernate.type.DateType@4e14964a
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e14964a
Adding type registration time -> org.hibernate.type.TimeType@4523ff1f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4523ff1f
Adding type registration timestamp -> org.hibernate.type.TimestampType@57c5a5f5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57c5a5f5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57c5a5f5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2605329f
Adding type registration calendar -> org.hibernate.type.CalendarType@52e6b918
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52e6b918
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52e6b918
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ef24df2
Adding type registration locale -> org.hibernate.type.LocaleType@3ff3590a
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3ff3590a
Adding type registration currency -> org.hibernate.type.CurrencyType@500c02e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@500c02e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@382d746b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@382d746b
Adding type registration class -> org.hibernate.type.ClassType@49fc8b28
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49fc8b28
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@517a0dd5
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@517a0dd5
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6705ca8d
Adding type registration binary -> org.hibernate.type.BinaryType@291ce63a
Adding type registration byte[] -> org.hibernate.type.BinaryType@291ce63a
Adding type registration [B -> org.hibernate.type.BinaryType@291ce63a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e411250
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e411250
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e411250
Adding type registration row_version -> org.hibernate.type.RowVersionType@242b5a24
Adding type registration image -> org.hibernate.type.ImageType@762c242d
Adding type registration characters -> org.hibernate.type.CharArrayType@2ab84468
Adding type registration char[] -> org.hibernate.type.CharArrayType@2ab84468
Adding type registration [C -> org.hibernate.type.CharArrayType@2ab84468
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@756fdd3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@756fdd3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@756fdd3b
Adding type registration text -> org.hibernate.type.TextType@5dd58d6e
Adding type registration ntext -> org.hibernate.type.NTextType@495eac5b
Adding type registration blob -> org.hibernate.type.BlobType@613d1106
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@613d1106
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f8e9bc0
Adding type registration clob -> org.hibernate.type.ClobType@3dc5bfa
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3dc5bfa
Adding type registration nclob -> org.hibernate.type.NClobType@4999c9e9
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4999c9e9
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cde0121
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59d12143
Adding type registration serializable -> org.hibernate.type.SerializableType@3de3667c
Adding type registration object -> org.hibernate.type.ObjectType@5f49c450
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f49c450
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c7adee8
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1dca82e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@32e1db2f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6fea7c9b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55dd6210
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31243d5d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d20b0f5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@31120b6e
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@452103c5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5308613787151402588.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=10752, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1db86900, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@765d8d9e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5308613787151402588.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2106096f, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4028952]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af99396]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17e71e59]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fe5a1cb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d625a71]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c11d46]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@581cc22b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42dd7bfa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee5f69d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3706b50f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159a5290]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: de9d117c-0f59-4b80-99ba-5bd89f0c8058 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test()
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@524f42a7: startup date [Mon Nov 06 23:09:32 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.079 seconds (JVM running for 240.828)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 4 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@524f42a7: startup date [Mon Nov 06 23:09:32 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 10752 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7d189dca: startup date [Mon Nov 06 23:19:07 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d22d4691] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 785 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3ce1d2f2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1f0928d2{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@71ab91b8
Adding type registration boolean -> org.hibernate.type.BooleanType@71ab91b8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71ab91b8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ba28779
Adding type registration true_false -> org.hibernate.type.TrueFalseType@484d54fe
Adding type registration yes_no -> org.hibernate.type.YesNoType@7800deb1
Adding type registration byte -> org.hibernate.type.ByteType@75a3a46a
Adding type registration byte -> org.hibernate.type.ByteType@75a3a46a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75a3a46a
Adding type registration character -> org.hibernate.type.CharacterType@509a8912
Adding type registration char -> org.hibernate.type.CharacterType@509a8912
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@509a8912
Adding type registration short -> org.hibernate.type.ShortType@10e469
Adding type registration short -> org.hibernate.type.ShortType@10e469
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10e469
Adding type registration integer -> org.hibernate.type.IntegerType@7156dd61
Adding type registration int -> org.hibernate.type.IntegerType@7156dd61
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7156dd61
Adding type registration long -> org.hibernate.type.LongType@67266c47
Adding type registration long -> org.hibernate.type.LongType@67266c47
Adding type registration java.lang.Long -> org.hibernate.type.LongType@67266c47
Adding type registration float -> org.hibernate.type.FloatType@3697e8e0
Adding type registration float -> org.hibernate.type.FloatType@3697e8e0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3697e8e0
Adding type registration double -> org.hibernate.type.DoubleType@24cfc68d
Adding type registration double -> org.hibernate.type.DoubleType@24cfc68d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@24cfc68d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3683d396
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3683d396
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38b9221c
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38b9221c
Adding type registration string -> org.hibernate.type.StringType@64b2783e
Adding type registration java.lang.String -> org.hibernate.type.StringType@64b2783e
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29796a31
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48c9e9a8
Adding type registration url -> org.hibernate.type.UrlType@2d111b94
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2d111b94
Adding type registration date -> org.hibernate.type.DateType@4e14964a
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e14964a
Adding type registration time -> org.hibernate.type.TimeType@4523ff1f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4523ff1f
Adding type registration timestamp -> org.hibernate.type.TimestampType@57c5a5f5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57c5a5f5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57c5a5f5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2605329f
Adding type registration calendar -> org.hibernate.type.CalendarType@52e6b918
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52e6b918
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52e6b918
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ef24df2
Adding type registration locale -> org.hibernate.type.LocaleType@3ff3590a
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3ff3590a
Adding type registration currency -> org.hibernate.type.CurrencyType@500c02e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@500c02e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@382d746b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@382d746b
Adding type registration class -> org.hibernate.type.ClassType@49fc8b28
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49fc8b28
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@517a0dd5
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@517a0dd5
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6705ca8d
Adding type registration binary -> org.hibernate.type.BinaryType@291ce63a
Adding type registration byte[] -> org.hibernate.type.BinaryType@291ce63a
Adding type registration [B -> org.hibernate.type.BinaryType@291ce63a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e411250
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e411250
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e411250
Adding type registration row_version -> org.hibernate.type.RowVersionType@242b5a24
Adding type registration image -> org.hibernate.type.ImageType@762c242d
Adding type registration characters -> org.hibernate.type.CharArrayType@2ab84468
Adding type registration char[] -> org.hibernate.type.CharArrayType@2ab84468
Adding type registration [C -> org.hibernate.type.CharArrayType@2ab84468
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@756fdd3b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@756fdd3b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@756fdd3b
Adding type registration text -> org.hibernate.type.TextType@5dd58d6e
Adding type registration ntext -> org.hibernate.type.NTextType@495eac5b
Adding type registration blob -> org.hibernate.type.BlobType@613d1106
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@613d1106
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f8e9bc0
Adding type registration clob -> org.hibernate.type.ClobType@3dc5bfa
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3dc5bfa
Adding type registration nclob -> org.hibernate.type.NClobType@4999c9e9
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4999c9e9
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cde0121
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59d12143
Adding type registration serializable -> org.hibernate.type.SerializableType@3de3667c
Adding type registration object -> org.hibernate.type.ObjectType@5f49c450
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f49c450
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@38958bb9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3d8a62ea
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@176da7e4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61dce821
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@75807fe0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1bf3de88
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@615b1895
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67c0697f
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@452103c5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5308613787151402588.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=10752, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@391bb1a7, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1f0928d2{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5308613787151402588.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5b754200, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2976b6bb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72b372ca]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f52fe85]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e3bd0e5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f38b2e9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5615b6fc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dc5e3c3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f8d44c7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc713d3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b8b0b39]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6085b807]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 9ab2eaec-ea1d-415e-ad64-a31a74a39a15 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test()
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7d189dca: startup date [Mon Nov 06 23:19:07 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.781 seconds (JVM running for 816.143)
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51f886e1: startup date [Mon Nov 06 23:19:25 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3105 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4677f8a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@5f3ef4f4{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@680989b4
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75033fca
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e36404
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4bd83934
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6fb84dd2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a9c280
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1af345b5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@10e8de46
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4675280c, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@5f3ef4f4{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@42eaca17, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe12b0f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fb41b48]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68221a71]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab2c17]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19e8e9dd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fabc329]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cefaec6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c9763a4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67b8973f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f63d90d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb6ba64]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12159acd
Registering SessionFactory: c97450e3-7191-4e0e-8f91-11c759030967 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@68c5a74a
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test()
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51f886e1: startup date [Mon Nov 06 23:19:25 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.317 seconds (JVM running for 9.934)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/] in DispatcherServlet with name 'dispatcherServlet'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51f886e1: startup date [Mon Nov 06 23:19:25 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ed25502: startup date [Mon Nov 06 23:28:16 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 863 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@193db150
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@666c9c3c{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@887ed15
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2c9e17cd
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c3307d0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@639a0987
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54c2bfa4
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8beea8e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c0761ce
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@fe291f8
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@69082648, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@666c9c3c{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6d3e6ca, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63d7507c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69890cde]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59d9214]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4416273]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32001146]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a36705]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bad4a7d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@493a3930]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb7d5b3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58216047]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@633c62aa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 9cbda364-6829-4eb4-b536-798c0091733c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test()
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ed25502: startup date [Mon Nov 06 23:28:16 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.037 seconds (JVM running for 534.427)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ed25502: startup date [Mon Nov 06 23:28:16 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34531069: startup date [Mon Nov 06 23:31:01 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 867 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6b78ec9b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1d25f906{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ed8a70f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@342cc788
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e543164
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56fdc893
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3df6fd9c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f347d2d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@84bebe
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3885576d
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@32fe151, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1d25f906{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@50d453aa, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71673c0d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c82d8a7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a41bbf6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d97fca3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b468619]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c81eb92]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37b03b2f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ca186d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@470f5aef]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3192dbc2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea02c4a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: dbdff747-1a1f-41dd-938e-fb3aea9266a1 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test()
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34531069: startup date [Mon Nov 06 23:31:01 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.894 seconds (JVM running for 699.323)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34531069: startup date [Mon Nov 06 23:31:01 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77bdc39a: startup date [Mon Nov 06 23:41:09 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 664 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4497f9bf
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@177e7378{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e4e34dc
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ca1fd7b
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1089aaf4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65339854
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2a14a8fa
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39cdd2e6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64ce0121
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1dc6d4d4
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6951349c, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@177e7378{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3869c6d6, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b4d4948]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8cfd25]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a4dc4f7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f07a3e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26deb06d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21bc828f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45a0944a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd443d9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b467d64]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64be71ce]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b9cbf49]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 50157b4c-8fd7-418d-93d5-6097cfc0a36f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77bdc39a: startup date [Mon Nov 06 23:41:09 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.688 seconds (JVM running for 1307.643)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 2 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Request method 'GET' not supported
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77bdc39a: startup date [Mon Nov 06 23:41:09 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@471c5885: startup date [Mon Nov 06 23:47:45 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 883 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5780a7c4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@433569dc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f6addb
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3375d250
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45cc4df3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7bf8f883
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a511a52
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@572ba61a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@702fcad9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4caf18bf
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1bb9f584, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@433569dc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7f2111ad, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a981309]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7ca18d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@184e72c9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6edca301]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1666ce53]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2464f7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74898208]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@440e774]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b25874]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23694184]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119a8852]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 5daca1f3-6d92-463f-bfdb-a90cc4a08190 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@471c5885: startup date [Mon Nov 06 23:47:45 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.904 seconds (JVM running for 1703.617)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@37c59057, payload=[Ljava.lang.Class;@316a0f4e}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@5cbcb16, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@207ace3e}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/pages/login] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/pages/login/test] in DispatcherServlet with name 'dispatcherServlet'
Request method 'GET' not supported
No mapping found for HTTP request with URI [/pages/login/test1] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/pages/login] in DispatcherServlet with name 'dispatcherServlet'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@471c5885: startup date [Mon Nov 06 23:47:45 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@324bbf49: startup date [Mon Nov 06 23:49:14 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 645 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1530aceb
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@5d1c8d0a{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5315fbfb
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f0f1812
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55bda3d5
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3943a965
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45f55795
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@621d08b1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a06bc2c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7eaa3e88
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@773cafe6, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@5d1c8d0a{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@58b091c4, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46764ba]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ca88c2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@742a1ab3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77860a7d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2750cd47]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@725c9715]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d92d062]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bdf4242]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ea5624]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@240c9e30]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69798723]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 096cfb01-e616-4dff-8baf-cd0fd2b98328 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@324bbf49: startup date [Mon Nov 06 23:49:14 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.549 seconds (JVM running for 1792.138)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
No mapping found for HTTP request with URI [/pages/login] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/pages/login] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/pages/login] in DispatcherServlet with name 'dispatcherServlet'
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@52260319, payload=[Ljava.lang.Class;@5ce1e72d}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@58de6869, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@1ddced16}, constraintType=GENERIC}.
No mapping found for HTTP request with URI [/login] in DispatcherServlet with name 'dispatcherServlet'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@324bbf49: startup date [Mon Nov 06 23:49:14 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@249b3403: startup date [Mon Nov 06 23:49:56 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 630 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@316a5331
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@148c40ed{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6892b7
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4003bc6f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c3895af
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@58bf2f5a
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c06f3d0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@413bd4fb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5936b49e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7852851d
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7c2ff1c7, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@148c40ed{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@10319044, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59507978]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a4b59f9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7321dba5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787f1cd9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd228ae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b15e950]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ecdb857]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d53c8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@503f6a48]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d98786e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5efee966]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 36459d1f-7f20-4583-b58f-4f4b63cfe8e1 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@249b3403: startup date [Mon Nov 06 23:49:56 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.381 seconds (JVM running for 1834.301)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 2 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@649ece2c, payload=[Ljava.lang.Class;@6a593ccf}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@6e66a55c, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@2b6436f4}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@249b3403: startup date [Mon Nov 06 23:49:56 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b0fe6bb: startup date [Mon Nov 06 23:50:39 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 577 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ff1501
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@3b7d0b63{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f29f1ac
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10a3d4fb
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@312cc6c8
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f41b9aa
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f75897f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@317f9666
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66b21c07
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@441c7592
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5dc1a601, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@3b7d0b63{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7c733208, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d43d585]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76057a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71225cde]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1932480f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5afcf117]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a147ca]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ea4a10d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f803edc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b34d6ba]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be2f3a0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b4b3ce3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 0ecaffa5-ef1e-4198-b6f6-be5b2c2f7819 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b0fe6bb: startup date [Mon Nov 06 23:50:39 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.311 seconds (JVM running for 1876.872)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 5 ms
No mapping found for HTTP request with URI [/pages/login/test] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/pages/login/test] in DispatcherServlet with name 'dispatcherServlet'
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@28c70582, payload=[Ljava.lang.Class;@2cf88442}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@69fa0fb9, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@482204cb}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b0fe6bb: startup date [Mon Nov 06 23:50:39 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a037243: startup date [Mon Nov 06 23:54:09 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 628 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3409c161
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@48f49faf{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f987e92
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@99a2d6d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26e54a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2de2e76f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a260af
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@590bd4b3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@29b04066
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@135303a0
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d554a65, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@48f49faf{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@65912f2d, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27348f39]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c0c249]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@647b5e5e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f55457f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5ce006]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e750cda]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4948f2af]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42edc924]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15c96143]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d283738]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49cd3b55]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: caa59a1b-5d3d-4c4e-95a1-0de7c14085d5 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a037243: startup date [Mon Nov 06 23:54:09 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.763 seconds (JVM running for 2087.296)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@39991fe0, payload=[Ljava.lang.Class;@f909bbd}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@4187fc11, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@5e4bd9a6}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a037243: startup date [Mon Nov 06 23:54:09 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21ac9934: startup date [Mon Nov 06 23:55:48 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 540 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7f7119bf
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6252682{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@141f51e2
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e0a6f59
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@293e1556
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d1f8f59
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@23615759
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e2c94cb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47e1b6fd
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@76358c1f
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@454a016d, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6252682{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7d33aa10, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fac6349]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8f4a16]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448d5a9e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3be38a79]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33f27935]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a30b37e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b529615]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33d100e1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c69cc73]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a8d072]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@536bf67]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: e457c1f6-3424-4deb-b02e-1d6cfb99f225 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21ac9934: startup date [Mon Nov 06 23:55:48 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.24 seconds (JVM running for 2185.707)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@69d98f81, payload=[Ljava.lang.Class;@543f46bb}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@9f670ce, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@27d2e5d5}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21ac9934: startup date [Mon Nov 06 23:55:48 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38aca4e6: startup date [Mon Nov 06 23:56:12 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 564 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2a54b7db
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@59923256{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2265f648
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c1d18f1
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@65888a80
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@693346a8
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64692a70
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@70a77c9c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@51da3482
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@222f3e17
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6f9e6354, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@59923256{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1fc668b8, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@363e2108]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dd7e0e5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43c146a3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7742059d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a41745a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68f5a2dc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c481d47]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@677ee7f0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@444d42ee]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b55b23]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c10f279]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: fded6753-ee79-494d-93d9-faf5a6f7751c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38aca4e6: startup date [Mon Nov 06 23:56:12 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.184 seconds (JVM running for 2210.023)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@eef1b03, payload=[Ljava.lang.Class;@28e4ae}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@4177073, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@4115ee95}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38aca4e6: startup date [Mon Nov 06 23:56:12 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79e09255: startup date [Mon Nov 06 23:58:09 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 658 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3fcda9e4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@9dbdd9a{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f55c509
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6c7d26a9
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3bf9f23e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@723d2787
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@73c1d944
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@760ce1fb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2908506
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@190a8bcc
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5d04bcb6, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@9dbdd9a{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@56dda9a2, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47ee039e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac82b94]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@219fbc20]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52fabef5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d3d4d0c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ef0f1bb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749df30f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23a67ef0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f209c7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c13d55a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@639af992]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 7774d30d-1930-4fce-af97-3b4d990f184d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79e09255: startup date [Mon Nov 06 23:58:09 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.362 seconds (JVM running for 2327.728)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@5bda7588, payload=[Ljava.lang.Class;@1ed8e097}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@7ef71fd8, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@46c037c4}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
No mapping found for HTTP request with URI [/test] in DispatcherServlet with name 'dispatcherServlet'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79e09255: startup date [Mon Nov 06 23:58:09 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@782db2eb: startup date [Mon Nov 06 23:58:46 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 540 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5e0e70d4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@5efee5d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@709f1eaf
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e97e37e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61c51a1e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4106e82a
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4964fcc3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@78597a82
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31858a7d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@473463df
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@34fe25a6, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@5efee5d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@176dda4a, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7615abd4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79028710]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54f5d063]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f89dfc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69b859ff]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d0e1971]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fbb17d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6a4891]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@402ea8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f60b762]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9df4010]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 02ac4631-0cc1-4d45-9032-7aedc799c3a6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@782db2eb: startup date [Mon Nov 06 23:58:46 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.113 seconds (JVM running for 2364.315)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 2 ms
No mapping found for HTTP request with URI [/test] in DispatcherServlet with name 'dispatcherServlet'
No mapping found for HTTP request with URI [/test] in DispatcherServlet with name 'dispatcherServlet'
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@9a8635b, payload=[Ljava.lang.Class;@d97e6b6}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@48956960, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@336fdc09}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@782db2eb: startup date [Mon Nov 06 23:58:46 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38a7bac7: startup date [Mon Nov 06 23:59:18 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49529a58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 428 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@19bf784b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6b55b424{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62af0822
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cd67bdc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@60339a00
Adding type registration yes_no -> org.hibernate.type.YesNoType@f189fe2
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f0a4171
Adding type registration character -> org.hibernate.type.CharacterType@2277419e
Adding type registration char -> org.hibernate.type.CharacterType@2277419e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2277419e
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration short -> org.hibernate.type.ShortType@13f7e020
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13f7e020
Adding type registration integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration int -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c2e96f5
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration long -> org.hibernate.type.LongType@433fc93
Adding type registration java.lang.Long -> org.hibernate.type.LongType@433fc93
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration float -> org.hibernate.type.FloatType@5b161f72
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b161f72
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60c691c7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56e77b45
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e36ce45
Adding type registration string -> org.hibernate.type.StringType@5a57b13a
Adding type registration java.lang.String -> org.hibernate.type.StringType@5a57b13a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@133c3bbb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@245d0233
Adding type registration url -> org.hibernate.type.UrlType@74de6817
Adding type registration java.net.URL -> org.hibernate.type.UrlType@74de6817
Adding type registration date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a6f84f6
Adding type registration time -> org.hibernate.type.TimeType@3f428628
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f428628
Adding type registration timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e5e0f48
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68c6a14f
Adding type registration calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3da09d21
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b78011d
Adding type registration locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e67c8f4
Adding type registration currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ae4b6ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c0c5e0d
Adding type registration class -> org.hibernate.type.ClassType@153e2c87
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@153e2c87
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bce2b8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2474e2c7
Adding type registration binary -> org.hibernate.type.BinaryType@20151e00
Adding type registration byte[] -> org.hibernate.type.BinaryType@20151e00
Adding type registration [B -> org.hibernate.type.BinaryType@20151e00
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6493d65
Adding type registration row_version -> org.hibernate.type.RowVersionType@3160343a
Adding type registration image -> org.hibernate.type.ImageType@4140e8fe
Adding type registration characters -> org.hibernate.type.CharArrayType@514cb088
Adding type registration char[] -> org.hibernate.type.CharArrayType@514cb088
Adding type registration [C -> org.hibernate.type.CharArrayType@514cb088
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17591ccf
Adding type registration text -> org.hibernate.type.TextType@5c5a8a3f
Adding type registration ntext -> org.hibernate.type.NTextType@4b1a9
Adding type registration blob -> org.hibernate.type.BlobType@13b66319
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13b66319
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72121ef4
Adding type registration clob -> org.hibernate.type.ClobType@463a387b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@463a387b
Adding type registration nclob -> org.hibernate.type.NClobType@2afc4384
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2afc4384
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e2aaa7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d2256e9
Adding type registration serializable -> org.hibernate.type.SerializableType@7269d03a
Adding type registration object -> org.hibernate.type.ObjectType@3035b453
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3035b453
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7cdbff09
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@447f204e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a50b6dd
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15561cf6
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@36d69ae2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b16b126
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@740f18c7
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@519b0b1c
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7d4989dd
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@177cb09c, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6b55b424{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\javax\el\javax.el-api\2.2.4\javax.el-api-2.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272770002288134284.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7c4d5fe0, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.password as password4_0_, user_.tel as tel5_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, password, tel, id) values (?, ?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, password=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, password, tel) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340fb200]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eefa639]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5226916]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11598ccd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6956226b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f5e30e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749b97b6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3162b8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e499ab5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d6ccec4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5590a414]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.password as password4_0_0_, user0_.tel as tel5_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: afee8146-a5d9-428b-989b-c8bcfe4c350f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/login/test],methods=[GET]}" onto public java.lang.String sw.controller.UserController.test(org.springframework.ui.Model)
Mapped "{[/login/test1],methods=[POST]}" onto public java.lang.String sw.controller.UserController.test1(sw.model.UserModel,org.springframework.validation.BindingResult,org.springframework.ui.Model)
Mapped "{[/login/login],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView sw.controller.UserController.login(sw.model.UserModel,org.springframework.validation.BindingResult)
Mapped "{[/login/captcha.jpg]}" onto public void sw.controller.UserController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/login/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38a7bac7: startup date [Mon Nov 06 23:59:18 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.06 seconds (JVM running for 2395.564)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.NotNull, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={message={javax.validation.constraints.NotNull.message}, groups=[Ljava.lang.Class;@35358adf, payload=[Ljava.lang.Class;@3bf27209}, constraintType=GENERIC}.
Adding composing constraint: ConstraintDescriptorImpl{annotation=javax.validation.constraints.Size, payloads=[], hasComposingConstraints=true, isReportAsSingleInvalidConstraint=false, elementType=FIELD, definedOn=DEFINED_LOCALLY, groups=[interface javax.validation.groups.Default], attributes={groups=[Ljava.lang.Class;@3fcde1af, min=1, message={javax.validation.constraints.Size.message}, max=2147483647, payload=[Ljava.lang.Class;@7acf7832}, constraintType=GENERIC}.
ValidationMessages not found.
ContributorValidationMessages not found.
org.hibernate.validator.ValidationMessages found.
