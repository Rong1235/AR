Starting Application on LuoRong with PID 8320 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
No active profile set, falling back to default profiles: default
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7fa5f15b: startup date [Sat Nov 04 12:26:02 CST 2017]; root of context hierarchy
Starting Application on LuoRong with PID 7332 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2872fa03: startup date [Sat Nov 04 12:27:05 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$14c48885] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3195 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping servlet: 'webServlet' to [/h2-console/*]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5ad73dbe
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@71704a63{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.College
		sw.entity.Grade]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2b85662f
Adding type registration boolean -> org.hibernate.type.BooleanType@2b85662f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b85662f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@490bb87c
Adding type registration true_false -> org.hibernate.type.TrueFalseType@177a1f32
Adding type registration yes_no -> org.hibernate.type.YesNoType@7b523f0b
Adding type registration byte -> org.hibernate.type.ByteType@4ac8b9d4
Adding type registration byte -> org.hibernate.type.ByteType@4ac8b9d4
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4ac8b9d4
Adding type registration character -> org.hibernate.type.CharacterType@5872ebd8
Adding type registration char -> org.hibernate.type.CharacterType@5872ebd8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5872ebd8
Adding type registration short -> org.hibernate.type.ShortType@557a3da2
Adding type registration short -> org.hibernate.type.ShortType@557a3da2
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@557a3da2
Adding type registration integer -> org.hibernate.type.IntegerType@5b27ab7
Adding type registration int -> org.hibernate.type.IntegerType@5b27ab7
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b27ab7
Adding type registration long -> org.hibernate.type.LongType@7f4e86ac
Adding type registration long -> org.hibernate.type.LongType@7f4e86ac
Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f4e86ac
Adding type registration float -> org.hibernate.type.FloatType@764e6028
Adding type registration float -> org.hibernate.type.FloatType@764e6028
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@764e6028
Adding type registration double -> org.hibernate.type.DoubleType@659c0778
Adding type registration double -> org.hibernate.type.DoubleType@659c0778
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@659c0778
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c4e3c11
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c4e3c11
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@719b1b96
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@719b1b96
Adding type registration string -> org.hibernate.type.StringType@407e3af1
Adding type registration java.lang.String -> org.hibernate.type.StringType@407e3af1
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4d95de99
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@bae6dc7
Adding type registration url -> org.hibernate.type.UrlType@312ae83a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@312ae83a
Adding type registration date -> org.hibernate.type.DateType@19910b25
Adding type registration java.sql.Date -> org.hibernate.type.DateType@19910b25
Adding type registration time -> org.hibernate.type.TimeType@52736cf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@52736cf
Adding type registration timestamp -> org.hibernate.type.TimestampType@e779988
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@e779988
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@e779988
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1eb779b3
Adding type registration calendar -> org.hibernate.type.CalendarType@599ada83
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@599ada83
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@599ada83
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2bc8130f
Adding type registration locale -> org.hibernate.type.LocaleType@39110ce9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39110ce9
Adding type registration currency -> org.hibernate.type.CurrencyType@16183fa1
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@16183fa1
Adding type registration timezone -> org.hibernate.type.TimeZoneType@259c2d14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@259c2d14
Adding type registration class -> org.hibernate.type.ClassType@2fe94a4e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2fe94a4e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c28e1dd
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c28e1dd
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@354f7007
Adding type registration binary -> org.hibernate.type.BinaryType@59cb7bcd
Adding type registration byte[] -> org.hibernate.type.BinaryType@59cb7bcd
Adding type registration [B -> org.hibernate.type.BinaryType@59cb7bcd
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c1cb15d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c1cb15d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c1cb15d
Adding type registration row_version -> org.hibernate.type.RowVersionType@4ebdcea8
Adding type registration image -> org.hibernate.type.ImageType@7c1b731f
Adding type registration characters -> org.hibernate.type.CharArrayType@5b6cccb
Adding type registration char[] -> org.hibernate.type.CharArrayType@5b6cccb
Adding type registration [C -> org.hibernate.type.CharArrayType@5b6cccb
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7424d59b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7424d59b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7424d59b
Adding type registration text -> org.hibernate.type.TextType@28ab9d21
Adding type registration ntext -> org.hibernate.type.NTextType@71ede2ce
Adding type registration blob -> org.hibernate.type.BlobType@63ac8edb
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@63ac8edb
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@53b07938
Adding type registration clob -> org.hibernate.type.ClobType@5784a58c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5784a58c
Adding type registration nclob -> org.hibernate.type.NClobType@54a38dac
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@54a38dac
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7daa5e31
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f5c222a
Adding type registration serializable -> org.hibernate.type.SerializableType@506863b6
Adding type registration object -> org.hibernate.type.ObjectType@b1e860c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b1e860c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72d5bf88
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@d846938
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6d43fde6
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@354abc11
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a3c6ccf
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@445f0519
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36817cb9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@564bf44c
Database ->
       name : H2
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Grade
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Grade
Bind entity sw.entity.Grade on table grade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=code, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property code with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:code]
building SimpleValue for code
Building property code
Binding column: Ejb3JoinColumn{logicalColumnName='college_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=college, insertable=true, updatable=true, unique=false}
Building property college
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.College
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name College
Bind entity sw.entity.College on table college
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=abbr, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property abbr with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:abbr]
building SimpleValue for abbr
Building property abbr
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=desc, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property desc with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:desc]
building SimpleValue for desc
Building property desc
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for code
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for abbr
Starting fillSimpleValue for desc
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [grade]
Forcing column [id] to be non-null as it is part of the primary key for table [college]
Resolving reference to class: sw.entity.College
Resolving reference to class: sw.entity.College
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2045369d
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5294913254498842045.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7332, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1d63de17, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@71704a63{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\com\h2database\h2\1.4.193\h2-1.4.193.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5294913254498842045.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@713ff970, file.encoding=UTF-8, java.specification.version=1.8}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Static SQL for entity: sw.entity.Grade
 Version select: select id from grade where id =?
 Snapshot select: select grade_.id, grade_.code as code2_1_, grade_.college_id as college_4_1_, grade_.name as name3_1_ from grade grade_ where grade_.id=?
 Insert 0: insert into grade (code, college_id, name, id) values (?, ?, ?, ?)
 Update 0: update grade set code=?, college_id=?, name=? where id=?
 Delete 0: delete from grade where id=?
 Identity insert: insert into grade (id, code, college_id, name) values (null, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17fcb793]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@339db73e]
Visiting attribute path : college.abbr
Visiting attribute path : college.desc
Visiting attribute path : college.name
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(college)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.College)
                - SQL table alias mapping - college1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity sw.entity.Grade [NONE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_, college1_.id as id1_0_1_, college1_.abbr as abbr2_0_1_, college1_.desc as desc3_0_1_, college1_.name as name4_0_1_ from grade grade0_ left outer join college college1_ on grade0_.college_id=college1_.id where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53678194]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c6bad4a]
Visiting attribute path : college.abbr
Visiting attribute path : college.desc
Visiting attribute path : college.name
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(college)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.College)
                - SQL table alias mapping - college1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity sw.entity.Grade [READ]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_, college1_.id as id1_0_1_, college1_.abbr as abbr2_0_1_, college1_.desc as desc3_0_1_, college1_.name as name4_0_1_ from grade grade0_ left outer join college college1_ on grade0_.college_id=college1_.id where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ebecc0f]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c386e20]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@396343ce]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@283d0062]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE_NOWAIT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@570b322b]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c0a9902]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE_SKIPLOCKED]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c74a2f1]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d5bf99b]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [FORCE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4561b5bb]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c3253c4]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_READ]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e47f8f8]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15fda966]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_WRITE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2f746e]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c62616]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_FORCE_INCREMENT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e881931]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42289a1a]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [OPTIMISTIC]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7569e2df]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13c1bf4]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [OPTIMISTIC_FORCE_INCREMENT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Grade: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Grade: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static SQL for entity: sw.entity.College
 Version select: select id from college where id =?
 Snapshot select: select college_.id, college_.abbr as abbr2_0_, college_.desc as desc3_0_, college_.name as name4_0_ from college college_ where college_.id=?
 Insert 0: insert into college (abbr, desc, name, id) values (?, ?, ?, ?)
 Update 0: update college set abbr=?, desc=?, name=? where id=?
 Delete 0: delete from college where id=?
 Identity insert: insert into college (id, abbr, desc, name) values (null, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f761fd7]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [NONE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b53dcd7]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [READ]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@179f8fc3]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4826b6]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE_NOWAIT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cfa0d26]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE_SKIPLOCKED]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5b8608]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [FORCE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773c6f9d]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_READ]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bfb4a84]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_WRITE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7acecb5e]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_FORCE_INCREMENT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c46cba0]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [OPTIMISTIC]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e76dcbe]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [OPTIMISTIC_FORCE_INCREMENT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.College: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.College: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table college if exists
drop table grade if exists
create table college (id bigint generated by default as identity, abbr varchar(255), desc varchar(255), name varchar(255), primary key (id))
create table grade (id bigint generated by default as identity, code varchar(255), name varchar(255), college_id bigint, primary key (id))
alter table grade add constraint FK7ilyi4c8pxrndt1lbye04uq0f foreign key (college_id) references college
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@707beb95
Registering SessionFactory: 9b5db7b3-59ee-4e1e-b063-e1ac1c35a8b0 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@5c39a470
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2872fa03: startup date [Sat Nov 04 12:27:05 CST 2017]; root of context hierarchy
Mapped "{[/collegeForm],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegeFormView()
Mapped "{[/updateCollege],methods=[POST]}" onto public java.lang.String sw.controller.CollegeController.updateCollege(sw.entity.College)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showHomePage()
Mapped "{[/delCollege/{id}],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.delCollege(java.lang.Long)
Mapped "{[/collegeForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegeForm(java.lang.Long,org.springframework.ui.Model)
Mapped "{[/collegeForm],methods=[POST]}" onto public java.lang.String sw.controller.CollegeController.dealCollegeForm(sw.entity.College,org.springframework.ui.Model)
Mapped "{[/collegeView],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegePage(org.springframework.ui.Model)
Mapped "{[/grade/form/{method}],methods=[GET]}" onto public java.lang.String sw.controller.GradeController.showForm(java.lang.String,java.lang.Long,org.springframework.ui.Model)
Mapped "{[/grade/],methods=[GET]}" onto public java.lang.String sw.controller.GradeController.getGrades(org.springframework.ui.Model)
Mapped "{[/grade/grade],methods=[POST]}" onto public java.lang.String sw.controller.GradeController.addGrade(sw.entity.Grade,java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
begin
Executing identity-insert immediately
insert into college (id, abbr, desc, name) values (null, ?, ?, ?)
Natively generated identity: 1
HHH000387: ResultSet's statement was not registered
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
sw.entity.College{name=生命科学学院, id=1, abbr=sk, desc=null}
Started Application in 8.712 seconds (JVM running for 9.377)
Starting Application on LuoRong with PID 5548 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2872fa03: startup date [Sat Nov 04 13:21:47 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e5ecf0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3310 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping servlet: 'webServlet' to [/h2-console/*]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5ad73dbe
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@30d99645{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.College
		sw.entity.Grade]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@584a8729
Adding type registration boolean -> org.hibernate.type.BooleanType@584a8729
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@584a8729
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@177a1f32
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f58cd4f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4ac8b9d4
Adding type registration byte -> org.hibernate.type.ByteType@7274a599
Adding type registration byte -> org.hibernate.type.ByteType@7274a599
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7274a599
Adding type registration character -> org.hibernate.type.CharacterType@557a3da2
Adding type registration char -> org.hibernate.type.CharacterType@557a3da2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@557a3da2
Adding type registration short -> org.hibernate.type.ShortType@5d9b3457
Adding type registration short -> org.hibernate.type.ShortType@5d9b3457
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5d9b3457
Adding type registration integer -> org.hibernate.type.IntegerType@7f4e86ac
Adding type registration int -> org.hibernate.type.IntegerType@7f4e86ac
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f4e86ac
Adding type registration long -> org.hibernate.type.LongType@84ea28b
Adding type registration long -> org.hibernate.type.LongType@84ea28b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@84ea28b
Adding type registration float -> org.hibernate.type.FloatType@659c0778
Adding type registration float -> org.hibernate.type.FloatType@659c0778
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@659c0778
Adding type registration double -> org.hibernate.type.DoubleType@75e200c
Adding type registration double -> org.hibernate.type.DoubleType@75e200c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@75e200c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66fe603c
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66fe603c
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b01069a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b01069a
Adding type registration string -> org.hibernate.type.StringType@6e8e209
Adding type registration java.lang.String -> org.hibernate.type.StringType@6e8e209
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4eba6cf2
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@237bb7f7
Adding type registration url -> org.hibernate.type.UrlType@2599bf40
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2599bf40
Adding type registration date -> org.hibernate.type.DateType@52736cf
Adding type registration java.sql.Date -> org.hibernate.type.DateType@52736cf
Adding type registration time -> org.hibernate.type.TimeType@e779988
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e779988
Adding type registration timestamp -> org.hibernate.type.TimestampType@5b98db8
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b98db8
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b98db8
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@625586b0
Adding type registration calendar -> org.hibernate.type.CalendarType@5121ecd8
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5121ecd8
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5121ecd8
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4439185
Adding type registration locale -> org.hibernate.type.LocaleType@34ff54c
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@34ff54c
Adding type registration currency -> org.hibernate.type.CurrencyType@21ee120c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@21ee120c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@447ca0ff
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@447ca0ff
Adding type registration class -> org.hibernate.type.ClassType@2714462f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2714462f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@754ec587
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@754ec587
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ec6235c
Adding type registration binary -> org.hibernate.type.BinaryType@63371c8d
Adding type registration byte[] -> org.hibernate.type.BinaryType@63371c8d
Adding type registration [B -> org.hibernate.type.BinaryType@63371c8d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@339ae93
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@339ae93
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@339ae93
Adding type registration row_version -> org.hibernate.type.RowVersionType@32e32ac8
Adding type registration image -> org.hibernate.type.ImageType@73c6f381
Adding type registration characters -> org.hibernate.type.CharArrayType@63a20d44
Adding type registration char[] -> org.hibernate.type.CharArrayType@63a20d44
Adding type registration [C -> org.hibernate.type.CharArrayType@63a20d44
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1fe13295
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1fe13295
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1fe13295
Adding type registration text -> org.hibernate.type.TextType@74c5a34d
Adding type registration ntext -> org.hibernate.type.NTextType@28ed12a
Adding type registration blob -> org.hibernate.type.BlobType@729163c9
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@729163c9
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3480ea1
Adding type registration clob -> org.hibernate.type.ClobType@15f690ed
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@15f690ed
Adding type registration nclob -> org.hibernate.type.NClobType@28aa26
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28aa26
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@155482a0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42080308
Adding type registration serializable -> org.hibernate.type.SerializableType@19543607
Adding type registration object -> org.hibernate.type.ObjectType@6a3c6ccf
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a3c6ccf
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@564bf44c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f98a05e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63d31179
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e0acd0e
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@576aab17
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d6a6bf4
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36c9f3f9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e232a93
Database ->
       name : H2
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Grade
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Grade
Bind entity sw.entity.Grade on table grade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=code, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property code with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:code]
building SimpleValue for code
Building property code
Binding column: Ejb3JoinColumn{logicalColumnName='college_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=college, insertable=true, updatable=true, unique=false}
Building property college
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.College
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name College
Bind entity sw.entity.College on table college
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=abbr, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property abbr with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:abbr]
building SimpleValue for abbr
Building property abbr
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=desc, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property desc with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:desc]
building SimpleValue for desc
Building property desc
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for code
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for abbr
Starting fillSimpleValue for desc
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [grade]
Forcing column [id] to be non-null as it is part of the primary key for table [college]
Resolving reference to class: sw.entity.College
Resolving reference to class: sw.entity.College
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b74d
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5004397894720470198.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=5548, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7377eadc, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@30d99645{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\com\h2database\h2\1.4.193\h2-1.4.193.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5004397894720470198.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@496f70b8, file.encoding=UTF-8, java.specification.version=1.8}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Static SQL for entity: sw.entity.Grade
 Version select: select id from grade where id =?
 Snapshot select: select grade_.id, grade_.code as code2_1_, grade_.college_id as college_4_1_, grade_.name as name3_1_ from grade grade_ where grade_.id=?
 Insert 0: insert into grade (code, college_id, name, id) values (?, ?, ?, ?)
 Update 0: update grade set code=?, college_id=?, name=? where id=?
 Delete 0: delete from grade where id=?
 Identity insert: insert into grade (id, code, college_id, name) values (null, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc7fb2d]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cb72dda]
Visiting attribute path : college.abbr
Visiting attribute path : college.desc
Visiting attribute path : college.name
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(college)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.College)
                - SQL table alias mapping - college1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity sw.entity.Grade [NONE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_, college1_.id as id1_0_1_, college1_.abbr as abbr2_0_1_, college1_.desc as desc3_0_1_, college1_.name as name4_0_1_ from grade grade0_ left outer join college college1_ on grade0_.college_id=college1_.id where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@396343ce]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@283d0062]
Visiting attribute path : college.abbr
Visiting attribute path : college.desc
Visiting attribute path : college.name
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(college)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.College)
                - SQL table alias mapping - college1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity sw.entity.Grade [READ]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_, college1_.id as id1_0_1_, college1_.abbr as abbr2_0_1_, college1_.desc as desc3_0_1_, college1_.name as name4_0_1_ from grade grade0_ left outer join college college1_ on grade0_.college_id=college1_.id where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74556637]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c74a2f1]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62604f3e]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4561b5bb]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE_NOWAIT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4be4cc]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e47f8f8]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE_SKIPLOCKED]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464358e6]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2f746e]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [FORCE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a9ec1cb]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e881931]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_READ]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e149e8a]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7569e2df]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_WRITE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b163cd2]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@742b983]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_FORCE_INCREMENT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d07dcae]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@268fc7de]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [OPTIMISTIC]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3413fc2d]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6f8324]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [OPTIMISTIC_FORCE_INCREMENT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Grade: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Grade: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static SQL for entity: sw.entity.College
 Version select: select id from college where id =?
 Snapshot select: select college_.id, college_.abbr as abbr2_0_, college_.desc as desc3_0_, college_.name as name4_0_ from college college_ where college_.id=?
 Insert 0: insert into college (abbr, desc, name, id) values (?, ?, ?, ?)
 Update 0: update college set abbr=?, desc=?, name=? where id=?
 Delete 0: delete from college where id=?
 Identity insert: insert into college (id, abbr, desc, name) values (null, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6770779c]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [NONE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54bd77bf]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [READ]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b73d4e8]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4803ee4a]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE_NOWAIT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1a1187]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE_SKIPLOCKED]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de80bf3]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [FORCE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ee7186]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_READ]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73acfb10]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_WRITE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ae0bfc]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_FORCE_INCREMENT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f5ae02]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [OPTIMISTIC]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf9645e]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [OPTIMISTIC_FORCE_INCREMENT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.College: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.College: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table college if exists
drop table grade if exists
create table college (id bigint generated by default as identity, abbr varchar(255), desc varchar(255), name varchar(255), primary key (id))
create table grade (id bigint generated by default as identity, code varchar(255), name varchar(255), college_id bigint, primary key (id))
alter table grade add constraint FK7ilyi4c8pxrndt1lbye04uq0f foreign key (college_id) references college
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5380b1f9
Registering SessionFactory: e7ab0d10-c1b1-4463-a37e-b464aac9978c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@9dbc733
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2872fa03: startup date [Sat Nov 04 13:21:47 CST 2017]; root of context hierarchy
Mapped "{[/collegeForm],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegeFormView()
Mapped "{[/updateCollege],methods=[POST]}" onto public java.lang.String sw.controller.CollegeController.updateCollege(sw.entity.College)
Mapped "{[/delCollege/{id}],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.delCollege(java.lang.Long)
Mapped "{[/collegeView],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegePage(org.springframework.ui.Model)
Mapped "{[/collegeForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegeForm(java.lang.Long,org.springframework.ui.Model)
Mapped "{[/collegeForm],methods=[POST]}" onto public java.lang.String sw.controller.CollegeController.dealCollegeForm(sw.entity.College,org.springframework.ui.Model)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showHomePage()
Mapped "{[/grade/grade],methods=[POST]}" onto public java.lang.String sw.controller.GradeController.addGrade(sw.entity.Grade,java.lang.Long)
Mapped "{[/grade/form/{method}],methods=[GET]}" onto public java.lang.String sw.controller.GradeController.showForm(java.lang.String,java.lang.Long,org.springframework.ui.Model)
Mapped "{[/grade/],methods=[GET]}" onto public java.lang.String sw.controller.GradeController.getGrades(org.springframework.ui.Model)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
begin
Executing identity-insert immediately
insert into college (id, abbr, desc, name) values (null, ?, ?, ?)
Natively generated identity: 1
HHH000387: ResultSet's statement was not registered
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
sw.entity.College{name=生命科学学院, id=1, abbr=sk, desc=null}
Started Application in 9.354 seconds (JVM running for 10.017)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2872fa03: startup date [Sat Nov 04 13:21:47 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table college if exists
drop table grade if exists
HHH000230: Schema export complete
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 5548 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d800c32: startup date [Sat Nov 04 13:45:45 CST 2017]; root of context hierarchy
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e5ecf0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1179 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping servlet: 'webServlet' to [/h2-console/*]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@67e0e27c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@17916c50{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.College
		sw.entity.Grade]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@584a8729
Adding type registration boolean -> org.hibernate.type.BooleanType@584a8729
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@584a8729
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@177a1f32
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f58cd4f
Adding type registration yes_no -> org.hibernate.type.YesNoType@4ac8b9d4
Adding type registration byte -> org.hibernate.type.ByteType@7274a599
Adding type registration byte -> org.hibernate.type.ByteType@7274a599
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7274a599
Adding type registration character -> org.hibernate.type.CharacterType@557a3da2
Adding type registration char -> org.hibernate.type.CharacterType@557a3da2
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@557a3da2
Adding type registration short -> org.hibernate.type.ShortType@5d9b3457
Adding type registration short -> org.hibernate.type.ShortType@5d9b3457
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5d9b3457
Adding type registration integer -> org.hibernate.type.IntegerType@7f4e86ac
Adding type registration int -> org.hibernate.type.IntegerType@7f4e86ac
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f4e86ac
Adding type registration long -> org.hibernate.type.LongType@84ea28b
Adding type registration long -> org.hibernate.type.LongType@84ea28b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@84ea28b
Adding type registration float -> org.hibernate.type.FloatType@659c0778
Adding type registration float -> org.hibernate.type.FloatType@659c0778
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@659c0778
Adding type registration double -> org.hibernate.type.DoubleType@75e200c
Adding type registration double -> org.hibernate.type.DoubleType@75e200c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@75e200c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66fe603c
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66fe603c
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b01069a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b01069a
Adding type registration string -> org.hibernate.type.StringType@6e8e209
Adding type registration java.lang.String -> org.hibernate.type.StringType@6e8e209
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4eba6cf2
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@237bb7f7
Adding type registration url -> org.hibernate.type.UrlType@2599bf40
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2599bf40
Adding type registration date -> org.hibernate.type.DateType@52736cf
Adding type registration java.sql.Date -> org.hibernate.type.DateType@52736cf
Adding type registration time -> org.hibernate.type.TimeType@e779988
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e779988
Adding type registration timestamp -> org.hibernate.type.TimestampType@5b98db8
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b98db8
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b98db8
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@625586b0
Adding type registration calendar -> org.hibernate.type.CalendarType@5121ecd8
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5121ecd8
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5121ecd8
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4439185
Adding type registration locale -> org.hibernate.type.LocaleType@34ff54c
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@34ff54c
Adding type registration currency -> org.hibernate.type.CurrencyType@21ee120c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@21ee120c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@447ca0ff
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@447ca0ff
Adding type registration class -> org.hibernate.type.ClassType@2714462f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2714462f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@754ec587
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@754ec587
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ec6235c
Adding type registration binary -> org.hibernate.type.BinaryType@63371c8d
Adding type registration byte[] -> org.hibernate.type.BinaryType@63371c8d
Adding type registration [B -> org.hibernate.type.BinaryType@63371c8d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@339ae93
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@339ae93
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@339ae93
Adding type registration row_version -> org.hibernate.type.RowVersionType@32e32ac8
Adding type registration image -> org.hibernate.type.ImageType@73c6f381
Adding type registration characters -> org.hibernate.type.CharArrayType@63a20d44
Adding type registration char[] -> org.hibernate.type.CharArrayType@63a20d44
Adding type registration [C -> org.hibernate.type.CharArrayType@63a20d44
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1fe13295
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1fe13295
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1fe13295
Adding type registration text -> org.hibernate.type.TextType@74c5a34d
Adding type registration ntext -> org.hibernate.type.NTextType@28ed12a
Adding type registration blob -> org.hibernate.type.BlobType@729163c9
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@729163c9
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3480ea1
Adding type registration clob -> org.hibernate.type.ClobType@15f690ed
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@15f690ed
Adding type registration nclob -> org.hibernate.type.NClobType@28aa26
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28aa26
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@155482a0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42080308
Adding type registration serializable -> org.hibernate.type.SerializableType@19543607
Adding type registration object -> org.hibernate.type.ObjectType@6a3c6ccf
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a3c6ccf
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@459095cd
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1827db0b
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e22f9c4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15e451a1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@541b902d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7242f626
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4b97cd73
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7cc9f4f9
Database ->
       name : H2
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.193 (2016-10-31)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Grade
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Grade
Bind entity sw.entity.Grade on table grade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=code, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property code with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:code]
building SimpleValue for code
Building property code
Binding column: Ejb3JoinColumn{logicalColumnName='college_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=college, insertable=true, updatable=true, unique=false}
Building property college
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.College
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name College
Bind entity sw.entity.College on table college
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=abbr, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property abbr with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:abbr]
building SimpleValue for abbr
Building property abbr
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=desc, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property desc with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:desc]
building SimpleValue for desc
Building property desc
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for code
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for abbr
Starting fillSimpleValue for desc
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [grade]
Forcing column [id] to be non-null as it is part of the primary key for table [college]
Resolving reference to class: sw.entity.College
Resolving reference to class: sw.entity.College
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b74d
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5004397894720470198.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=5548, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75f3fec4, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@17916c50{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=org.h2.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE; username=sa; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\com\h2database\h2\1.4.193\h2-1.4.193.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5004397894720470198.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5cdaaf5a, file.encoding=UTF-8, java.specification.version=1.8}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Static SQL for entity: sw.entity.Grade
 Version select: select id from grade where id =?
 Snapshot select: select grade_.id, grade_.code as code2_1_, grade_.college_id as college_4_1_, grade_.name as name3_1_ from grade grade_ where grade_.id=?
 Insert 0: insert into grade (code, college_id, name, id) values (?, ?, ?, ?)
 Update 0: update grade set code=?, college_id=?, name=? where id=?
 Delete 0: delete from grade where id=?
 Identity insert: insert into grade (id, code, college_id, name) values (null, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c7c174]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@335f428f]
Visiting attribute path : college.abbr
Visiting attribute path : college.desc
Visiting attribute path : college.name
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(college)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.College)
                - SQL table alias mapping - college1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity sw.entity.Grade [NONE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_, college1_.id as id1_0_1_, college1_.abbr as abbr2_0_1_, college1_.desc as desc3_0_1_, college1_.name as name4_0_1_ from grade grade0_ left outer join college college1_ on grade0_.college_id=college1_.id where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de85de7]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e09a8ed]
Visiting attribute path : college.abbr
Visiting attribute path : college.desc
Visiting attribute path : college.name
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(college)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.College)
                - SQL table alias mapping - college1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity sw.entity.Grade [READ]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_, college1_.id as id1_0_1_, college1_.abbr as abbr2_0_1_, college1_.desc as desc3_0_1_, college1_.name as name4_0_1_ from grade grade0_ left outer join college college1_ on grade0_.college_id=college1_.id where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c944e1]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2debe649]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cf0649e]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c850924]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE_NOWAIT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e2e6353]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ef433b0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE_SKIPLOCKED]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7afcd163]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fec923c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [FORCE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a5bc2]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23676ed0]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_READ]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e165f2]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@193e17ef]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_WRITE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@137fbf6]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67e36f3c]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_FORCE_INCREMENT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e0b9d40]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3475fd98]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [OPTIMISTIC]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4813fea5]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ddf3cd]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [OPTIMISTIC_FORCE_INCREMENT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Grade: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Grade: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static SQL for entity: sw.entity.College
 Version select: select id from college where id =?
 Snapshot select: select college_.id, college_.abbr as abbr2_0_, college_.desc as desc3_0_, college_.name as name4_0_ from college college_ where college_.id=?
 Insert 0: insert into college (abbr, desc, name, id) values (?, ?, ?, ?)
 Update 0: update college set abbr=?, desc=?, name=? where id=?
 Delete 0: delete from college where id=?
 Identity insert: insert into college (id, abbr, desc, name) values (null, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@585f4f13]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [NONE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@118b45a7]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [READ]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fe168b8]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28bdcdb3]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE_NOWAIT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@258ec7cc]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE_SKIPLOCKED]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5cd7]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [FORCE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@148e9730]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_READ]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@668338d7]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_WRITE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d578d0e]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_FORCE_INCREMENT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c849ace]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [OPTIMISTIC]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@154699d5]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [OPTIMISTIC_FORCE_INCREMENT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.College: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.College: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table college if exists
drop table grade if exists
create table college (id bigint generated by default as identity, abbr varchar(255), desc varchar(255), name varchar(255), primary key (id))
create table grade (id bigint generated by default as identity, code varchar(255), name varchar(255), college_id bigint, primary key (id))
alter table grade add constraint FK7ilyi4c8pxrndt1lbye04uq0f foreign key (college_id) references college
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 317735e8-98c7-4db4-8575-01419b843b83 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d800c32: startup date [Sat Nov 04 13:45:45 CST 2017]; root of context hierarchy
Mapped "{[/collegeForm],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegeFormView()
Mapped "{[/updateCollege],methods=[POST]}" onto public java.lang.String sw.controller.CollegeController.updateCollege(sw.entity.College)
Mapped "{[/delCollege/{id}],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.delCollege(java.lang.Long)
Mapped "{[/collegeView],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegePage(org.springframework.ui.Model)
Mapped "{[/collegeForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegeForm(java.lang.Long,org.springframework.ui.Model)
Mapped "{[/collegeForm],methods=[POST]}" onto public java.lang.String sw.controller.CollegeController.dealCollegeForm(sw.entity.College,org.springframework.ui.Model)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showHomePage()
Mapped "{[/grade/grade],methods=[POST]}" onto public java.lang.String sw.controller.GradeController.addGrade(sw.entity.Grade,java.lang.Long)
Mapped "{[/grade/form/{method}],methods=[GET]}" onto public java.lang.String sw.controller.GradeController.showForm(java.lang.String,java.lang.Long,org.springframework.ui.Model)
Mapped "{[/grade/],methods=[GET]}" onto public java.lang.String sw.controller.GradeController.getGrades(org.springframework.ui.Model)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
begin
Executing identity-insert immediately
insert into college (id, abbr, desc, name) values (null, ?, ?, ?)
Natively generated identity: 1
HHH000387: ResultSet's statement was not registered
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
sw.entity.College{name=生命科学学院, id=1, abbr=sk, desc=null}
Started Application in 2.56 seconds (JVM running for 1442.286)
Starting Application on LuoRong with PID 9828 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4dd7a096: startup date [Sat Nov 04 13:48:45 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fdb7e905] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3302 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3762a615
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@519e9d46{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://localhost:3306/test ; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.College
		sw.entity.Grade]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@39ebc073
Adding type registration boolean -> org.hibernate.type.BooleanType@39ebc073
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ebc073
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@47c568fa
Adding type registration true_false -> org.hibernate.type.TrueFalseType@318ae3b2
Adding type registration yes_no -> org.hibernate.type.YesNoType@23846d9a
Adding type registration byte -> org.hibernate.type.ByteType@4d79b4ef
Adding type registration byte -> org.hibernate.type.ByteType@4d79b4ef
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d79b4ef
Adding type registration character -> org.hibernate.type.CharacterType@9441eac
Adding type registration char -> org.hibernate.type.CharacterType@9441eac
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@9441eac
Adding type registration short -> org.hibernate.type.ShortType@1cbb90a7
Adding type registration short -> org.hibernate.type.ShortType@1cbb90a7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1cbb90a7
Adding type registration integer -> org.hibernate.type.IntegerType@45034337
Adding type registration int -> org.hibernate.type.IntegerType@45034337
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@45034337
Adding type registration long -> org.hibernate.type.LongType@74d763ad
Adding type registration long -> org.hibernate.type.LongType@74d763ad
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74d763ad
Adding type registration float -> org.hibernate.type.FloatType@6f445555
Adding type registration float -> org.hibernate.type.FloatType@6f445555
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f445555
Adding type registration double -> org.hibernate.type.DoubleType@13c549fb
Adding type registration double -> org.hibernate.type.DoubleType@13c549fb
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13c549fb
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5897aa43
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5897aa43
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5adf43b6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5adf43b6
Adding type registration string -> org.hibernate.type.StringType@511c9816
Adding type registration java.lang.String -> org.hibernate.type.StringType@511c9816
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a4fb7b0
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5f18d4f5
Adding type registration url -> org.hibernate.type.UrlType@6c668a8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@6c668a8
Adding type registration date -> org.hibernate.type.DateType@5a4fc7b0
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5a4fc7b0
Adding type registration time -> org.hibernate.type.TimeType@2bf9cb5c
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bf9cb5c
Adding type registration timestamp -> org.hibernate.type.TimestampType@6264a7df
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6264a7df
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6264a7df
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e5e2bd7
Adding type registration calendar -> org.hibernate.type.CalendarType@4f94ed29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4f94ed29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4f94ed29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7dfee8fe
Adding type registration locale -> org.hibernate.type.LocaleType@7c0454a6
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7c0454a6
Adding type registration currency -> org.hibernate.type.CurrencyType@61918973
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61918973
Adding type registration timezone -> org.hibernate.type.TimeZoneType@51165bc9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@51165bc9
Adding type registration class -> org.hibernate.type.ClassType@6a6964e4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a6964e4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51a4e30c
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51a4e30c
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15d80879
Adding type registration binary -> org.hibernate.type.BinaryType@552dc259
Adding type registration byte[] -> org.hibernate.type.BinaryType@552dc259
Adding type registration [B -> org.hibernate.type.BinaryType@552dc259
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4397df97
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4397df97
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4397df97
Adding type registration row_version -> org.hibernate.type.RowVersionType@3f75c21c
Adding type registration image -> org.hibernate.type.ImageType@34772128
Adding type registration characters -> org.hibernate.type.CharArrayType@57953f6c
Adding type registration char[] -> org.hibernate.type.CharArrayType@57953f6c
Adding type registration [C -> org.hibernate.type.CharArrayType@57953f6c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5c280e7e
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5c280e7e
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5c280e7e
Adding type registration text -> org.hibernate.type.TextType@579ada34
Adding type registration ntext -> org.hibernate.type.NTextType@22688a20
Adding type registration blob -> org.hibernate.type.BlobType@a3a310d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a3a310d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57c0ddc0
Adding type registration clob -> org.hibernate.type.ClobType@34cc2e4d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@34cc2e4d
Adding type registration nclob -> org.hibernate.type.NClobType@6a9a5ce2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a9a5ce2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7939eca0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6b764bc
Adding type registration serializable -> org.hibernate.type.SerializableType@3ab25df0
Adding type registration object -> org.hibernate.type.ObjectType@738c2793
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@738c2793
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2a102d76
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@38323718
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37698564
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5868b20f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@73384fe9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a1b2c61
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@21a2c0e3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3cc7e612
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root  '@'localhost' (using password: YES)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 11468 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a79bebf: startup date [Sat Nov 04 13:50:47 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd09d915] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3235 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1c2d4a62
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@38aa989e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://localhost:3306/test ; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.College
		sw.entity.Grade]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1186033
Adding type registration boolean -> org.hibernate.type.BooleanType@1186033
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1186033
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6bc4d0ca
Adding type registration true_false -> org.hibernate.type.TrueFalseType@7dfc79f5
Adding type registration yes_no -> org.hibernate.type.YesNoType@4000c0ad
Adding type registration byte -> org.hibernate.type.ByteType@1c37c064
Adding type registration byte -> org.hibernate.type.ByteType@1c37c064
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1c37c064
Adding type registration character -> org.hibernate.type.CharacterType@5de36308
Adding type registration char -> org.hibernate.type.CharacterType@5de36308
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5de36308
Adding type registration short -> org.hibernate.type.ShortType@f44355f
Adding type registration short -> org.hibernate.type.ShortType@f44355f
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@f44355f
Adding type registration integer -> org.hibernate.type.IntegerType@1ff536d3
Adding type registration int -> org.hibernate.type.IntegerType@1ff536d3
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ff536d3
Adding type registration long -> org.hibernate.type.LongType@2deaa69b
Adding type registration long -> org.hibernate.type.LongType@2deaa69b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2deaa69b
Adding type registration float -> org.hibernate.type.FloatType@cffa87f
Adding type registration float -> org.hibernate.type.FloatType@cffa87f
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@cffa87f
Adding type registration double -> org.hibernate.type.DoubleType@78ea78b6
Adding type registration double -> org.hibernate.type.DoubleType@78ea78b6
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78ea78b6
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@775d2509
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@775d2509
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2c491d57
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2c491d57
Adding type registration string -> org.hibernate.type.StringType@4b4edf8b
Adding type registration java.lang.String -> org.hibernate.type.StringType@4b4edf8b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2518c90d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a411351
Adding type registration url -> org.hibernate.type.UrlType@21c0fd1b
Adding type registration java.net.URL -> org.hibernate.type.UrlType@21c0fd1b
Adding type registration date -> org.hibernate.type.DateType@189fc13e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@189fc13e
Adding type registration time -> org.hibernate.type.TimeType@67ac4b75
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67ac4b75
Adding type registration timestamp -> org.hibernate.type.TimestampType@75a8524f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75a8524f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75a8524f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@fc11c59
Adding type registration calendar -> org.hibernate.type.CalendarType@80182c9
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@80182c9
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@80182c9
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5d3cec
Adding type registration locale -> org.hibernate.type.LocaleType@32f424ee
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@32f424ee
Adding type registration currency -> org.hibernate.type.CurrencyType@5061e510
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5061e510
Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b4442e7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b4442e7
Adding type registration class -> org.hibernate.type.ClassType@53377d15
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@53377d15
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13e57341
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13e57341
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11ce7dc8
Adding type registration binary -> org.hibernate.type.BinaryType@717ed5e0
Adding type registration byte[] -> org.hibernate.type.BinaryType@717ed5e0
Adding type registration [B -> org.hibernate.type.BinaryType@717ed5e0
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5a27d0e3
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5a27d0e3
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5a27d0e3
Adding type registration row_version -> org.hibernate.type.RowVersionType@1b19c475
Adding type registration image -> org.hibernate.type.ImageType@20ef5fd5
Adding type registration characters -> org.hibernate.type.CharArrayType@ae3d8a3
Adding type registration char[] -> org.hibernate.type.CharArrayType@ae3d8a3
Adding type registration [C -> org.hibernate.type.CharArrayType@ae3d8a3
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dd48261
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dd48261
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dd48261
Adding type registration text -> org.hibernate.type.TextType@25f3c16e
Adding type registration ntext -> org.hibernate.type.NTextType@351eaaaf
Adding type registration blob -> org.hibernate.type.BlobType@355a9024
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@355a9024
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1493a030
Adding type registration clob -> org.hibernate.type.ClobType@28192495
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28192495
Adding type registration nclob -> org.hibernate.type.NClobType@507320e5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@507320e5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d1756f3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@580b5638
Adding type registration serializable -> org.hibernate.type.SerializableType@4fa0618b
Adding type registration object -> org.hibernate.type.ObjectType@6cf3f084
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6cf3f084
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f088730
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c0c2585
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7b8a5565
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@494a4169
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@22106e77
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f0d57bd
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36851844
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d5f56f4
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root  '@'localhost' (using password: YES)
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
HHH000422: Disabling contextual LOB creation as connection was null
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.Grade
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Grade
Bind entity sw.entity.Grade on table grade
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=code, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property code with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:code]
building SimpleValue for code
Building property code
Binding column: Ejb3JoinColumn{logicalColumnName='college_id', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=college, insertable=true, updatable=true, unique=false}
Building property college
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(grade), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.Grade:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: sw.entity.College
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name College
Bind entity sw.entity.College on table college
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=abbr, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property abbr with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:abbr]
building SimpleValue for abbr
Building property abbr
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=desc, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property desc with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:desc]
building SimpleValue for desc
Building property desc
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(college), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.College:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for code
Starting fillSimpleValue for name
Starting fillSimpleValue for id
Starting fillSimpleValue for abbr
Starting fillSimpleValue for desc
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [grade]
Forcing column [id] to be non-null as it is part of the primary key for table [college]
Resolving reference to class: sw.entity.College
Resolving reference to class: sw.entity.College
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1d4071a2
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 0
JDBC batch updates for versioned data: enabled
Scrollable result sets: disabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): disabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8188966909782724930.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11468, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@798a8413, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@38aa989e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://localhost:3306/test ; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8188966909782724930.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1e9303c2, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.Grade] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.Grade
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Not known whether passed class name [sw.entity.College] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.College
Static SQL for entity: sw.entity.Grade
 Version select: select id from grade where id =?
 Snapshot select: select grade_.id, grade_.code as code2_1_, grade_.college_id as college_4_1_, grade_.name as name3_1_ from grade grade_ where grade_.id=?
 Insert 0: insert into grade (code, college_id, name, id) values (?, ?, ?, ?)
 Update 0: update grade set code=?, college_id=?, name=? where id=?
 Delete 0: delete from grade where id=?
 Identity insert: insert into grade (code, college_id, name) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af5ece5]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7afc6dcb]
Visiting attribute path : college.abbr
Visiting attribute path : college.desc
Visiting attribute path : college.name
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(college)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.College)
                - SQL table alias mapping - college1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity sw.entity.Grade [NONE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_, college1_.id as id1_0_1_, college1_.abbr as abbr2_0_1_, college1_.desc as desc3_0_1_, college1_.name as name4_0_1_ from grade grade0_ left outer join college college1_ on grade0_.college_id=college1_.id where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@488a7358]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d795188]
Visiting attribute path : college.abbr
Visiting attribute path : college.desc
Visiting attribute path : college.name
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(college)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=sw.entity.College)
                - SQL table alias mapping - college1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity sw.entity.Grade [READ]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_, college1_.id as id1_0_1_, college1_.abbr as abbr2_0_1_, college1_.desc as desc3_0_1_, college1_.name as name4_0_1_ from grade grade0_ left outer join college college1_ on grade0_.college_id=college1_.id where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@153110e5]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76632b22]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d14e3cd]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f9d32e5]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE_NOWAIT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60c8220f]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2179b053]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [UPGRADE_SKIPLOCKED]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4715b483]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f1af96]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [FORCE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@256675d3]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a7f61d]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_READ]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cee6d80]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4b79d9]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_WRITE]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@492b7713]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb73f73]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [PESSIMISTIC_FORCE_INCREMENT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b571ecd]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b0cf1f3]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [OPTIMISTIC]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c570146]
Visiting attribute path : code
Visiting attribute path : college
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55e3777f]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.Grade)
    - Returns
       - EntityReturnImpl(entity=sw.entity.Grade, querySpaceUid=<gen:0>, path=sw.entity.Grade)
          - EntityAttributeFetchImpl(entity=sw.entity.College, querySpaceUid=<gen:1>, path=sw.entity.Grade.college)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.Grade)
          - SQL table alias mapping - grade0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity sw.entity.Grade [OPTIMISTIC_FORCE_INCREMENT]: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.Grade: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.Grade: select grade0_.id as id1_1_0_, grade0_.code as code2_1_0_, grade0_.college_id as college_4_1_0_, grade0_.name as name3_1_0_ from grade grade0_ where grade0_.id=?
Static SQL for entity: sw.entity.College
 Version select: select id from college where id =?
 Snapshot select: select college_.id, college_.abbr as abbr2_0_, college_.desc as desc3_0_, college_.name as name4_0_ from college college_ where college_.id=?
 Insert 0: insert into college (abbr, desc, name, id) values (?, ?, ?, ?)
 Update 0: update college set abbr=?, desc=?, name=? where id=?
 Delete 0: delete from college where id=?
 Identity insert: insert into college (abbr, desc, name) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10811d6c]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [NONE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e9d22d]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [READ]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35968926]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df8d0]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE_NOWAIT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@86264a1]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [UPGRADE_SKIPLOCKED]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4829582]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [FORCE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76934c24]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_READ]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0b4b62]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_WRITE]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469ea041]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [PESSIMISTIC_FORCE_INCREMENT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b1dc85]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [OPTIMISTIC]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b6f44a8]
Visiting attribute path : abbr
Visiting attribute path : desc
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.College)
    - Returns
       - EntityReturnImpl(entity=sw.entity.College, querySpaceUid=<gen:0>, path=sw.entity.College)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.College)
          - SQL table alias mapping - college0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.College [OPTIMISTIC_FORCE_INCREMENT]: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.College: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.College: select college0_.id as id1_0_0_, college0_.abbr as abbr2_0_0_, college0_.desc as desc3_0_0_, college0_.name as name4_0_0_ from college college0_ where college0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@db875c3
Registering SessionFactory: e6fdca3b-ac8b-4d8e-ba32-976c00e4dc8a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@63b4beee
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a79bebf: startup date [Sat Nov 04 13:50:47 CST 2017]; root of context hierarchy
Mapped "{[/collegeForm],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegeFormView()
Mapped "{[/collegeForm/{id}],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegeForm(java.lang.Long,org.springframework.ui.Model)
Mapped "{[/collegeForm],methods=[POST]}" onto public java.lang.String sw.controller.CollegeController.dealCollegeForm(sw.entity.College,org.springframework.ui.Model)
Mapped "{[/collegeView],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showCollegePage(org.springframework.ui.Model)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.showHomePage()
Mapped "{[/updateCollege],methods=[POST]}" onto public java.lang.String sw.controller.CollegeController.updateCollege(sw.entity.College)
Mapped "{[/delCollege/{id}],methods=[GET]}" onto public java.lang.String sw.controller.CollegeController.delCollege(java.lang.Long)
Mapped "{[/grade/form/{method}],methods=[GET]}" onto public java.lang.String sw.controller.GradeController.showForm(java.lang.String,java.lang.Long,org.springframework.ui.Model)
Mapped "{[/grade/],methods=[GET]}" onto public java.lang.String sw.controller.GradeController.getGrades(org.springframework.ui.Model)
Mapped "{[/grade/grade],methods=[POST]}" onto public java.lang.String sw.controller.GradeController.addGrade(sw.entity.Grade,java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
begin
Unable to acquire JDBC Connection [n/a]
java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2253)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2284)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2083)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:806)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:410)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:328)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:386)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:87)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:112)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:230)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:237)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:214)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:52)
	at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1512)
	at org.hibernate.jpa.internal.TransactionImpl.begin(TransactionImpl.java:45)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:189)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:380)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:447)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:277)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy76.save(Unknown Source)
	at sw.Application.lambda$0(Application.java:25)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:776)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:760)
	at org.springframework.boot.SpringApplication.afterRefresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at sw.Application.main(Application.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
SQL Error: 1045, SQLState: 28000
Mark transaction for rollback


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a79bebf: startup date [Sat Nov 04 13:50:47 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 11292 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6dcfb476: startup date [Sat Nov 04 13:53:12 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$173fea4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3017 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$80c64e6b.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$80c64e6b$$FastClassBySpringCGLIB$$530dbc46.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$80c64e6b.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at sw.Application.main(Application.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2253)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2284)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2083)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:806)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:410)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:328)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 67 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2e7363af
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@724dfde6{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://localhost:3306/test ; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.College
		sw.entity.Grade]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@17153e4b
Adding type registration boolean -> org.hibernate.type.BooleanType@17153e4b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@17153e4b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5a04303a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@587095a0
Adding type registration yes_no -> org.hibernate.type.YesNoType@17bd78f4
Adding type registration byte -> org.hibernate.type.ByteType@3ead175a
Adding type registration byte -> org.hibernate.type.ByteType@3ead175a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3ead175a
Adding type registration character -> org.hibernate.type.CharacterType@481011c1
Adding type registration char -> org.hibernate.type.CharacterType@481011c1
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@481011c1
Adding type registration short -> org.hibernate.type.ShortType@2bf698ae
Adding type registration short -> org.hibernate.type.ShortType@2bf698ae
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2bf698ae
Adding type registration integer -> org.hibernate.type.IntegerType@8818cfa
Adding type registration int -> org.hibernate.type.IntegerType@8818cfa
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@8818cfa
Adding type registration long -> org.hibernate.type.LongType@69af7358
Adding type registration long -> org.hibernate.type.LongType@69af7358
Adding type registration java.lang.Long -> org.hibernate.type.LongType@69af7358
Adding type registration float -> org.hibernate.type.FloatType@74786b41
Adding type registration float -> org.hibernate.type.FloatType@74786b41
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74786b41
Adding type registration double -> org.hibernate.type.DoubleType@62dbfd87
Adding type registration double -> org.hibernate.type.DoubleType@62dbfd87
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62dbfd87
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68f1186c
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68f1186c
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1917d060
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1917d060
Adding type registration string -> org.hibernate.type.StringType@15a5cee5
Adding type registration java.lang.String -> org.hibernate.type.StringType@15a5cee5
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1aae9446
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3706e7d2
Adding type registration url -> org.hibernate.type.UrlType@5b281008
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b281008
Adding type registration date -> org.hibernate.type.DateType@66eab1d9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@66eab1d9
Adding type registration time -> org.hibernate.type.TimeType@7617b795
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7617b795
Adding type registration timestamp -> org.hibernate.type.TimestampType@480472ad
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@480472ad
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@480472ad
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dec81e
Adding type registration calendar -> org.hibernate.type.CalendarType@5b24cd5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5b24cd5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5b24cd5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@37b4986
Adding type registration locale -> org.hibernate.type.LocaleType@41dbc189
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@41dbc189
Adding type registration currency -> org.hibernate.type.CurrencyType@2dced297
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2dced297
Adding type registration timezone -> org.hibernate.type.TimeZoneType@560e429c
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@560e429c
Adding type registration class -> org.hibernate.type.ClassType@2916feeb
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2916feeb
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@22916e5d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@22916e5d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7194feb
Adding type registration binary -> org.hibernate.type.BinaryType@252229ec
Adding type registration byte[] -> org.hibernate.type.BinaryType@252229ec
Adding type registration [B -> org.hibernate.type.BinaryType@252229ec
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1dee8353
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1dee8353
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1dee8353
Adding type registration row_version -> org.hibernate.type.RowVersionType@17247c4
Adding type registration image -> org.hibernate.type.ImageType@3882b8c5
Adding type registration characters -> org.hibernate.type.CharArrayType@673eccc0
Adding type registration char[] -> org.hibernate.type.CharArrayType@673eccc0
Adding type registration [C -> org.hibernate.type.CharArrayType@673eccc0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@36b0d2a1
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@36b0d2a1
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@36b0d2a1
Adding type registration text -> org.hibernate.type.TextType@46f0bf4
Adding type registration ntext -> org.hibernate.type.NTextType@3646737a
Adding type registration blob -> org.hibernate.type.BlobType@7868bdc4
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7868bdc4
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@48c5bb38
Adding type registration clob -> org.hibernate.type.ClobType@7bb0aafc
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7bb0aafc
Adding type registration nclob -> org.hibernate.type.NClobType@796f0101
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@796f0101
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@df38221
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@171c41ff
Adding type registration serializable -> org.hibernate.type.SerializableType@40b419eb
Adding type registration object -> org.hibernate.type.ObjectType@432602b2
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@432602b2
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@22f75dac
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5137e8d2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2304e5bf
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@478a1231
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f882d51
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31173f0a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@35ba0d8a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22369a96
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root  '@'localhost' (using password: YES)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 7316 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4dd7a096: startup date [Sat Nov 04 13:56:35 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a7a70855] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2997 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$112d6c75.CGLIB$jpaVendorAdapter$4(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$112d6c75$$FastClassBySpringCGLIB$$5fb7615b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$112d6c75.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at sw.Application.main(Application.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2253)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2284)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2083)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:806)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:410)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:328)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 67 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3762a615
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@31fe4d7e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://localhost:3306/test ; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.College
		sw.entity.Grade]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2c932cf6
Adding type registration boolean -> org.hibernate.type.BooleanType@2c932cf6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c932cf6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d926bf1
Adding type registration true_false -> org.hibernate.type.TrueFalseType@fc825c6
Adding type registration yes_no -> org.hibernate.type.YesNoType@1717359e
Adding type registration byte -> org.hibernate.type.ByteType@79d08869
Adding type registration byte -> org.hibernate.type.ByteType@79d08869
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@79d08869
Adding type registration character -> org.hibernate.type.CharacterType@dbe1be8
Adding type registration char -> org.hibernate.type.CharacterType@dbe1be8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@dbe1be8
Adding type registration short -> org.hibernate.type.ShortType@6a1cb91b
Adding type registration short -> org.hibernate.type.ShortType@6a1cb91b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6a1cb91b
Adding type registration integer -> org.hibernate.type.IntegerType@5868b20f
Adding type registration int -> org.hibernate.type.IntegerType@5868b20f
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5868b20f
Adding type registration long -> org.hibernate.type.LongType@39589065
Adding type registration long -> org.hibernate.type.LongType@39589065
Adding type registration java.lang.Long -> org.hibernate.type.LongType@39589065
Adding type registration float -> org.hibernate.type.FloatType@421f612b
Adding type registration float -> org.hibernate.type.FloatType@421f612b
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@421f612b
Adding type registration double -> org.hibernate.type.DoubleType@45cfb2ea
Adding type registration double -> org.hibernate.type.DoubleType@45cfb2ea
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@45cfb2ea
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32d3131d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32d3131d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1df27041
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1df27041
Adding type registration string -> org.hibernate.type.StringType@733db6d3
Adding type registration java.lang.String -> org.hibernate.type.StringType@733db6d3
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@461ae54d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68041422
Adding type registration url -> org.hibernate.type.UrlType@59848437
Adding type registration java.net.URL -> org.hibernate.type.UrlType@59848437
Adding type registration date -> org.hibernate.type.DateType@653c9e15
Adding type registration java.sql.Date -> org.hibernate.type.DateType@653c9e15
Adding type registration time -> org.hibernate.type.TimeType@6f4ddf85
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6f4ddf85
Adding type registration timestamp -> org.hibernate.type.TimestampType@71b98f30
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@71b98f30
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@71b98f30
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@60dcf7d1
Adding type registration calendar -> org.hibernate.type.CalendarType@2e3deccd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2e3deccd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2e3deccd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@baffd6e
Adding type registration locale -> org.hibernate.type.LocaleType@2f15d51f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f15d51f
Adding type registration currency -> org.hibernate.type.CurrencyType@3654b4f3
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3654b4f3
Adding type registration timezone -> org.hibernate.type.TimeZoneType@e340c8d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@e340c8d
Adding type registration class -> org.hibernate.type.ClassType@609f2870
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@609f2870
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@731c228f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@731c228f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@21654314
Adding type registration binary -> org.hibernate.type.BinaryType@1b5da080
Adding type registration byte[] -> org.hibernate.type.BinaryType@1b5da080
Adding type registration [B -> org.hibernate.type.BinaryType@1b5da080
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@249bab3
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@249bab3
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@249bab3
Adding type registration row_version -> org.hibernate.type.RowVersionType@37b36962
Adding type registration image -> org.hibernate.type.ImageType@2fb247da
Adding type registration characters -> org.hibernate.type.CharArrayType@2baac789
Adding type registration char[] -> org.hibernate.type.CharArrayType@2baac789
Adding type registration [C -> org.hibernate.type.CharArrayType@2baac789
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bad0361
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bad0361
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bad0361
Adding type registration text -> org.hibernate.type.TextType@719d3381
Adding type registration ntext -> org.hibernate.type.NTextType@5c996376
Adding type registration blob -> org.hibernate.type.BlobType@4e4e8f8d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4e4e8f8d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@48aeb202
Adding type registration clob -> org.hibernate.type.ClobType@67bc0f9c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@67bc0f9c
Adding type registration nclob -> org.hibernate.type.NClobType@44776ab7
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@44776ab7
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@244b52c
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19b72876
Adding type registration serializable -> org.hibernate.type.SerializableType@5d83fa0d
Adding type registration object -> org.hibernate.type.ObjectType@6fc52862
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6fc52862
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42634e21
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@423e837
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a32f00f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f4bd61c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@57819392
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4cf8ab05
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@51d7981d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@fd4f0d
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root  '@'localhost' (using password: YES)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 12432 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@43b790f9: startup date [Sat Nov 04 13:58:37 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4d2f9f9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2908 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$b6b603ba.CGLIB$jpaVendorAdapter$9(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$b6b603ba$$FastClassBySpringCGLIB$$99ad1be8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$b6b603ba.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at sw.Application.main(Application.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2253)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2284)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2083)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:806)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:410)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:328)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 67 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@915e5b9
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@5cea5e64{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test ; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.College
		sw.entity.Grade]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@96cb1a4
Adding type registration boolean -> org.hibernate.type.BooleanType@96cb1a4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@96cb1a4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5b71ac4e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b2a85ee
Adding type registration yes_no -> org.hibernate.type.YesNoType@22710e40
Adding type registration byte -> org.hibernate.type.ByteType@7ce2c8c
Adding type registration byte -> org.hibernate.type.ByteType@7ce2c8c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ce2c8c
Adding type registration character -> org.hibernate.type.CharacterType@5016a660
Adding type registration char -> org.hibernate.type.CharacterType@5016a660
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5016a660
Adding type registration short -> org.hibernate.type.ShortType@f1f29dd
Adding type registration short -> org.hibernate.type.ShortType@f1f29dd
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@f1f29dd
Adding type registration integer -> org.hibernate.type.IntegerType@2a6e7c75
Adding type registration int -> org.hibernate.type.IntegerType@2a6e7c75
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a6e7c75
Adding type registration long -> org.hibernate.type.LongType@54611966
Adding type registration long -> org.hibernate.type.LongType@54611966
Adding type registration java.lang.Long -> org.hibernate.type.LongType@54611966
Adding type registration float -> org.hibernate.type.FloatType@63b8c5b7
Adding type registration float -> org.hibernate.type.FloatType@63b8c5b7
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@63b8c5b7
Adding type registration double -> org.hibernate.type.DoubleType@13acdcc
Adding type registration double -> org.hibernate.type.DoubleType@13acdcc
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13acdcc
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@475fadb5
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@475fadb5
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77d75685
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77d75685
Adding type registration string -> org.hibernate.type.StringType@3795da9b
Adding type registration java.lang.String -> org.hibernate.type.StringType@3795da9b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e3318f6
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c10eb10
Adding type registration url -> org.hibernate.type.UrlType@449df240
Adding type registration java.net.URL -> org.hibernate.type.UrlType@449df240
Adding type registration date -> org.hibernate.type.DateType@5e30bbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e30bbbd
Adding type registration time -> org.hibernate.type.TimeType@283f882c
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@283f882c
Adding type registration timestamp -> org.hibernate.type.TimestampType@742272f1
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@742272f1
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@742272f1
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46b83d80
Adding type registration calendar -> org.hibernate.type.CalendarType@6733081d
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6733081d
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6733081d
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@65b6b133
Adding type registration locale -> org.hibernate.type.LocaleType@51a1e803
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51a1e803
Adding type registration currency -> org.hibernate.type.CurrencyType@7fe237c4
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fe237c4
Adding type registration timezone -> org.hibernate.type.TimeZoneType@104a621b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@104a621b
Adding type registration class -> org.hibernate.type.ClassType@7d306681
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d306681
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1916b220
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1916b220
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c42c0fc
Adding type registration binary -> org.hibernate.type.BinaryType@37ebd0b7
Adding type registration byte[] -> org.hibernate.type.BinaryType@37ebd0b7
Adding type registration [B -> org.hibernate.type.BinaryType@37ebd0b7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@20aa2253
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@20aa2253
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@20aa2253
Adding type registration row_version -> org.hibernate.type.RowVersionType@3aaf172f
Adding type registration image -> org.hibernate.type.ImageType@6eaec88d
Adding type registration characters -> org.hibernate.type.CharArrayType@4670654b
Adding type registration char[] -> org.hibernate.type.CharArrayType@4670654b
Adding type registration [C -> org.hibernate.type.CharArrayType@4670654b
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@70398354
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@70398354
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@70398354
Adding type registration text -> org.hibernate.type.TextType@2da2938a
Adding type registration ntext -> org.hibernate.type.NTextType@1774c68b
Adding type registration blob -> org.hibernate.type.BlobType@6789cb7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6789cb7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4c1b015d
Adding type registration clob -> org.hibernate.type.ClobType@61968449
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61968449
Adding type registration nclob -> org.hibernate.type.NClobType@721e0508
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@721e0508
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b58c876
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24e45d7f
Adding type registration serializable -> org.hibernate.type.SerializableType@3a3508bb
Adding type registration object -> org.hibernate.type.ObjectType@78836198
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78836198
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@148a210e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@77e61da6
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dfb5420
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@389644df
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7dd18092
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a9da9a3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d00a084
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77bab347
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root  '@'localhost' (using password: YES)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 5640 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 14:06:13 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba9273bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2973 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$2418d7dc.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$2418d7dc$$FastClassBySpringCGLIB$$623ea6b9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$2418d7dc.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at sw.Application.main(Application.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2253)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2284)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2083)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:806)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:410)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:328)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 67 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7a0ba4d5{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test ; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@5f34eb49
Adding type registration boolean -> org.hibernate.type.BooleanType@5f34eb49
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f34eb49
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f3255eb
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4831f5a2
Adding type registration yes_no -> org.hibernate.type.YesNoType@14fd4273
Adding type registration byte -> org.hibernate.type.ByteType@5f0407e4
Adding type registration byte -> org.hibernate.type.ByteType@5f0407e4
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f0407e4
Adding type registration character -> org.hibernate.type.CharacterType@2d6ac73e
Adding type registration char -> org.hibernate.type.CharacterType@2d6ac73e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2d6ac73e
Adding type registration short -> org.hibernate.type.ShortType@6bfaad50
Adding type registration short -> org.hibernate.type.ShortType@6bfaad50
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6bfaad50
Adding type registration integer -> org.hibernate.type.IntegerType@648d332
Adding type registration int -> org.hibernate.type.IntegerType@648d332
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@648d332
Adding type registration long -> org.hibernate.type.LongType@52f4579a
Adding type registration long -> org.hibernate.type.LongType@52f4579a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@52f4579a
Adding type registration float -> org.hibernate.type.FloatType@6cd740e5
Adding type registration float -> org.hibernate.type.FloatType@6cd740e5
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6cd740e5
Adding type registration double -> org.hibernate.type.DoubleType@6cce1bfa
Adding type registration double -> org.hibernate.type.DoubleType@6cce1bfa
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6cce1bfa
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@63e48d43
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@63e48d43
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8d3d0c2
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8d3d0c2
Adding type registration string -> org.hibernate.type.StringType@70238d93
Adding type registration java.lang.String -> org.hibernate.type.StringType@70238d93
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e7fde50
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4e0d754b
Adding type registration url -> org.hibernate.type.UrlType@48c8146f
Adding type registration java.net.URL -> org.hibernate.type.UrlType@48c8146f
Adding type registration date -> org.hibernate.type.DateType@112ee8ab
Adding type registration java.sql.Date -> org.hibernate.type.DateType@112ee8ab
Adding type registration time -> org.hibernate.type.TimeType@29f47718
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29f47718
Adding type registration timestamp -> org.hibernate.type.TimestampType@d9d7a74
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d9d7a74
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d9d7a74
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f59d16a
Adding type registration calendar -> org.hibernate.type.CalendarType@78e87071
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78e87071
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78e87071
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@55c17d55
Adding type registration locale -> org.hibernate.type.LocaleType@2d2cfd0
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d2cfd0
Adding type registration currency -> org.hibernate.type.CurrencyType@28cb36a7
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28cb36a7
Adding type registration timezone -> org.hibernate.type.TimeZoneType@58fb9357
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@58fb9357
Adding type registration class -> org.hibernate.type.ClassType@54776cd0
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54776cd0
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f1fb247
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f1fb247
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@143c3c16
Adding type registration binary -> org.hibernate.type.BinaryType@c60a55
Adding type registration byte[] -> org.hibernate.type.BinaryType@c60a55
Adding type registration [B -> org.hibernate.type.BinaryType@c60a55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ce69b83
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ce69b83
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ce69b83
Adding type registration row_version -> org.hibernate.type.RowVersionType@781dfac8
Adding type registration image -> org.hibernate.type.ImageType@495b8f89
Adding type registration characters -> org.hibernate.type.CharArrayType@a0c43db
Adding type registration char[] -> org.hibernate.type.CharArrayType@a0c43db
Adding type registration [C -> org.hibernate.type.CharArrayType@a0c43db
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@684e75b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@684e75b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@684e75b
Adding type registration text -> org.hibernate.type.TextType@4578727c
Adding type registration ntext -> org.hibernate.type.NTextType@237ac717
Adding type registration blob -> org.hibernate.type.BlobType@34074820
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@34074820
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4af04d9b
Adding type registration clob -> org.hibernate.type.ClobType@74bc90cf
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@74bc90cf
Adding type registration nclob -> org.hibernate.type.NClobType@48917e29
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48917e29
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@35eff963
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7959ecea
Adding type registration serializable -> org.hibernate.type.SerializableType@6f89aec8
Adding type registration object -> org.hibernate.type.ObjectType@649b1c52
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@649b1c52
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@38ec36fa
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a9d439
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4cb28f40
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29eefe74
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@706c4655
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3aae4c7d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0ce7
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c7d438a
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root  '@'localhost' (using password: YES)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 6220 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 14:09:22 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$968e961a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2972 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$14fa3a.CGLIB$jpaVendorAdapter$10(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$14fa3a$$FastClassBySpringCGLIB$$7e17b3ea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$14fa3a.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at sw.Application.main(Application.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2253)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2284)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2083)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:806)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:410)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:328)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 67 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@90f959f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@285c61{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test ; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2a7847c
Adding type registration boolean -> org.hibernate.type.BooleanType@2a7847c
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a7847c
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb27aba
Adding type registration true_false -> org.hibernate.type.TrueFalseType@357aced5
Adding type registration yes_no -> org.hibernate.type.YesNoType@73e62103
Adding type registration byte -> org.hibernate.type.ByteType@1c9b3754
Adding type registration byte -> org.hibernate.type.ByteType@1c9b3754
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1c9b3754
Adding type registration character -> org.hibernate.type.CharacterType@314342c7
Adding type registration char -> org.hibernate.type.CharacterType@314342c7
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@314342c7
Adding type registration short -> org.hibernate.type.ShortType@70a0f4be
Adding type registration short -> org.hibernate.type.ShortType@70a0f4be
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@70a0f4be
Adding type registration integer -> org.hibernate.type.IntegerType@52624fb6
Adding type registration int -> org.hibernate.type.IntegerType@52624fb6
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52624fb6
Adding type registration long -> org.hibernate.type.LongType@342b869b
Adding type registration long -> org.hibernate.type.LongType@342b869b
Adding type registration java.lang.Long -> org.hibernate.type.LongType@342b869b
Adding type registration float -> org.hibernate.type.FloatType@74a8322e
Adding type registration float -> org.hibernate.type.FloatType@74a8322e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74a8322e
Adding type registration double -> org.hibernate.type.DoubleType@6febd4d3
Adding type registration double -> org.hibernate.type.DoubleType@6febd4d3
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6febd4d3
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@29c73767
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@29c73767
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13f55ba7
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13f55ba7
Adding type registration string -> org.hibernate.type.StringType@66bbe90b
Adding type registration java.lang.String -> org.hibernate.type.StringType@66bbe90b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@536e7609
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f554a55
Adding type registration url -> org.hibernate.type.UrlType@5e749895
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e749895
Adding type registration date -> org.hibernate.type.DateType@713264d3
Adding type registration java.sql.Date -> org.hibernate.type.DateType@713264d3
Adding type registration time -> org.hibernate.type.TimeType@68dde0eb
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68dde0eb
Adding type registration timestamp -> org.hibernate.type.TimestampType@30c75ce
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@30c75ce
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@30c75ce
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8394b37
Adding type registration calendar -> org.hibernate.type.CalendarType@6ddb3de4
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6ddb3de4
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6ddb3de4
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60f47baa
Adding type registration locale -> org.hibernate.type.LocaleType@54c1b057
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@54c1b057
Adding type registration currency -> org.hibernate.type.CurrencyType@f2aeae0
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f2aeae0
Adding type registration timezone -> org.hibernate.type.TimeZoneType@77ae258a
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77ae258a
Adding type registration class -> org.hibernate.type.ClassType@6c0415d3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c0415d3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6fbfbeb2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6fbfbeb2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3578c53a
Adding type registration binary -> org.hibernate.type.BinaryType@b64f3b4
Adding type registration byte[] -> org.hibernate.type.BinaryType@b64f3b4
Adding type registration [B -> org.hibernate.type.BinaryType@b64f3b4
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53cec4db
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53cec4db
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53cec4db
Adding type registration row_version -> org.hibernate.type.RowVersionType@37e0e917
Adding type registration image -> org.hibernate.type.ImageType@7f308f0
Adding type registration characters -> org.hibernate.type.CharArrayType@7bed76da
Adding type registration char[] -> org.hibernate.type.CharArrayType@7bed76da
Adding type registration [C -> org.hibernate.type.CharArrayType@7bed76da
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@39a1819d
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@39a1819d
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@39a1819d
Adding type registration text -> org.hibernate.type.TextType@11a1c7bc
Adding type registration ntext -> org.hibernate.type.NTextType@43bf3806
Adding type registration blob -> org.hibernate.type.BlobType@7c37ddd7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7c37ddd7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f436880
Adding type registration clob -> org.hibernate.type.ClobType@5a063381
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a063381
Adding type registration nclob -> org.hibernate.type.NClobType@c88b6d4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c88b6d4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71bf5c82
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@29aa60f7
Adding type registration serializable -> org.hibernate.type.SerializableType@7cf7071d
Adding type registration object -> org.hibernate.type.ObjectType@786fec81
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@786fec81
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@77cd2d96
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@70c1cc0a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3360bab1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@b7aa754
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15c58a30
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6b1aa51e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5d193ffe
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@307730e
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root  '@'localhost' (using password: YES)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 10496 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 14:10:18 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$daa5783f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2856 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$442bdc5f.CGLIB$jpaVendorAdapter$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$442bdc5f$$FastClassBySpringCGLIB$$360653be.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$442bdc5f.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at sw.Application.main(Application.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2253)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2284)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2083)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:806)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:410)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:328)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 67 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@42ef0f90
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@e8d5c1c{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test ; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@5bff49d8
Adding type registration boolean -> org.hibernate.type.BooleanType@5bff49d8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5bff49d8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4a46878f
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2ecc1a1b
Adding type registration yes_no -> org.hibernate.type.YesNoType@1d9bda8a
Adding type registration byte -> org.hibernate.type.ByteType@4865109f
Adding type registration byte -> org.hibernate.type.ByteType@4865109f
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4865109f
Adding type registration character -> org.hibernate.type.CharacterType@5d9f9d59
Adding type registration char -> org.hibernate.type.CharacterType@5d9f9d59
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5d9f9d59
Adding type registration short -> org.hibernate.type.ShortType@70486579
Adding type registration short -> org.hibernate.type.ShortType@70486579
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@70486579
Adding type registration integer -> org.hibernate.type.IntegerType@3bac4dd8
Adding type registration int -> org.hibernate.type.IntegerType@3bac4dd8
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3bac4dd8
Adding type registration long -> org.hibernate.type.LongType@7e55a5e7
Adding type registration long -> org.hibernate.type.LongType@7e55a5e7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e55a5e7
Adding type registration float -> org.hibernate.type.FloatType@6e82373b
Adding type registration float -> org.hibernate.type.FloatType@6e82373b
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e82373b
Adding type registration double -> org.hibernate.type.DoubleType@5ee25648
Adding type registration double -> org.hibernate.type.DoubleType@5ee25648
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ee25648
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5eeb97c0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5eeb97c0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@54bad12d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@54bad12d
Adding type registration string -> org.hibernate.type.StringType@3fadc22
Adding type registration java.lang.String -> org.hibernate.type.StringType@3fadc22
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@56937140
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fef92fe
Adding type registration url -> org.hibernate.type.UrlType@3862438b
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3862438b
Adding type registration date -> org.hibernate.type.DateType@44148942
Adding type registration java.sql.Date -> org.hibernate.type.DateType@44148942
Adding type registration time -> org.hibernate.type.TimeType@2de693ef
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2de693ef
Adding type registration timestamp -> org.hibernate.type.TimestampType@7e857fbc
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e857fbc
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e857fbc
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f3fbc40
Adding type registration calendar -> org.hibernate.type.CalendarType@22003e6d
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@22003e6d
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@22003e6d
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ff69ca3
Adding type registration locale -> org.hibernate.type.LocaleType@7b623863
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b623863
Adding type registration currency -> org.hibernate.type.CurrencyType@1260cf38
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1260cf38
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1878aac5
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1878aac5
Adding type registration class -> org.hibernate.type.ClassType@4051eaf4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4051eaf4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c0ce30c
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c0ce30c
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@16e78729
Adding type registration binary -> org.hibernate.type.BinaryType@64e6558e
Adding type registration byte[] -> org.hibernate.type.BinaryType@64e6558e
Adding type registration [B -> org.hibernate.type.BinaryType@64e6558e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56b9ed05
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56b9ed05
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56b9ed05
Adding type registration row_version -> org.hibernate.type.RowVersionType@445f26b5
Adding type registration image -> org.hibernate.type.ImageType@563269ac
Adding type registration characters -> org.hibernate.type.CharArrayType@5d91ed24
Adding type registration char[] -> org.hibernate.type.CharArrayType@5d91ed24
Adding type registration [C -> org.hibernate.type.CharArrayType@5d91ed24
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4107e8c2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4107e8c2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4107e8c2
Adding type registration text -> org.hibernate.type.TextType@711d55e7
Adding type registration ntext -> org.hibernate.type.NTextType@9b7dc7
Adding type registration blob -> org.hibernate.type.BlobType@27821648
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@27821648
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a024e0f
Adding type registration clob -> org.hibernate.type.ClobType@7e49e45d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e49e45d
Adding type registration nclob -> org.hibernate.type.NClobType@57efc9db
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@57efc9db
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@462dfa43
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74b3177
Adding type registration serializable -> org.hibernate.type.SerializableType@58ba3efd
Adding type registration object -> org.hibernate.type.ObjectType@1b308014
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b308014
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28406833
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@376f6d0f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e37273
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4cfafa45
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67500219
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b9b0ce9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30f09303
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2b436f8a
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root  '@'localhost' (using password: YES)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 11012 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Sat Nov 04 14:11:22 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8c03468d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2890 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$f589aaad.CGLIB$jpaVendorAdapter$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$f589aaad$$FastClassBySpringCGLIB$$bce14351.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$f589aaad.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at sw.Application.main(Application.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 66 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root  '@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2253)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2284)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2083)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:806)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:410)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:328)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 67 common frames omitted
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@520028c2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@42899114{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8; username=root  ; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@79cf5f24
Adding type registration boolean -> org.hibernate.type.BooleanType@79cf5f24
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79cf5f24
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50bd4d33
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5283d48c
Adding type registration yes_no -> org.hibernate.type.YesNoType@753f19ad
Adding type registration byte -> org.hibernate.type.ByteType@3bea5444
Adding type registration byte -> org.hibernate.type.ByteType@3bea5444
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3bea5444
Adding type registration character -> org.hibernate.type.CharacterType@6aa8ec0b
Adding type registration char -> org.hibernate.type.CharacterType@6aa8ec0b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6aa8ec0b
Adding type registration short -> org.hibernate.type.ShortType@6ba8c7b5
Adding type registration short -> org.hibernate.type.ShortType@6ba8c7b5
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ba8c7b5
Adding type registration integer -> org.hibernate.type.IntegerType@56f23552
Adding type registration int -> org.hibernate.type.IntegerType@56f23552
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56f23552
Adding type registration long -> org.hibernate.type.LongType@38096b97
Adding type registration long -> org.hibernate.type.LongType@38096b97
Adding type registration java.lang.Long -> org.hibernate.type.LongType@38096b97
Adding type registration float -> org.hibernate.type.FloatType@4cda56b0
Adding type registration float -> org.hibernate.type.FloatType@4cda56b0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4cda56b0
Adding type registration double -> org.hibernate.type.DoubleType@370507bf
Adding type registration double -> org.hibernate.type.DoubleType@370507bf
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@370507bf
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30827969
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30827969
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ba6baa4
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ba6baa4
Adding type registration string -> org.hibernate.type.StringType@62fcafa9
Adding type registration java.lang.String -> org.hibernate.type.StringType@62fcafa9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@17e8897c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7e7091ef
Adding type registration url -> org.hibernate.type.UrlType@59334eef
Adding type registration java.net.URL -> org.hibernate.type.UrlType@59334eef
Adding type registration date -> org.hibernate.type.DateType@3d60180e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3d60180e
Adding type registration time -> org.hibernate.type.TimeType@2a43956f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a43956f
Adding type registration timestamp -> org.hibernate.type.TimestampType@25a759ff
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25a759ff
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25a759ff
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@550bb86e
Adding type registration calendar -> org.hibernate.type.CalendarType@543d28ea
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@543d28ea
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@543d28ea
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6e5ca4d9
Adding type registration locale -> org.hibernate.type.LocaleType@3ba45137
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3ba45137
Adding type registration currency -> org.hibernate.type.CurrencyType@71b9e5b2
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@71b9e5b2
Adding type registration timezone -> org.hibernate.type.TimeZoneType@14d3a8d6
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@14d3a8d6
Adding type registration class -> org.hibernate.type.ClassType@eaa0d8a
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@eaa0d8a
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7720f713
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7720f713
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3e1817a9
Adding type registration binary -> org.hibernate.type.BinaryType@2d8c1126
Adding type registration byte[] -> org.hibernate.type.BinaryType@2d8c1126
Adding type registration [B -> org.hibernate.type.BinaryType@2d8c1126
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@547d7b65
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@547d7b65
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@547d7b65
Adding type registration row_version -> org.hibernate.type.RowVersionType@4e58f050
Adding type registration image -> org.hibernate.type.ImageType@19d38e65
Adding type registration characters -> org.hibernate.type.CharArrayType@15d6ef68
Adding type registration char[] -> org.hibernate.type.CharArrayType@15d6ef68
Adding type registration [C -> org.hibernate.type.CharArrayType@15d6ef68
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@46bbabbd
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@46bbabbd
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@46bbabbd
Adding type registration text -> org.hibernate.type.TextType@52acef57
Adding type registration ntext -> org.hibernate.type.NTextType@63c24a59
Adding type registration blob -> org.hibernate.type.BlobType@46eb4d0d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46eb4d0d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d0be767
Adding type registration clob -> org.hibernate.type.ClobType@279f6c8b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@279f6c8b
Adding type registration nclob -> org.hibernate.type.NClobType@6daa6a8f
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6daa6a8f
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@658cd131
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@197e7133
Adding type registration serializable -> org.hibernate.type.SerializableType@6a4abf30
Adding type registration object -> org.hibernate.type.ObjectType@5c5953ff
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5c5953ff
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ce313a2
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2a33796a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d8eba2f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@77538e74
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5309ed3f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6240261d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a67b7b8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@712cbaae
HHH000342: Could not obtain connection to query metadata : Access denied for user 'root  '@'localhost' (using password: YES)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 14588 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Sat Nov 04 14:12:53 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$257c65c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2853 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Tomcat.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.tomcat.jdbc.pool.DataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Cannot determine embedded database driver class for database type NONE. If you want an embedded database please put a supported one on the classpath. If you have database settings to be loaded from a particular profile you may need to active it (no profiles are currently active).


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 7520 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Sat Nov 04 14:13:55 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$744b4c47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2992 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Tomcat.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.tomcat.jdbc.pool.DataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Cannot determine embedded database driver class for database type NONE. If you want an embedded database please put a supported one on the classpath. If you have database settings to be loaded from a particular profile you may need to active it (no profiles are currently active).


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 12488 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 14:16:42 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c2c8e2a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3095 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@90f959f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@4f406e48{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@4bb318a5
Adding type registration boolean -> org.hibernate.type.BooleanType@4bb318a5
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4bb318a5
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c3ad0a5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@77228518
Adding type registration yes_no -> org.hibernate.type.YesNoType@22fc3d2b
Adding type registration byte -> org.hibernate.type.ByteType@363221a8
Adding type registration byte -> org.hibernate.type.ByteType@363221a8
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@363221a8
Adding type registration character -> org.hibernate.type.CharacterType@48a9de3d
Adding type registration char -> org.hibernate.type.CharacterType@48a9de3d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48a9de3d
Adding type registration short -> org.hibernate.type.ShortType@74a8322e
Adding type registration short -> org.hibernate.type.ShortType@74a8322e
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@74a8322e
Adding type registration integer -> org.hibernate.type.IntegerType@5dfe1bde
Adding type registration int -> org.hibernate.type.IntegerType@5dfe1bde
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5dfe1bde
Adding type registration long -> org.hibernate.type.LongType@6d2f717f
Adding type registration long -> org.hibernate.type.LongType@6d2f717f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@6d2f717f
Adding type registration float -> org.hibernate.type.FloatType@13f55ba7
Adding type registration float -> org.hibernate.type.FloatType@13f55ba7
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@13f55ba7
Adding type registration double -> org.hibernate.type.DoubleType@561f9ab7
Adding type registration double -> org.hibernate.type.DoubleType@561f9ab7
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@561f9ab7
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e3393cc
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e3393cc
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c1c4192
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c1c4192
Adding type registration string -> org.hibernate.type.StringType@2613d6f6
Adding type registration java.lang.String -> org.hibernate.type.StringType@2613d6f6
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@42472430
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68dde0eb
Adding type registration url -> org.hibernate.type.UrlType@657c24dd
Adding type registration java.net.URL -> org.hibernate.type.UrlType@657c24dd
Adding type registration date -> org.hibernate.type.DateType@5af88765
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5af88765
Adding type registration time -> org.hibernate.type.TimeType@615b1ad0
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@615b1ad0
Adding type registration timestamp -> org.hibernate.type.TimestampType@f2aeae0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f2aeae0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f2aeae0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55a18d7e
Adding type registration calendar -> org.hibernate.type.CalendarType@395f731b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@395f731b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@395f731b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b7929dd
Adding type registration locale -> org.hibernate.type.LocaleType@7fced918
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7fced918
Adding type registration currency -> org.hibernate.type.CurrencyType@1930f866
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1930f866
Adding type registration timezone -> org.hibernate.type.TimeZoneType@295e1169
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@295e1169
Adding type registration class -> org.hibernate.type.ClassType@9be704b
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9be704b
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@63aba78
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@63aba78
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@72c27086
Adding type registration binary -> org.hibernate.type.BinaryType@1d1de266
Adding type registration byte[] -> org.hibernate.type.BinaryType@1d1de266
Adding type registration [B -> org.hibernate.type.BinaryType@1d1de266
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@569d6609
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@569d6609
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@569d6609
Adding type registration row_version -> org.hibernate.type.RowVersionType@1085eac6
Adding type registration image -> org.hibernate.type.ImageType@7e46956c
Adding type registration characters -> org.hibernate.type.CharArrayType@45ef6ff5
Adding type registration char[] -> org.hibernate.type.CharArrayType@45ef6ff5
Adding type registration [C -> org.hibernate.type.CharArrayType@45ef6ff5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1969efa
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1969efa
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1969efa
Adding type registration text -> org.hibernate.type.TextType@1162d68a
Adding type registration ntext -> org.hibernate.type.NTextType@585cffc6
Adding type registration blob -> org.hibernate.type.BlobType@29be507c
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29be507c
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75a9cf56
Adding type registration clob -> org.hibernate.type.ClobType@c88b6d4
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c88b6d4
Adding type registration nclob -> org.hibernate.type.NClobType@2416be86
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2416be86
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23e3e8f7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7df7d2b9
Adding type registration serializable -> org.hibernate.type.SerializableType@b7aa754
Adding type registration object -> org.hibernate.type.ObjectType@45c61e4c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45c61e4c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c8ac0cc
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694b996f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2766eefd
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40a57343
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ae3573b
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f5627e9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f5727f8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4403663a
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property age with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:age]
building SimpleValue for age
Building property age
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for age
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@36b2128b
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6215876932359137391.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12488, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68abe910, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@4f406e48{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6215876932359137391.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@31d4eb36, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.age as age2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (age, name, id) values (?, ?, ?)
 Update 0: update user set age=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (age, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc4f148]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@516cc471]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ee1470]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b7fe41b]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65b0e9fc]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12eaa8d3]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d12f221]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52995c35]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fd14000]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d3bfc7]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1590ccdc]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@79db8b79
Registering SessionFactory: 8053909a-f643-4e62-9bca-ccfe5eb2ea8b (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4ed73afe
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 14:16:42 CST 2017]; root of context hierarchy
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.288 seconds (JVM running for 8.866)
Starting Application on LuoRong with PID 13112 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Starting Application on LuoRong with PID 14672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Sat Nov 04 14:17:23 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5964772] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3022 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1b62dc8b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7f01d602{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7c44e67a
Adding type registration boolean -> org.hibernate.type.BooleanType@7c44e67a
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c44e67a
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f61fdf2
Adding type registration true_false -> org.hibernate.type.TrueFalseType@7dbfd96a
Adding type registration yes_no -> org.hibernate.type.YesNoType@5c9b2315
Adding type registration byte -> org.hibernate.type.ByteType@38b54fd0
Adding type registration byte -> org.hibernate.type.ByteType@38b54fd0
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38b54fd0
Adding type registration character -> org.hibernate.type.CharacterType@4235c549
Adding type registration char -> org.hibernate.type.CharacterType@4235c549
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4235c549
Adding type registration short -> org.hibernate.type.ShortType@58c5a601
Adding type registration short -> org.hibernate.type.ShortType@58c5a601
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58c5a601
Adding type registration integer -> org.hibernate.type.IntegerType@6620fd27
Adding type registration int -> org.hibernate.type.IntegerType@6620fd27
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6620fd27
Adding type registration long -> org.hibernate.type.LongType@3d52cd11
Adding type registration long -> org.hibernate.type.LongType@3d52cd11
Adding type registration java.lang.Long -> org.hibernate.type.LongType@3d52cd11
Adding type registration float -> org.hibernate.type.FloatType@5d11f346
Adding type registration float -> org.hibernate.type.FloatType@5d11f346
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d11f346
Adding type registration double -> org.hibernate.type.DoubleType@11d84889
Adding type registration double -> org.hibernate.type.DoubleType@11d84889
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@11d84889
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4e8d54f5
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4e8d54f5
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7e0cf69d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7e0cf69d
Adding type registration string -> org.hibernate.type.StringType@77326ffd
Adding type registration java.lang.String -> org.hibernate.type.StringType@77326ffd
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@550ddf15
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@30589283
Adding type registration url -> org.hibernate.type.UrlType@221c1dfe
Adding type registration java.net.URL -> org.hibernate.type.UrlType@221c1dfe
Adding type registration date -> org.hibernate.type.DateType@33fa5039
Adding type registration java.sql.Date -> org.hibernate.type.DateType@33fa5039
Adding type registration time -> org.hibernate.type.TimeType@7156dd61
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7156dd61
Adding type registration timestamp -> org.hibernate.type.TimestampType@67266c47
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@67266c47
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@67266c47
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f638072
Adding type registration calendar -> org.hibernate.type.CalendarType@cd3510d
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cd3510d
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cd3510d
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eb730d7
Adding type registration locale -> org.hibernate.type.LocaleType@24cfc68d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24cfc68d
Adding type registration currency -> org.hibernate.type.CurrencyType@66e4ffd0
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66e4ffd0
Adding type registration timezone -> org.hibernate.type.TimeZoneType@72e41747
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@72e41747
Adding type registration class -> org.hibernate.type.ClassType@3c00ca31
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c00ca31
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29796a31
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29796a31
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ca7624c
Adding type registration binary -> org.hibernate.type.BinaryType@5457ac59
Adding type registration byte[] -> org.hibernate.type.BinaryType@5457ac59
Adding type registration [B -> org.hibernate.type.BinaryType@5457ac59
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f0fbabe
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f0fbabe
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f0fbabe
Adding type registration row_version -> org.hibernate.type.RowVersionType@2798c5a9
Adding type registration image -> org.hibernate.type.ImageType@1354bc26
Adding type registration characters -> org.hibernate.type.CharArrayType@74a083c
Adding type registration char[] -> org.hibernate.type.CharArrayType@74a083c
Adding type registration [C -> org.hibernate.type.CharArrayType@74a083c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57c5a5f5
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57c5a5f5
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57c5a5f5
Adding type registration text -> org.hibernate.type.TextType@5e4defd7
Adding type registration ntext -> org.hibernate.type.NTextType@5cde4cda
Adding type registration blob -> org.hibernate.type.BlobType@613d4b0d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@613d4b0d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@517a0dd5
Adding type registration clob -> org.hibernate.type.ClobType@4ed4816
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4ed4816
Adding type registration nclob -> org.hibernate.type.NClobType@4fcd0d46
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fcd0d46
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@655ba990
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@638def54
Adding type registration serializable -> org.hibernate.type.SerializableType@98098c
Adding type registration object -> org.hibernate.type.ObjectType@6d1d38b9
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d1d38b9
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19d14697
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d0d7de4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4686a51e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7052e572
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63a4f011
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15b043dc
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@666daa21
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f3baeb
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property age with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:age]
building SimpleValue for age
Building property age
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for age
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@76667fbe
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7300506602262103884.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ef3eba3, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@7f01d602{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7300506602262103884.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7bdc8098, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.age as age2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (age, name, id) values (?, ?, ?)
 Update 0: update user set age=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (age, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@586dad10]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fdf3050]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2779b448]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75b93b44]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb62633]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@238ee96]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61b64b7f]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26d20fd6]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@356b37b8]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381adae0]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19158fa2]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6450654
Registering SessionFactory: d6ef4e32-0f54-42ff-9be9-10e829ae4449 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@479288dc
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Sat Nov 04 14:17:23 CST 2017]; root of context hierarchy
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.2 seconds (JVM running for 8.787)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Sat Nov 04 14:17:23 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 14672 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac197df: startup date [Sat Nov 04 14:18:57 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5964772] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 980 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@339f30d1
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7f7fff93{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@7c44e67a
Adding type registration boolean -> org.hibernate.type.BooleanType@7c44e67a
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c44e67a
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f61fdf2
Adding type registration true_false -> org.hibernate.type.TrueFalseType@7dbfd96a
Adding type registration yes_no -> org.hibernate.type.YesNoType@5c9b2315
Adding type registration byte -> org.hibernate.type.ByteType@38b54fd0
Adding type registration byte -> org.hibernate.type.ByteType@38b54fd0
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38b54fd0
Adding type registration character -> org.hibernate.type.CharacterType@4235c549
Adding type registration char -> org.hibernate.type.CharacterType@4235c549
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4235c549
Adding type registration short -> org.hibernate.type.ShortType@58c5a601
Adding type registration short -> org.hibernate.type.ShortType@58c5a601
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58c5a601
Adding type registration integer -> org.hibernate.type.IntegerType@6620fd27
Adding type registration int -> org.hibernate.type.IntegerType@6620fd27
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6620fd27
Adding type registration long -> org.hibernate.type.LongType@3d52cd11
Adding type registration long -> org.hibernate.type.LongType@3d52cd11
Adding type registration java.lang.Long -> org.hibernate.type.LongType@3d52cd11
Adding type registration float -> org.hibernate.type.FloatType@5d11f346
Adding type registration float -> org.hibernate.type.FloatType@5d11f346
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d11f346
Adding type registration double -> org.hibernate.type.DoubleType@11d84889
Adding type registration double -> org.hibernate.type.DoubleType@11d84889
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@11d84889
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4e8d54f5
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4e8d54f5
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7e0cf69d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7e0cf69d
Adding type registration string -> org.hibernate.type.StringType@77326ffd
Adding type registration java.lang.String -> org.hibernate.type.StringType@77326ffd
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@550ddf15
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@30589283
Adding type registration url -> org.hibernate.type.UrlType@221c1dfe
Adding type registration java.net.URL -> org.hibernate.type.UrlType@221c1dfe
Adding type registration date -> org.hibernate.type.DateType@33fa5039
Adding type registration java.sql.Date -> org.hibernate.type.DateType@33fa5039
Adding type registration time -> org.hibernate.type.TimeType@7156dd61
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7156dd61
Adding type registration timestamp -> org.hibernate.type.TimestampType@67266c47
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@67266c47
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@67266c47
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f638072
Adding type registration calendar -> org.hibernate.type.CalendarType@cd3510d
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cd3510d
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cd3510d
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eb730d7
Adding type registration locale -> org.hibernate.type.LocaleType@24cfc68d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24cfc68d
Adding type registration currency -> org.hibernate.type.CurrencyType@66e4ffd0
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66e4ffd0
Adding type registration timezone -> org.hibernate.type.TimeZoneType@72e41747
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@72e41747
Adding type registration class -> org.hibernate.type.ClassType@3c00ca31
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c00ca31
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29796a31
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29796a31
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ca7624c
Adding type registration binary -> org.hibernate.type.BinaryType@5457ac59
Adding type registration byte[] -> org.hibernate.type.BinaryType@5457ac59
Adding type registration [B -> org.hibernate.type.BinaryType@5457ac59
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f0fbabe
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f0fbabe
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f0fbabe
Adding type registration row_version -> org.hibernate.type.RowVersionType@2798c5a9
Adding type registration image -> org.hibernate.type.ImageType@1354bc26
Adding type registration characters -> org.hibernate.type.CharArrayType@74a083c
Adding type registration char[] -> org.hibernate.type.CharArrayType@74a083c
Adding type registration [C -> org.hibernate.type.CharArrayType@74a083c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57c5a5f5
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57c5a5f5
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57c5a5f5
Adding type registration text -> org.hibernate.type.TextType@5e4defd7
Adding type registration ntext -> org.hibernate.type.NTextType@5cde4cda
Adding type registration blob -> org.hibernate.type.BlobType@613d4b0d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@613d4b0d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@517a0dd5
Adding type registration clob -> org.hibernate.type.ClobType@4ed4816
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4ed4816
Adding type registration nclob -> org.hibernate.type.NClobType@4fcd0d46
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fcd0d46
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@655ba990
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@638def54
Adding type registration serializable -> org.hibernate.type.SerializableType@98098c
Adding type registration object -> org.hibernate.type.ObjectType@6d1d38b9
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d1d38b9
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1049272f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1f70fb77
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e17a477
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15adc6d0
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c04eb15
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54371aa1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4710384c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3cf0ed38
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property age with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:age]
building SimpleValue for age
Building property age
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for age
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@76667fbe
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7300506602262103884.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14672, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2f8af5da, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@7f7fff93{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7300506602262103884.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1327b452, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.age as age2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (age, name, id) values (?, ?, ?)
 Update 0: update user set age=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (age, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b5d5024]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69f10ce8]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76a7125d]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1716fc8f]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc23aeb]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5449757c]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@449a60f0]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77bf5bcb]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b38c74]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626ddbc1]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@264a647c]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 21f4b3fc-5213-46a1-9625-7d3c017c3c98 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac197df: startup date [Sat Nov 04 14:18:57 CST 2017]; root of context hierarchy
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.241 seconds (JVM running for 98.343)
Starting Application on LuoRong with PID 2700 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 14:19:09 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7f9ed513] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3474 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@75403614{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@5f0407e4
Adding type registration boolean -> org.hibernate.type.BooleanType@5f0407e4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f0407e4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2d6ac73e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6bfaad50
Adding type registration yes_no -> org.hibernate.type.YesNoType@5ddfd13a
Adding type registration byte -> org.hibernate.type.ByteType@81c2119
Adding type registration byte -> org.hibernate.type.ByteType@81c2119
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@81c2119
Adding type registration character -> org.hibernate.type.CharacterType@7a8a60f4
Adding type registration char -> org.hibernate.type.CharacterType@7a8a60f4
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a8a60f4
Adding type registration short -> org.hibernate.type.ShortType@46109fee
Adding type registration short -> org.hibernate.type.ShortType@46109fee
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@46109fee
Adding type registration integer -> org.hibernate.type.IntegerType@707a283
Adding type registration int -> org.hibernate.type.IntegerType@707a283
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@707a283
Adding type registration long -> org.hibernate.type.LongType@c01f5fb
Adding type registration long -> org.hibernate.type.LongType@c01f5fb
Adding type registration java.lang.Long -> org.hibernate.type.LongType@c01f5fb
Adding type registration float -> org.hibernate.type.FloatType@4e2d2714
Adding type registration float -> org.hibernate.type.FloatType@4e2d2714
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e2d2714
Adding type registration double -> org.hibernate.type.DoubleType@43b9e2fd
Adding type registration double -> org.hibernate.type.DoubleType@43b9e2fd
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43b9e2fd
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@363b0611
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@363b0611
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4cd237d9
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4cd237d9
Adding type registration string -> org.hibernate.type.StringType@5e0f3713
Adding type registration java.lang.String -> org.hibernate.type.StringType@5e0f3713
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@458d0df2
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ca31e70
Adding type registration url -> org.hibernate.type.UrlType@7dcbbd9d
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7dcbbd9d
Adding type registration date -> org.hibernate.type.DateType@78e87071
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78e87071
Adding type registration time -> org.hibernate.type.TimeType@63812500
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@63812500
Adding type registration timestamp -> org.hibernate.type.TimestampType@308f4074
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@308f4074
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@308f4074
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@123dfd84
Adding type registration calendar -> org.hibernate.type.CalendarType@73dd6de0
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@73dd6de0
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@73dd6de0
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@492e687d
Adding type registration locale -> org.hibernate.type.LocaleType@504826dd
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@504826dd
Adding type registration currency -> org.hibernate.type.CurrencyType@143c3c16
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@143c3c16
Adding type registration timezone -> org.hibernate.type.TimeZoneType@c60a55
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c60a55
Adding type registration class -> org.hibernate.type.ClassType@3ce69b83
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3ce69b83
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d532415
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d532415
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13137542
Adding type registration binary -> org.hibernate.type.BinaryType@71af2f03
Adding type registration byte[] -> org.hibernate.type.BinaryType@71af2f03
Adding type registration [B -> org.hibernate.type.BinaryType@71af2f03
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48ab158e
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48ab158e
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48ab158e
Adding type registration row_version -> org.hibernate.type.RowVersionType@58c60048
Adding type registration image -> org.hibernate.type.ImageType@652a64a6
Adding type registration characters -> org.hibernate.type.CharArrayType@31319b74
Adding type registration char[] -> org.hibernate.type.CharArrayType@31319b74
Adding type registration [C -> org.hibernate.type.CharArrayType@31319b74
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2cd5d126
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2cd5d126
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2cd5d126
Adding type registration text -> org.hibernate.type.TextType@19d28518
Adding type registration ntext -> org.hibernate.type.NTextType@239749d
Adding type registration blob -> org.hibernate.type.BlobType@61445ff0
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61445ff0
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@71e194c2
Adding type registration clob -> org.hibernate.type.ClobType@52e8c056
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@52e8c056
Adding type registration nclob -> org.hibernate.type.NClobType@37348572
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@37348572
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@771718d7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77f24973
Adding type registration serializable -> org.hibernate.type.SerializableType@706c4655
Adding type registration object -> org.hibernate.type.ObjectType@c21ac95
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c21ac95
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@430272d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f4663a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25eb928b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@971555e
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@cfd0212
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a1e7001
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5398c003
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5040a48b
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property age with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:age]
building SimpleValue for age
Building property age
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for age
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6c0f0964
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5037133636367282467.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=2700, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@209268b5, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@75403614{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5037133636367282467.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5890c0fb, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.age as age2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (age, name, id) values (?, ?, ?)
 Update 0: update user set age=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (age, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5790058f]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205f4352]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fac4f8a]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e03f0a3]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@686b4f04]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e021af5]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dc5ffd1]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57e556e0]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e612bc7]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b5c2a99]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4344c615]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71f5830c
Registering SessionFactory: b877d1f9-4a24-4ceb-b16c-d98166d4d443 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3b80db3e
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 14:19:09 CST 2017]; root of context hierarchy
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.417 seconds (JVM running for 10.091)
Starting Application on LuoRong with PID 6220 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 14:24:35 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba1c2f4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3070 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@90f959f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@46d90945{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@4801f465
Adding type registration boolean -> org.hibernate.type.BooleanType@4801f465
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4801f465
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@70a0f4be
Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7a3d95
Adding type registration yes_no -> org.hibernate.type.YesNoType@61bbb4f
Adding type registration byte -> org.hibernate.type.ByteType@3c640316
Adding type registration byte -> org.hibernate.type.ByteType@3c640316
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3c640316
Adding type registration character -> org.hibernate.type.CharacterType@1d2f20c8
Adding type registration char -> org.hibernate.type.CharacterType@1d2f20c8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d2f20c8
Adding type registration short -> org.hibernate.type.ShortType@4cd195ab
Adding type registration short -> org.hibernate.type.ShortType@4cd195ab
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4cd195ab
Adding type registration integer -> org.hibernate.type.IntegerType@6ec8ffb9
Adding type registration int -> org.hibernate.type.IntegerType@6ec8ffb9
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6ec8ffb9
Adding type registration long -> org.hibernate.type.LongType@4a713790
Adding type registration long -> org.hibernate.type.LongType@4a713790
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4a713790
Adding type registration float -> org.hibernate.type.FloatType@35ffae74
Adding type registration float -> org.hibernate.type.FloatType@35ffae74
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@35ffae74
Adding type registration double -> org.hibernate.type.DoubleType@3f554a55
Adding type registration double -> org.hibernate.type.DoubleType@3f554a55
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f554a55
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44e2acb8
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44e2acb8
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@713264d3
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@713264d3
Adding type registration string -> org.hibernate.type.StringType@71beb933
Adding type registration java.lang.String -> org.hibernate.type.StringType@71beb933
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a835067
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f356bc0
Adding type registration url -> org.hibernate.type.UrlType@18da17ba
Adding type registration java.net.URL -> org.hibernate.type.UrlType@18da17ba
Adding type registration date -> org.hibernate.type.DateType@2231147a
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2231147a
Adding type registration time -> org.hibernate.type.TimeType@5e74849e
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e74849e
Adding type registration timestamp -> org.hibernate.type.TimestampType@395f731b
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@395f731b
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@395f731b
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7b7929dd
Adding type registration calendar -> org.hibernate.type.CalendarType@7fced918
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7fced918
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7fced918
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fbfbeb2
Adding type registration locale -> org.hibernate.type.LocaleType@44916d35
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44916d35
Adding type registration currency -> org.hibernate.type.CurrencyType@7c674dbd
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c674dbd
Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e62becd
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e62becd
Adding type registration class -> org.hibernate.type.ClassType@7d210ca4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d210ca4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d1de266
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d1de266
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4bdd5452
Adding type registration binary -> org.hibernate.type.BinaryType@2c31411d
Adding type registration byte[] -> org.hibernate.type.BinaryType@2c31411d
Adding type registration [B -> org.hibernate.type.BinaryType@2c31411d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c532e90
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c532e90
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c532e90
Adding type registration row_version -> org.hibernate.type.RowVersionType@46bde24c
Adding type registration image -> org.hibernate.type.ImageType@faefbf9
Adding type registration characters -> org.hibernate.type.CharArrayType@6559edcf
Adding type registration char[] -> org.hibernate.type.CharArrayType@6559edcf
Adding type registration [C -> org.hibernate.type.CharArrayType@6559edcf
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7651fd0e
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7651fd0e
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7651fd0e
Adding type registration text -> org.hibernate.type.TextType@3b007b1e
Adding type registration ntext -> org.hibernate.type.NTextType@28adb680
Adding type registration blob -> org.hibernate.type.BlobType@efca2ca
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@efca2ca
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@73bd58f9
Adding type registration clob -> org.hibernate.type.ClobType@591a3ff6
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@591a3ff6
Adding type registration nclob -> org.hibernate.type.NClobType@77cd2d96
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77cd2d96
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b7aa754
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d193ffe
Adding type registration serializable -> org.hibernate.type.SerializableType@28f33ae8
Adding type registration object -> org.hibernate.type.ObjectType@3f5627e9
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f5627e9
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54c9ab0e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5aaea711
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4cd0235b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@133dae4d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ab5f6ff
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@250c5e97
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@680b7b96
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@163aff1c
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property age with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:age]
building SimpleValue for age
Building property age
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for age
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@c53f2ad
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8912758996741261006.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=6220, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@31664b9a, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@46d90945{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8912758996741261006.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@599f7d2, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.age as age2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (age, name, id) values (?, ?, ?)
 Update 0: update user set age=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (age, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ea68d91]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12eaa8d3]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d12f221]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52995c35]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fd14000]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d3bfc7]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1590ccdc]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d6b182]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78e96a02]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e3944b]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@398793d8]
Visiting attribute path : age
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4c4ada94
Registering SessionFactory: 118a3f2a-b84b-4eb0-abe4-c0183454db70 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4510e0a5
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy43
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 14:24:35 CST 2017]; root of context hierarchy
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.097 seconds (JVM running for 8.658)
Starting Application on LuoRong with PID 7612 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 14:29:53 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4ebd3544] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3113 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@90f959f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@148f95f2{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7be5847f
Adding type registration boolean -> org.hibernate.type.BooleanType@7be5847f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7be5847f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@68b21e7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@120f1b90
Adding type registration yes_no -> org.hibernate.type.YesNoType@5e3393cc
Adding type registration byte -> org.hibernate.type.ByteType@3e282bd8
Adding type registration byte -> org.hibernate.type.ByteType@3e282bd8
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e282bd8
Adding type registration character -> org.hibernate.type.CharacterType@8ccaff0
Adding type registration char -> org.hibernate.type.CharacterType@8ccaff0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8ccaff0
Adding type registration short -> org.hibernate.type.ShortType@a236590
Adding type registration short -> org.hibernate.type.ShortType@a236590
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a236590
Adding type registration integer -> org.hibernate.type.IntegerType@4d5e2b64
Adding type registration int -> org.hibernate.type.IntegerType@4d5e2b64
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d5e2b64
Adding type registration long -> org.hibernate.type.LongType@687bfdfb
Adding type registration long -> org.hibernate.type.LongType@687bfdfb
Adding type registration java.lang.Long -> org.hibernate.type.LongType@687bfdfb
Adding type registration float -> org.hibernate.type.FloatType@5701cc35
Adding type registration float -> org.hibernate.type.FloatType@5701cc35
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5701cc35
Adding type registration double -> org.hibernate.type.DoubleType@47eea0cd
Adding type registration double -> org.hibernate.type.DoubleType@47eea0cd
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47eea0cd
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@395f731b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@395f731b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a5ae319
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a5ae319
Adding type registration string -> org.hibernate.type.StringType@235ca30
Adding type registration java.lang.String -> org.hibernate.type.StringType@235ca30
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@27a0b709
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4453cf28
Adding type registration url -> org.hibernate.type.UrlType@158271ba
Adding type registration java.net.URL -> org.hibernate.type.UrlType@158271ba
Adding type registration date -> org.hibernate.type.DateType@7f308f0
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f308f0
Adding type registration time -> org.hibernate.type.TimeType@128fab93
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@128fab93
Adding type registration timestamp -> org.hibernate.type.TimestampType@2c31411d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c31411d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c31411d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@454f116c
Adding type registration calendar -> org.hibernate.type.CalendarType@19ba10d4
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19ba10d4
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19ba10d4
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c9ae202
Adding type registration locale -> org.hibernate.type.LocaleType@3100bd3e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3100bd3e
Adding type registration currency -> org.hibernate.type.CurrencyType@508dded0
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@508dded0
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7100b3c8
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7100b3c8
Adding type registration class -> org.hibernate.type.ClassType@49d0177
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d0177
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@64167c61
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@64167c61
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6f7b6954
Adding type registration binary -> org.hibernate.type.BinaryType@29abe291
Adding type registration byte[] -> org.hibernate.type.BinaryType@29abe291
Adding type registration [B -> org.hibernate.type.BinaryType@29abe291
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@34ce6ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@34ce6ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@34ce6ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@2e4f5c2f
Adding type registration image -> org.hibernate.type.ImageType@d2bb2c1
Adding type registration characters -> org.hibernate.type.CharArrayType@37b067a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@37b067a0
Adding type registration [C -> org.hibernate.type.CharArrayType@37b067a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1024abed
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1024abed
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1024abed
Adding type registration text -> org.hibernate.type.TextType@8637874
Adding type registration ntext -> org.hibernate.type.NTextType@24798cc7
Adding type registration blob -> org.hibernate.type.BlobType@416f29a0
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@416f29a0
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3360bab1
Adding type registration clob -> org.hibernate.type.ClobType@2f5727f8
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f5727f8
Adding type registration nclob -> org.hibernate.type.NClobType@3ae46373
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ae46373
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@323ef4f7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2598097d
Adding type registration serializable -> org.hibernate.type.SerializableType@2b47d543
Adding type registration object -> org.hibernate.type.ObjectType@27c067bf
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27c067bf
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19d19e02
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3d88ef18
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73704010
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@663ffdb1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@730b5efa
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9818fac
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@78803e4c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61cb9698
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5f5cd0c2
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5338278387484792703.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7612, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2599baa1, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@148f95f2{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5338278387484792703.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@26613899, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (email, name, id) values (?, ?, ?)
 Update 0: update user set email=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (email, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a13669]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eee65f4]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13dc99b3]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8080a1f]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c3a849b]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11efe436]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5610985f]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b4323c2]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@515761c6]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3b0efa]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c7e911b]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60776379
Registering SessionFactory: a3bf6c10-f870-41ad-96fe-ee79e4f5ea69 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1353c4c3
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 14:29:53 CST 2017]; root of context hierarchy
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.173 seconds (JVM running for 8.741)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email is null
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@406bdb0b
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from sw.entity.User as generatedAlias0 where generatedAlias0.email is null
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sw'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'email'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.User (generatedAlias0) -> user0_
Resolved : generatedAlias0 -> user0_.id
Resolved : generatedAlias0 -> user0_.id
getDataType() : email -> org.hibernate.type.StringType@235ca30
Resolved : generatedAlias0.email -> user0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( is null ( user0_.email user0_.id email ) ) ) )
Using FROM fragment [user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=sw.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.name as name3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=sw.entity.User,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=sw.entity.User, tableAlias=user0_}
             \-[IDENT] IdentNode: 'email' {originalText=email}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.User as generatedAlias0 where generatedAlias0.email is null
SQL: select user0_.id as id1_0_, user0_.email as email2_0_, user0_.name as name3_0_ from user user0_ where user0_.email is null
throwQueryException() : no errors
select user0_.id as id1_0_, user0_.email as email2_0_, user0_.name as name3_0_ from user user0_ where user0_.email is null
could not extract ResultSet [n/a]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'test.user' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3970)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3906)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2677)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2549)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1962)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:70)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2117)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1900)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1876)
	at org.hibernate.loader.Loader.doQuery(Loader.java:919)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)
	at org.hibernate.loader.Loader.doList(Loader.java:2617)
	at org.hibernate.loader.Loader.doList(Loader.java:2600)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2429)
	at org.hibernate.loader.Loader.list(Loader.java:2424)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1326)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:529)
	at org.hibernate.jpa.criteria.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:54)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:85)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:116)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:106)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:483)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:461)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy78.findByEmail(Unknown Source)
	at sw.controller.UserController.getUserByEmail(UserController.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
SQL Error: 1146, SQLState: 42S02
Mark transaction for rollback
Starting Application on LuoRong with PID 2576 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 14:32:59 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fb869254] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3415 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@64d3a5da{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@32323991
Adding type registration boolean -> org.hibernate.type.BooleanType@32323991
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32323991
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c14cf2e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4df8a070
Adding type registration yes_no -> org.hibernate.type.YesNoType@6cce1bfa
Adding type registration byte -> org.hibernate.type.ByteType@1dafa9d3
Adding type registration byte -> org.hibernate.type.ByteType@1dafa9d3
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1dafa9d3
Adding type registration character -> org.hibernate.type.CharacterType@67ec574e
Adding type registration char -> org.hibernate.type.CharacterType@67ec574e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@67ec574e
Adding type registration short -> org.hibernate.type.ShortType@70238d93
Adding type registration short -> org.hibernate.type.ShortType@70238d93
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@70238d93
Adding type registration integer -> org.hibernate.type.IntegerType@2e7fde50
Adding type registration int -> org.hibernate.type.IntegerType@2e7fde50
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2e7fde50
Adding type registration long -> org.hibernate.type.LongType@363b0611
Adding type registration long -> org.hibernate.type.LongType@363b0611
Adding type registration java.lang.Long -> org.hibernate.type.LongType@363b0611
Adding type registration float -> org.hibernate.type.FloatType@8ca10df
Adding type registration float -> org.hibernate.type.FloatType@8ca10df
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8ca10df
Adding type registration double -> org.hibernate.type.DoubleType@2300ce58
Adding type registration double -> org.hibernate.type.DoubleType@2300ce58
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2300ce58
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7dcbbd9d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7dcbbd9d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@79f1462f
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@79f1462f
Adding type registration string -> org.hibernate.type.StringType@1eccf032
Adding type registration java.lang.String -> org.hibernate.type.StringType@1eccf032
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3df4cc3e
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a248f5c
Adding type registration url -> org.hibernate.type.UrlType@63b2915b
Adding type registration java.net.URL -> org.hibernate.type.UrlType@63b2915b
Adding type registration date -> org.hibernate.type.DateType@492e687d
Adding type registration java.sql.Date -> org.hibernate.type.DateType@492e687d
Adding type registration time -> org.hibernate.type.TimeType@6f1fb247
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6f1fb247
Adding type registration timestamp -> org.hibernate.type.TimestampType@1fb0b936
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1fb0b936
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1fb0b936
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@577d5343
Adding type registration calendar -> org.hibernate.type.CalendarType@3dd24302
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3dd24302
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3dd24302
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@781dfac8
Adding type registration locale -> org.hibernate.type.LocaleType@495b8f89
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@495b8f89
Adding type registration currency -> org.hibernate.type.CurrencyType@a0c43db
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@a0c43db
Adding type registration timezone -> org.hibernate.type.TimeZoneType@684e75b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@684e75b
Adding type registration class -> org.hibernate.type.ClassType@4578727c
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4578727c
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@53a64971
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@53a64971
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31319b74
Adding type registration binary -> org.hibernate.type.BinaryType@2cd5d126
Adding type registration byte[] -> org.hibernate.type.BinaryType@2cd5d126
Adding type registration [B -> org.hibernate.type.BinaryType@2cd5d126
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19d28518
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19d28518
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19d28518
Adding type registration row_version -> org.hibernate.type.RowVersionType@239749d
Adding type registration image -> org.hibernate.type.ImageType@34074820
Adding type registration characters -> org.hibernate.type.CharArrayType@55eb08ba
Adding type registration char[] -> org.hibernate.type.CharArrayType@55eb08ba
Adding type registration [C -> org.hibernate.type.CharArrayType@55eb08ba
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@73ea0e40
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@73ea0e40
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@73ea0e40
Adding type registration text -> org.hibernate.type.TextType@3071812b
Adding type registration ntext -> org.hibernate.type.NTextType@71ee7291
Adding type registration blob -> org.hibernate.type.BlobType@71bed11d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71bed11d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52e8c056
Adding type registration clob -> org.hibernate.type.ClobType@649b1c52
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@649b1c52
Adding type registration nclob -> org.hibernate.type.NClobType@70be7bc
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70be7bc
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5cde0d0d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@25eb928b
Adding type registration serializable -> org.hibernate.type.SerializableType@5040a48b
Adding type registration object -> org.hibernate.type.ObjectType@2f9b4435
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2f9b4435
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d98f1f3
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4857b099
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33d09ee9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6d82a118
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@17efc232
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62497b2e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55d99658
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2dab779a
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c0816fe
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7670298011292456409.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=2576, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@26329f49, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@64d3a5da{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7670298011292456409.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1f433872, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (email, name, id) values (?, ?, ?)
 Update 0: update user set email=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (email, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d9530c]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57d6d460]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@627417d5]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36257f7f]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1204557e]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@568e3bbe]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57fce9df]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50bc7210]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@185aed05]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b19dde4]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e887af2]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@799b35bc
Registering SessionFactory: 8acaa471-2349-4d20-adfe-e888e33b4d27 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@681a7be2
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 14:32:59 CST 2017]; root of context hierarchy
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.158 seconds (JVM running for 9.749)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 59 ms
Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email is null
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1734a61b
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from sw.entity.User as generatedAlias0 where generatedAlias0.email is null
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sw'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'email'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.User (generatedAlias0) -> user0_
Resolved : generatedAlias0 -> user0_.id
Resolved : generatedAlias0 -> user0_.id
getDataType() : email -> org.hibernate.type.StringType@1eccf032
Resolved : generatedAlias0.email -> user0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( is null ( user0_.email user0_.id email ) ) ) )
Using FROM fragment [user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=sw.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.name as name3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=sw.entity.User,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=sw.entity.User, tableAlias=user0_}
             \-[IDENT] IdentNode: 'email' {originalText=email}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.User as generatedAlias0 where generatedAlias0.email is null
SQL: select user0_.id as id1_0_, user0_.email as email2_0_, user0_.name as name3_0_ from user user0_ where user0_.email is null
throwQueryException() : no errors
select user0_.id as id1_0_, user0_.email as email2_0_, user0_.name as name3_0_ from user user0_ where user0_.email is null
Starting Application on LuoRong with PID 12552 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 14:37:57 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9124ecbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3242 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@42ef0f90
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@53451e9e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@26c71412
Adding type registration boolean -> org.hibernate.type.BooleanType@26c71412
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@26c71412
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d22455f
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1260cf38
Adding type registration yes_no -> org.hibernate.type.YesNoType@666875d2
Adding type registration byte -> org.hibernate.type.ByteType@4051eaf4
Adding type registration byte -> org.hibernate.type.ByteType@4051eaf4
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4051eaf4
Adding type registration character -> org.hibernate.type.CharacterType@30f057ad
Adding type registration char -> org.hibernate.type.CharacterType@30f057ad
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@30f057ad
Adding type registration short -> org.hibernate.type.ShortType@16e78729
Adding type registration short -> org.hibernate.type.ShortType@16e78729
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16e78729
Adding type registration integer -> org.hibernate.type.IntegerType@64e6558e
Adding type registration int -> org.hibernate.type.IntegerType@64e6558e
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64e6558e
Adding type registration long -> org.hibernate.type.LongType@374cfaa0
Adding type registration long -> org.hibernate.type.LongType@374cfaa0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@374cfaa0
Adding type registration float -> org.hibernate.type.FloatType@2153453b
Adding type registration float -> org.hibernate.type.FloatType@2153453b
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2153453b
Adding type registration double -> org.hibernate.type.DoubleType@5b1a2b88
Adding type registration double -> org.hibernate.type.DoubleType@5b1a2b88
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5b1a2b88
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@70675e33
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@70675e33
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3db2af88
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3db2af88
Adding type registration string -> org.hibernate.type.StringType@51a26777
Adding type registration java.lang.String -> org.hibernate.type.StringType@51a26777
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5c5620fc
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@225d60b4
Adding type registration url -> org.hibernate.type.UrlType@2e3fa24e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2e3fa24e
Adding type registration date -> org.hibernate.type.DateType@6d052351
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6d052351
Adding type registration time -> org.hibernate.type.TimeType@3b29922
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b29922
Adding type registration timestamp -> org.hibernate.type.TimestampType@22307170
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22307170
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22307170
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@49716347
Adding type registration calendar -> org.hibernate.type.CalendarType@6c12c22
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6c12c22
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6c12c22
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2cb53b33
Adding type registration locale -> org.hibernate.type.LocaleType@52170fae
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@52170fae
Adding type registration currency -> org.hibernate.type.CurrencyType@7362394
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7362394
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53b5715c
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53b5715c
Adding type registration class -> org.hibernate.type.ClassType@57efc9db
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@57efc9db
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@411fd43b
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@411fd43b
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4aa30244
Adding type registration binary -> org.hibernate.type.BinaryType@5db348a4
Adding type registration byte[] -> org.hibernate.type.BinaryType@5db348a4
Adding type registration [B -> org.hibernate.type.BinaryType@5db348a4
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19167f1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19167f1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19167f1
Adding type registration row_version -> org.hibernate.type.RowVersionType@466e2aa3
Adding type registration image -> org.hibernate.type.ImageType@4cfafa45
Adding type registration characters -> org.hibernate.type.CharArrayType@4c64f031
Adding type registration char[] -> org.hibernate.type.CharArrayType@4c64f031
Adding type registration [C -> org.hibernate.type.CharArrayType@4c64f031
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@35b0165f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@35b0165f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@35b0165f
Adding type registration text -> org.hibernate.type.TextType@7a285e06
Adding type registration ntext -> org.hibernate.type.NTextType@14cb362
Adding type registration blob -> org.hibernate.type.BlobType@640a3c6d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@640a3c6d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b51432d
Adding type registration clob -> org.hibernate.type.ClobType@568e6d00
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@568e6d00
Adding type registration nclob -> org.hibernate.type.NClobType@1b77a577
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b77a577
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@203037dd
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d5a200a
Adding type registration serializable -> org.hibernate.type.SerializableType@6a736dc7
Adding type registration object -> org.hibernate.type.ObjectType@27d546f2
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27d546f2
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@361cf26
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e0efb6e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6513dd6f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f0d3b5a
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1218cf62
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6b3483c4
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1037d368
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6616fddf
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a1f00f
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5438663666519204783.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12552, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3982da58, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@53451e9e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5438663666519204783.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1fc9a9b2, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (email, name, id) values (?, ?, ?)
 Update 0: update user set email=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (email, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bec29ef]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452c7955]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73cf41]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@991f339]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db0033e]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ac406ad]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dd3982d]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aae73e8]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2503341c]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4350e351]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dbf080e]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists user
create table user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6c377408
Registering SessionFactory: ce0026f9-f703-4a8d-b4a9-dd7bcb9e0f6d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@bb93b8e
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 14:37:57 CST 2017]; root of context hierarchy
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.817 seconds (JVM running for 9.396)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email is null
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@dbf1ca4
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from sw.entity.User as generatedAlias0 where generatedAlias0.email is null
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sw'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'email'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.User (generatedAlias0) -> user0_
Resolved : generatedAlias0 -> user0_.id
Resolved : generatedAlias0 -> user0_.id
getDataType() : email -> org.hibernate.type.StringType@51a26777
Resolved : generatedAlias0.email -> user0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( is null ( user0_.email user0_.id email ) ) ) )
Using FROM fragment [user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=sw.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.name as name3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=sw.entity.User,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=sw.entity.User, tableAlias=user0_}
             \-[IDENT] IdentNode: 'email' {originalText=email}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.User as generatedAlias0 where generatedAlias0.email is null
SQL: select user0_.id as id1_0_, user0_.email as email2_0_, user0_.name as name3_0_ from user user0_ where user0_.email is null
throwQueryException() : no errors
select user0_.id as id1_0_, user0_.email as email2_0_, user0_.name as name3_0_ from user user0_ where user0_.email is null
Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email is null
select user0_.id as id1_0_, user0_.email as email2_0_, user0_.name as name3_0_ from user user0_ where user0_.email is null
Starting Application on LuoRong with PID 13428 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 14:39:21 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7b3b9ada] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3180 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@84f39a4{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@74ad01dc
Adding type registration boolean -> org.hibernate.type.BooleanType@74ad01dc
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74ad01dc
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b5a656f
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17b82570
Adding type registration yes_no -> org.hibernate.type.YesNoType@8ca10df
Adding type registration byte -> org.hibernate.type.ByteType@2300ce58
Adding type registration byte -> org.hibernate.type.ByteType@2300ce58
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2300ce58
Adding type registration character -> org.hibernate.type.CharacterType@14f7e858
Adding type registration char -> org.hibernate.type.CharacterType@14f7e858
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14f7e858
Adding type registration short -> org.hibernate.type.ShortType@3fdeb459
Adding type registration short -> org.hibernate.type.ShortType@3fdeb459
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fdeb459
Adding type registration integer -> org.hibernate.type.IntegerType@b5b9f0b
Adding type registration int -> org.hibernate.type.IntegerType@b5b9f0b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b5b9f0b
Adding type registration long -> org.hibernate.type.LongType@3df4cc3e
Adding type registration long -> org.hibernate.type.LongType@3df4cc3e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@3df4cc3e
Adding type registration float -> org.hibernate.type.FloatType@5ebf7756
Adding type registration float -> org.hibernate.type.FloatType@5ebf7756
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5ebf7756
Adding type registration double -> org.hibernate.type.DoubleType@73dd6de0
Adding type registration double -> org.hibernate.type.DoubleType@73dd6de0
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@73dd6de0
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c10098c
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c10098c
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@623295c
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@623295c
Adding type registration string -> org.hibernate.type.StringType@72e67f7c
Adding type registration java.lang.String -> org.hibernate.type.StringType@72e67f7c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13c2017
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57f87c9a
Adding type registration url -> org.hibernate.type.UrlType@234d63e1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@234d63e1
Adding type registration date -> org.hibernate.type.DateType@684e75b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@684e75b
Adding type registration time -> org.hibernate.type.TimeType@58c60048
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@58c60048
Adding type registration timestamp -> org.hibernate.type.TimestampType@53a64971
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53a64971
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53a64971
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31319b74
Adding type registration calendar -> org.hibernate.type.CalendarType@2cd5d126
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2cd5d126
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2cd5d126
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3ba146b8
Adding type registration locale -> org.hibernate.type.LocaleType@671324ff
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@671324ff
Adding type registration currency -> org.hibernate.type.CurrencyType@430318dd
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@430318dd
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4af04d9b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4af04d9b
Adding type registration class -> org.hibernate.type.ClassType@20b9ca88
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20b9ca88
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60c2043a
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60c2043a
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71ee7291
Adding type registration binary -> org.hibernate.type.BinaryType@71e194c2
Adding type registration byte[] -> org.hibernate.type.BinaryType@71e194c2
Adding type registration [B -> org.hibernate.type.BinaryType@71e194c2
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7414c589
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7414c589
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7414c589
Adding type registration row_version -> org.hibernate.type.RowVersionType@3479325e
Adding type registration image -> org.hibernate.type.ImageType@40707895
Adding type registration characters -> org.hibernate.type.CharArrayType@cd64d69
Adding type registration char[] -> org.hibernate.type.CharArrayType@cd64d69
Adding type registration [C -> org.hibernate.type.CharArrayType@cd64d69
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52e8c056
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52e8c056
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52e8c056
Adding type registration text -> org.hibernate.type.TextType@7959ecea
Adding type registration ntext -> org.hibernate.type.NTextType@6f89aec8
Adding type registration blob -> org.hibernate.type.BlobType@663488b1
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@663488b1
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37d8151
Adding type registration clob -> org.hibernate.type.ClobType@1247fd91
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1247fd91
Adding type registration nclob -> org.hibernate.type.NClobType@296c3f0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@296c3f0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@280594c0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@356651ed
Adding type registration serializable -> org.hibernate.type.SerializableType@57dfcaa1
Adding type registration object -> org.hibernate.type.ObjectType@699e4eb4
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@699e4eb4
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e05272e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@15f523b4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5a62e040
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6adc9df
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21b6b273
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1de2cd72
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@50cf4e6e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@38c49699
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5609e9ae
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.2951019427342252627.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=13428, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@de4573f, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@84f39a4{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.2951019427342252627.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@ac37c2f, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (email, name, id) values (?, ?, ?)
 Update 0: update user set email=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (email, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@556903b]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb5fc5b]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64834ba8]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b83dc96]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@274d48a4]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8652480]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c9d88d]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@353c74cf]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a40ea8]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@715fd60e]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@524bb35f]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists user
create table user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4e158339
Registering SessionFactory: 9071fe84-d368-4a8a-a5a3-2402a0e4a8eb (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@79c00930
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 14:39:21 CST 2017]; root of context hierarchy
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.522 seconds (JVM running for 9.099)
Starting Application on LuoRong with PID 12228 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 14:41:04 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77e86431] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3065 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@42ef0f90
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2b9f6f55{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@49e81b69
Adding type registration boolean -> org.hibernate.type.BooleanType@49e81b69
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@49e81b69
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c313d35
Adding type registration true_false -> org.hibernate.type.TrueFalseType@756751be
Adding type registration yes_no -> org.hibernate.type.YesNoType@819bc73
Adding type registration byte -> org.hibernate.type.ByteType@43b6f2e6
Adding type registration byte -> org.hibernate.type.ByteType@43b6f2e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@43b6f2e6
Adding type registration character -> org.hibernate.type.CharacterType@7dcae19f
Adding type registration char -> org.hibernate.type.CharacterType@7dcae19f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7dcae19f
Adding type registration short -> org.hibernate.type.ShortType@42167d07
Adding type registration short -> org.hibernate.type.ShortType@42167d07
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@42167d07
Adding type registration integer -> org.hibernate.type.IntegerType@729d024e
Adding type registration int -> org.hibernate.type.IntegerType@729d024e
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@729d024e
Adding type registration long -> org.hibernate.type.LongType@74ebee27
Adding type registration long -> org.hibernate.type.LongType@74ebee27
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74ebee27
Adding type registration float -> org.hibernate.type.FloatType@7c05ba3c
Adding type registration float -> org.hibernate.type.FloatType@7c05ba3c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7c05ba3c
Adding type registration double -> org.hibernate.type.DoubleType@4ffed27
Adding type registration double -> org.hibernate.type.DoubleType@4ffed27
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4ffed27
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46872c64
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46872c64
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@487355e9
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@487355e9
Adding type registration string -> org.hibernate.type.StringType@755c7aca
Adding type registration java.lang.String -> org.hibernate.type.StringType@755c7aca
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52dc168
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e393f29
Adding type registration url -> org.hibernate.type.UrlType@6ff4431f
Adding type registration java.net.URL -> org.hibernate.type.UrlType@6ff4431f
Adding type registration date -> org.hibernate.type.DateType@43103bc5
Adding type registration java.sql.Date -> org.hibernate.type.DateType@43103bc5
Adding type registration time -> org.hibernate.type.TimeType@3b342832
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b342832
Adding type registration timestamp -> org.hibernate.type.TimestampType@56afd4cd
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56afd4cd
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56afd4cd
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@74e48668
Adding type registration calendar -> org.hibernate.type.CalendarType@4848fda3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4848fda3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4848fda3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b51425
Adding type registration locale -> org.hibernate.type.LocaleType@27eb73d3
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27eb73d3
Adding type registration currency -> org.hibernate.type.CurrencyType@648db234
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@648db234
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2af082b5
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2af082b5
Adding type registration class -> org.hibernate.type.ClassType@2b3caaf6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2b3caaf6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7dc27845
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7dc27845
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@299fead
Adding type registration binary -> org.hibernate.type.BinaryType@4beda1e7
Adding type registration byte[] -> org.hibernate.type.BinaryType@4beda1e7
Adding type registration [B -> org.hibernate.type.BinaryType@4beda1e7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@403b7914
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@403b7914
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@403b7914
Adding type registration row_version -> org.hibernate.type.RowVersionType@176af3b7
Adding type registration image -> org.hibernate.type.ImageType@7bc0e957
Adding type registration characters -> org.hibernate.type.CharArrayType@64a1e108
Adding type registration char[] -> org.hibernate.type.CharArrayType@64a1e108
Adding type registration [C -> org.hibernate.type.CharArrayType@64a1e108
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@63f38f2c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@63f38f2c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@63f38f2c
Adding type registration text -> org.hibernate.type.TextType@7e158e9e
Adding type registration ntext -> org.hibernate.type.NTextType@325e715b
Adding type registration blob -> org.hibernate.type.BlobType@210db007
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@210db007
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3bac4dd8
Adding type registration clob -> org.hibernate.type.ClobType@77bcef9a
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77bcef9a
Adding type registration nclob -> org.hibernate.type.NClobType@4f288e1e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f288e1e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3f3fa3d5
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4fef92fe
Adding type registration serializable -> org.hibernate.type.SerializableType@3862438b
Adding type registration object -> org.hibernate.type.ObjectType@829e313
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@829e313
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c27e23e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3b51b7d2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@223132bc
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ba98b1b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@485cbe42
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e857fbc
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@550a0602
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@123caeeb
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000342: Could not obtain connection to query metadata : Unable to resolve name [org.hibernate.dialect.MySQL5Dialect  ] as strategy [org.hibernate.dialect.Dialect]
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Starting Application on LuoRong with PID 14004 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 14:41:57 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$26723cdc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2983 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@90f959f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@f91355{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@e5930fc
Adding type registration boolean -> org.hibernate.type.BooleanType@e5930fc
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@e5930fc
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6227002b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2222d640
Adding type registration yes_no -> org.hibernate.type.YesNoType@4ad7d0d7
Adding type registration byte -> org.hibernate.type.ByteType@e3c94a7
Adding type registration byte -> org.hibernate.type.ByteType@e3c94a7
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e3c94a7
Adding type registration character -> org.hibernate.type.CharacterType@34200e3b
Adding type registration char -> org.hibernate.type.CharacterType@34200e3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@34200e3b
Adding type registration short -> org.hibernate.type.ShortType@458aad45
Adding type registration short -> org.hibernate.type.ShortType@458aad45
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@458aad45
Adding type registration integer -> org.hibernate.type.IntegerType@194d9306
Adding type registration int -> org.hibernate.type.IntegerType@194d9306
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@194d9306
Adding type registration long -> org.hibernate.type.LongType@2dbc67db
Adding type registration long -> org.hibernate.type.LongType@2dbc67db
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2dbc67db
Adding type registration float -> org.hibernate.type.FloatType@da72bfa
Adding type registration float -> org.hibernate.type.FloatType@da72bfa
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@da72bfa
Adding type registration double -> org.hibernate.type.DoubleType@22865de3
Adding type registration double -> org.hibernate.type.DoubleType@22865de3
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@22865de3
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@379e836e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@379e836e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29d4839c
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29d4839c
Adding type registration string -> org.hibernate.type.StringType@5b9ddbbe
Adding type registration java.lang.String -> org.hibernate.type.StringType@5b9ddbbe
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@33e968b3
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@309fba72
Adding type registration url -> org.hibernate.type.UrlType@d3bfbd7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@d3bfbd7
Adding type registration date -> org.hibernate.type.DateType@4b8be5bf
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b8be5bf
Adding type registration time -> org.hibernate.type.TimeType@60e8f541
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60e8f541
Adding type registration timestamp -> org.hibernate.type.TimestampType@492c8f09
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@492c8f09
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@492c8f09
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45a7b2bb
Adding type registration calendar -> org.hibernate.type.CalendarType@5d49e81f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d49e81f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d49e81f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28daad23
Adding type registration locale -> org.hibernate.type.LocaleType@225f91ed
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@225f91ed
Adding type registration currency -> org.hibernate.type.CurrencyType@fc03b30
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fc03b30
Adding type registration timezone -> org.hibernate.type.TimeZoneType@61421848
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61421848
Adding type registration class -> org.hibernate.type.ClassType@1b3d9c70
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b3d9c70
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@91913b0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@91913b0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@26268cb1
Adding type registration binary -> org.hibernate.type.BinaryType@b564a2c
Adding type registration byte[] -> org.hibernate.type.BinaryType@b564a2c
Adding type registration [B -> org.hibernate.type.BinaryType@b564a2c
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@24f57ab2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@24f57ab2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@24f57ab2
Adding type registration row_version -> org.hibernate.type.RowVersionType@6350b708
Adding type registration image -> org.hibernate.type.ImageType@1f536ba0
Adding type registration characters -> org.hibernate.type.CharArrayType@1929da7f
Adding type registration char[] -> org.hibernate.type.CharArrayType@1929da7f
Adding type registration [C -> org.hibernate.type.CharArrayType@1929da7f
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2183dba2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2183dba2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2183dba2
Adding type registration text -> org.hibernate.type.TextType@29b6e560
Adding type registration ntext -> org.hibernate.type.NTextType@26b4a747
Adding type registration blob -> org.hibernate.type.BlobType@59e77953
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59e77953
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@505889cf
Adding type registration clob -> org.hibernate.type.ClobType@92a91df
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@92a91df
Adding type registration nclob -> org.hibernate.type.NClobType@3aba6a91
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3aba6a91
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74a8322e
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cbf3fab
Adding type registration serializable -> org.hibernate.type.SerializableType@4cd195ab
Adding type registration object -> org.hibernate.type.ObjectType@4bb57cbf
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bb57cbf
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66bbe90b
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68b21e7
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@561f9ab7
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35ffae74
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c35ea71
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@536e7609
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@798e84f1
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@31ca19ba
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4af2735a
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.5220234693466157171.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14004, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7b8bfe86, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@f91355{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.5220234693466157171.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2bfa00a8, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_ from user user_ where user_.id=?
 Insert 0: insert into user (email, name, id) values (?, ?, ?)
 Update 0: update user set email=?, name=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (email, name) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382615ff]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d06bca4]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26efccb6]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17198d53]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c6ec2b]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51289c99]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e69b076]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@661f61d]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13d17b1a]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a84a77b]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5632b73e]
Visiting attribute path : email
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73e1c815
Registering SessionFactory: 0a610d36-11c3-4fab-b6ac-af116ad00d66 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@7842d22b
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 14:41:57 CST 2017]; root of context hierarchy
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.163 seconds (JVM running for 8.731)
Starting Application on LuoRong with PID 12388 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Sat Nov 04 14:42:59 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$30b3fae7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3022 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1b62dc8b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6a88b39{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@6a9aa089
Adding type registration boolean -> org.hibernate.type.BooleanType@6a9aa089
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a9aa089
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2fcf7fa5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@49d1d02a
Adding type registration yes_no -> org.hibernate.type.YesNoType@7455dc4b
Adding type registration byte -> org.hibernate.type.ByteType@75d16162
Adding type registration byte -> org.hibernate.type.ByteType@75d16162
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75d16162
Adding type registration character -> org.hibernate.type.CharacterType@1d169c57
Adding type registration char -> org.hibernate.type.CharacterType@1d169c57
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d169c57
Adding type registration short -> org.hibernate.type.ShortType@273cf946
Adding type registration short -> org.hibernate.type.ShortType@273cf946
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@273cf946
Adding type registration integer -> org.hibernate.type.IntegerType@2f7dcb93
Adding type registration int -> org.hibernate.type.IntegerType@2f7dcb93
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f7dcb93
Adding type registration long -> org.hibernate.type.LongType@2bd202a1
Adding type registration long -> org.hibernate.type.LongType@2bd202a1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2bd202a1
Adding type registration float -> org.hibernate.type.FloatType@f710e76
Adding type registration float -> org.hibernate.type.FloatType@f710e76
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f710e76
Adding type registration double -> org.hibernate.type.DoubleType@31a358aa
Adding type registration double -> org.hibernate.type.DoubleType@31a358aa
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31a358aa
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@65d33046
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@65d33046
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f10f655
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f10f655
Adding type registration string -> org.hibernate.type.StringType@6271a6d2
Adding type registration java.lang.String -> org.hibernate.type.StringType@6271a6d2
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@314131b3
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ea9916b
Adding type registration url -> org.hibernate.type.UrlType@a3ac013
Adding type registration java.net.URL -> org.hibernate.type.UrlType@a3ac013
Adding type registration date -> org.hibernate.type.DateType@44d722f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@44d722f9
Adding type registration time -> org.hibernate.type.TimeType@5e4da769
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4da769
Adding type registration timestamp -> org.hibernate.type.TimestampType@a915af4
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a915af4
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a915af4
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@490e41af
Adding type registration calendar -> org.hibernate.type.CalendarType@76a6bed5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76a6bed5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76a6bed5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5a9d19fb
Adding type registration locale -> org.hibernate.type.LocaleType@6ac98e5c
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ac98e5c
Adding type registration currency -> org.hibernate.type.CurrencyType@6252d7db
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6252d7db
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cc07e7a
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cc07e7a
Adding type registration class -> org.hibernate.type.ClassType@284dd5b6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@284dd5b6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@655c75cd
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@655c75cd
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6625c16c
Adding type registration binary -> org.hibernate.type.BinaryType@6eb99d9a
Adding type registration byte[] -> org.hibernate.type.BinaryType@6eb99d9a
Adding type registration [B -> org.hibernate.type.BinaryType@6eb99d9a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10f2100e
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10f2100e
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10f2100e
Adding type registration row_version -> org.hibernate.type.RowVersionType@16d286fe
Adding type registration image -> org.hibernate.type.ImageType@7e9449cf
Adding type registration characters -> org.hibernate.type.CharArrayType@5920d825
Adding type registration char[] -> org.hibernate.type.CharArrayType@5920d825
Adding type registration [C -> org.hibernate.type.CharArrayType@5920d825
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@468cdd57
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@468cdd57
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@468cdd57
Adding type registration text -> org.hibernate.type.TextType@1ccc3d03
Adding type registration ntext -> org.hibernate.type.NTextType@13b92963
Adding type registration blob -> org.hibernate.type.BlobType@3ebd41d1
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ebd41d1
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@426c4134
Adding type registration clob -> org.hibernate.type.ClobType@4235c549
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4235c549
Adding type registration nclob -> org.hibernate.type.NClobType@4f35caf0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f35caf0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22e38724
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@637592ab
Adding type registration serializable -> org.hibernate.type.SerializableType@77adb12e
Adding type registration object -> org.hibernate.type.ObjectType@655dbe02
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@655dbe02
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53079eb5
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5ba28779
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10e1ed9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@182fa87b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@77326ffd
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3864a72d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@496d8e2e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c648b08
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3f29c0bf
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1155275584578256980.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12388, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7af1fe3e, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6a88b39{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1155275584578256980.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@54df2477, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from user user_ where user_.id=?
 Insert 0: insert into user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update user set email=?, name=?, tel=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646bd9b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c6ef9b5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26eaf6d4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39bc019]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dd6d338]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ad151e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2841192d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@419ad35f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@287514fc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1688a9c9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71851f25]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@54456e80
Registering SessionFactory: 6d1e662b-d620-4645-844a-e39bbae7a58e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@5f5e11a0
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Sat Nov 04 14:42:59 CST 2017]; root of context hierarchy
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.186 seconds (JVM running for 8.739)
Starting Application on LuoRong with PID 13472 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 14:43:58 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9ef7c15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2977 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@15112866{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1b6545b9
Adding type registration boolean -> org.hibernate.type.BooleanType@1b6545b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b6545b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8a7333c
Adding type registration true_false -> org.hibernate.type.TrueFalseType@947b204
Adding type registration yes_no -> org.hibernate.type.YesNoType@3c313d35
Adding type registration byte -> org.hibernate.type.ByteType@756751be
Adding type registration byte -> org.hibernate.type.ByteType@756751be
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@756751be
Adding type registration character -> org.hibernate.type.CharacterType@12200293
Adding type registration char -> org.hibernate.type.CharacterType@12200293
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@12200293
Adding type registration short -> org.hibernate.type.ShortType@1ba83cd7
Adding type registration short -> org.hibernate.type.ShortType@1ba83cd7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1ba83cd7
Adding type registration integer -> org.hibernate.type.IntegerType@7f09b233
Adding type registration int -> org.hibernate.type.IntegerType@7f09b233
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f09b233
Adding type registration long -> org.hibernate.type.LongType@4bed5373
Adding type registration long -> org.hibernate.type.LongType@4bed5373
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4bed5373
Adding type registration float -> org.hibernate.type.FloatType@7d520e93
Adding type registration float -> org.hibernate.type.FloatType@7d520e93
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d520e93
Adding type registration double -> org.hibernate.type.DoubleType@3e39bf2d
Adding type registration double -> org.hibernate.type.DoubleType@3e39bf2d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3e39bf2d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@70965e76
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@70965e76
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@728280ae
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@728280ae
Adding type registration string -> org.hibernate.type.StringType@46872c64
Adding type registration java.lang.String -> org.hibernate.type.StringType@46872c64
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@487355e9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@755c7aca
Adding type registration url -> org.hibernate.type.UrlType@52dc168
Adding type registration java.net.URL -> org.hibernate.type.UrlType@52dc168
Adding type registration date -> org.hibernate.type.DateType@2f2ee36b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f2ee36b
Adding type registration time -> org.hibernate.type.TimeType@583c8b6f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@583c8b6f
Adding type registration timestamp -> org.hibernate.type.TimestampType@487b52e9
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@487b52e9
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@487b52e9
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3b342832
Adding type registration calendar -> org.hibernate.type.CalendarType@409675a1
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@409675a1
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@409675a1
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@192e5446
Adding type registration locale -> org.hibernate.type.LocaleType@6d935a8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d935a8d
Adding type registration currency -> org.hibernate.type.CurrencyType@1b51425
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1b51425
Adding type registration timezone -> org.hibernate.type.TimeZoneType@27eb73d3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@27eb73d3
Adding type registration class -> org.hibernate.type.ClassType@648db234
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@648db234
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e4158a0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e4158a0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5391a5ee
Adding type registration binary -> org.hibernate.type.BinaryType@2fee43ec
Adding type registration byte[] -> org.hibernate.type.BinaryType@2fee43ec
Adding type registration [B -> org.hibernate.type.BinaryType@2fee43ec
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@299fead
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@299fead
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@299fead
Adding type registration row_version -> org.hibernate.type.RowVersionType@4beda1e7
Adding type registration image -> org.hibernate.type.ImageType@403b7914
Adding type registration characters -> org.hibernate.type.CharArrayType@176af3b7
Adding type registration char[] -> org.hibernate.type.CharArrayType@176af3b7
Adding type registration [C -> org.hibernate.type.CharArrayType@176af3b7
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7bc0e957
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7bc0e957
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7bc0e957
Adding type registration text -> org.hibernate.type.TextType@64a1e108
Adding type registration ntext -> org.hibernate.type.NTextType@63f38f2c
Adding type registration blob -> org.hibernate.type.BlobType@1790c9a8
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1790c9a8
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@10e007a6
Adding type registration clob -> org.hibernate.type.ClobType@1413150d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1413150d
Adding type registration nclob -> org.hibernate.type.NClobType@511e71d9
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@511e71d9
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e4f2c6e
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3fadc22
Adding type registration serializable -> org.hibernate.type.SerializableType@56937140
Adding type registration object -> org.hibernate.type.ObjectType@309d2b68
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@309d2b68
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d8b37f0
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@44148942
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6268cc4d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6d41058d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@29b18b62
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@498f598f
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d21ee57
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@829e313
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Unrecognized hbm2ddl_auto value : create  .  Supported values include create, create-drop, update, and validate.  Ignoring
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@56547c8e
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3714338708359777736.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=13472, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6cde010d, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@15112866{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create  , java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3714338708359777736.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2a32fd85, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from user user_ where user_.id=?
 Insert 0: insert into user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update user set email=?, name=?, tel=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a321c2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e5314e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20f7200b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee18792]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da29a2e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c22fbec]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@219e79d1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d273b7b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40a63a5f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28dd76ba]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f03ea16]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@383084b9
Registering SessionFactory: 65e41e2f-c2a1-4ceb-ae9e-2f7f3dbe4ea5 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@606ad405
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 14:43:58 CST 2017]; root of context hierarchy
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Unable to start LiveReload server
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Pausing ProtocolHandler ["http-nio-8080"]
Stopping service Tomcat


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 14:43:58 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36495a22: startup date [Sat Nov 04 14:42:59 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 12388 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@56920e6e: startup date [Sat Nov 04 14:44:58 CST 2017]; root of context hierarchy
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$30b3fae7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1119 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@244c962c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@765b4efa{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@6a9aa089
Adding type registration boolean -> org.hibernate.type.BooleanType@6a9aa089
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a9aa089
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2fcf7fa5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@49d1d02a
Adding type registration yes_no -> org.hibernate.type.YesNoType@7455dc4b
Adding type registration byte -> org.hibernate.type.ByteType@75d16162
Adding type registration byte -> org.hibernate.type.ByteType@75d16162
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75d16162
Adding type registration character -> org.hibernate.type.CharacterType@1d169c57
Adding type registration char -> org.hibernate.type.CharacterType@1d169c57
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d169c57
Adding type registration short -> org.hibernate.type.ShortType@273cf946
Adding type registration short -> org.hibernate.type.ShortType@273cf946
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@273cf946
Adding type registration integer -> org.hibernate.type.IntegerType@2f7dcb93
Adding type registration int -> org.hibernate.type.IntegerType@2f7dcb93
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f7dcb93
Adding type registration long -> org.hibernate.type.LongType@2bd202a1
Adding type registration long -> org.hibernate.type.LongType@2bd202a1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2bd202a1
Adding type registration float -> org.hibernate.type.FloatType@f710e76
Adding type registration float -> org.hibernate.type.FloatType@f710e76
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f710e76
Adding type registration double -> org.hibernate.type.DoubleType@31a358aa
Adding type registration double -> org.hibernate.type.DoubleType@31a358aa
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31a358aa
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@65d33046
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@65d33046
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f10f655
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f10f655
Adding type registration string -> org.hibernate.type.StringType@6271a6d2
Adding type registration java.lang.String -> org.hibernate.type.StringType@6271a6d2
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@314131b3
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ea9916b
Adding type registration url -> org.hibernate.type.UrlType@a3ac013
Adding type registration java.net.URL -> org.hibernate.type.UrlType@a3ac013
Adding type registration date -> org.hibernate.type.DateType@44d722f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@44d722f9
Adding type registration time -> org.hibernate.type.TimeType@5e4da769
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4da769
Adding type registration timestamp -> org.hibernate.type.TimestampType@a915af4
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a915af4
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a915af4
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@490e41af
Adding type registration calendar -> org.hibernate.type.CalendarType@76a6bed5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76a6bed5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76a6bed5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5a9d19fb
Adding type registration locale -> org.hibernate.type.LocaleType@6ac98e5c
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ac98e5c
Adding type registration currency -> org.hibernate.type.CurrencyType@6252d7db
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6252d7db
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cc07e7a
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cc07e7a
Adding type registration class -> org.hibernate.type.ClassType@284dd5b6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@284dd5b6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@655c75cd
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@655c75cd
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6625c16c
Adding type registration binary -> org.hibernate.type.BinaryType@6eb99d9a
Adding type registration byte[] -> org.hibernate.type.BinaryType@6eb99d9a
Adding type registration [B -> org.hibernate.type.BinaryType@6eb99d9a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10f2100e
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10f2100e
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10f2100e
Adding type registration row_version -> org.hibernate.type.RowVersionType@16d286fe
Adding type registration image -> org.hibernate.type.ImageType@7e9449cf
Adding type registration characters -> org.hibernate.type.CharArrayType@5920d825
Adding type registration char[] -> org.hibernate.type.CharArrayType@5920d825
Adding type registration [C -> org.hibernate.type.CharArrayType@5920d825
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@468cdd57
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@468cdd57
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@468cdd57
Adding type registration text -> org.hibernate.type.TextType@1ccc3d03
Adding type registration ntext -> org.hibernate.type.NTextType@13b92963
Adding type registration blob -> org.hibernate.type.BlobType@3ebd41d1
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ebd41d1
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@426c4134
Adding type registration clob -> org.hibernate.type.ClobType@4235c549
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4235c549
Adding type registration nclob -> org.hibernate.type.NClobType@4f35caf0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f35caf0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22e38724
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@637592ab
Adding type registration serializable -> org.hibernate.type.SerializableType@77adb12e
Adding type registration object -> org.hibernate.type.ObjectType@655dbe02
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@655dbe02
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1006437f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@763c6bb8
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5bed1bb2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4685e872
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64ba4666
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@71ce80e2
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@424d35e2
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2be293a1
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3f29c0bf
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1155275584578256980.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12388, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@76ea4faf, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@765b4efa{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1155275584578256980.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@12cab39c, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from user user_ where user_.id=?
 Insert 0: insert into user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update user set email=?, name=?, tel=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26501a9c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4935d61]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4707e1ab]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ddc04e4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d9dffa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37caccce]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aadc63c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21e4cfcb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7600b814]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f879700]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ecc675a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists user
create table user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: bd9b5ef6-0b1e-4198-acd4-137a141b01e8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@56920e6e: startup date [Sat Nov 04 14:44:58 CST 2017]; root of context hierarchy
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.365 seconds (JVM running for 122.574)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@56920e6e: startup date [Sat Nov 04 14:44:58 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 12388 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ddbaeef: startup date [Sat Nov 04 14:46:06 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$30b3fae7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1023 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@139fb7d0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@42dd3803{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@6a9aa089
Adding type registration boolean -> org.hibernate.type.BooleanType@6a9aa089
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a9aa089
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2fcf7fa5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@49d1d02a
Adding type registration yes_no -> org.hibernate.type.YesNoType@7455dc4b
Adding type registration byte -> org.hibernate.type.ByteType@75d16162
Adding type registration byte -> org.hibernate.type.ByteType@75d16162
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75d16162
Adding type registration character -> org.hibernate.type.CharacterType@1d169c57
Adding type registration char -> org.hibernate.type.CharacterType@1d169c57
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d169c57
Adding type registration short -> org.hibernate.type.ShortType@273cf946
Adding type registration short -> org.hibernate.type.ShortType@273cf946
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@273cf946
Adding type registration integer -> org.hibernate.type.IntegerType@2f7dcb93
Adding type registration int -> org.hibernate.type.IntegerType@2f7dcb93
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f7dcb93
Adding type registration long -> org.hibernate.type.LongType@2bd202a1
Adding type registration long -> org.hibernate.type.LongType@2bd202a1
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2bd202a1
Adding type registration float -> org.hibernate.type.FloatType@f710e76
Adding type registration float -> org.hibernate.type.FloatType@f710e76
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f710e76
Adding type registration double -> org.hibernate.type.DoubleType@31a358aa
Adding type registration double -> org.hibernate.type.DoubleType@31a358aa
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31a358aa
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@65d33046
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@65d33046
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f10f655
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f10f655
Adding type registration string -> org.hibernate.type.StringType@6271a6d2
Adding type registration java.lang.String -> org.hibernate.type.StringType@6271a6d2
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@314131b3
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ea9916b
Adding type registration url -> org.hibernate.type.UrlType@a3ac013
Adding type registration java.net.URL -> org.hibernate.type.UrlType@a3ac013
Adding type registration date -> org.hibernate.type.DateType@44d722f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@44d722f9
Adding type registration time -> org.hibernate.type.TimeType@5e4da769
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e4da769
Adding type registration timestamp -> org.hibernate.type.TimestampType@a915af4
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a915af4
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a915af4
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@490e41af
Adding type registration calendar -> org.hibernate.type.CalendarType@76a6bed5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76a6bed5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76a6bed5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5a9d19fb
Adding type registration locale -> org.hibernate.type.LocaleType@6ac98e5c
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ac98e5c
Adding type registration currency -> org.hibernate.type.CurrencyType@6252d7db
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6252d7db
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cc07e7a
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cc07e7a
Adding type registration class -> org.hibernate.type.ClassType@284dd5b6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@284dd5b6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@655c75cd
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@655c75cd
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6625c16c
Adding type registration binary -> org.hibernate.type.BinaryType@6eb99d9a
Adding type registration byte[] -> org.hibernate.type.BinaryType@6eb99d9a
Adding type registration [B -> org.hibernate.type.BinaryType@6eb99d9a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10f2100e
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10f2100e
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10f2100e
Adding type registration row_version -> org.hibernate.type.RowVersionType@16d286fe
Adding type registration image -> org.hibernate.type.ImageType@7e9449cf
Adding type registration characters -> org.hibernate.type.CharArrayType@5920d825
Adding type registration char[] -> org.hibernate.type.CharArrayType@5920d825
Adding type registration [C -> org.hibernate.type.CharArrayType@5920d825
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@468cdd57
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@468cdd57
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@468cdd57
Adding type registration text -> org.hibernate.type.TextType@1ccc3d03
Adding type registration ntext -> org.hibernate.type.NTextType@13b92963
Adding type registration blob -> org.hibernate.type.BlobType@3ebd41d1
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ebd41d1
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@426c4134
Adding type registration clob -> org.hibernate.type.ClobType@4235c549
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4235c549
Adding type registration nclob -> org.hibernate.type.NClobType@4f35caf0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f35caf0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22e38724
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@637592ab
Adding type registration serializable -> org.hibernate.type.SerializableType@77adb12e
Adding type registration object -> org.hibernate.type.ObjectType@655dbe02
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@655dbe02
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e644160
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19b2a8f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38462065
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c851f2d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40d62e9c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c2fcb7a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@45639f92
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11cb8c64
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3f29c0bf
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1155275584578256980.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12388, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@350e7893, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@42dd3803{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1155275584578256980.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6e5041f6, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23d95177]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4428842f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7dd46c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d135369]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b54c0b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b0690c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77013dc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c7ed20c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e1f730]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3367515f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c667a76]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: b1a1ce81-e50b-47cd-a920-41ea87e79097 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ddbaeef: startup date [Sat Nov 04 14:46:06 CST 2017]; root of context hierarchy
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.044 seconds (JVM running for 191.142)
Starting Application on LuoRong with PID 9712 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 14:46:15 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e6e38ba1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2986 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@36dd0ba6{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@780fabbe
Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a17209
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cd237d9
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration character -> org.hibernate.type.CharacterType@38d41317
Adding type registration char -> org.hibernate.type.CharacterType@38d41317
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38d41317
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56553a27
Adding type registration integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration int -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration java.lang.Long -> org.hibernate.type.LongType@23519df
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration string -> org.hibernate.type.StringType@226a0706
Adding type registration java.lang.String -> org.hibernate.type.StringType@226a0706
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@577d5343
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3dd24302
Adding type registration url -> org.hibernate.type.UrlType@5836594a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5836594a
Adding type registration date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@237ac717
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@269170cb
Adding type registration calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115ad05e
Adding type registration locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration timezone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration class -> org.hibernate.type.ClassType@44385aad
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44385aad
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@516471c
Adding type registration binary -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration byte[] -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration [B -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration row_version -> org.hibernate.type.RowVersionType@1619b6e4
Adding type registration image -> org.hibernate.type.ImageType@29e741b7
Adding type registration characters -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration char[] -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration [C -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration text -> org.hibernate.type.TextType@55d9d52f
Adding type registration ntext -> org.hibernate.type.NTextType@33b73643
Adding type registration blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eb1f4be
Adding type registration clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration nclob -> org.hibernate.type.NClobType@2dab779a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2dab779a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74777d43
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6757700c
Adding type registration serializable -> org.hibernate.type.SerializableType@31c17015
Adding type registration object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33700b44
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@699e4eb4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5bd28153
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d1c21e2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e05272e
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15f523b4
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a62e040
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6adc9df
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a515a91
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3105135261341806771.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=9712, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ef12a36, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@36dd0ba6{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3105135261341806771.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@48688574, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16f32cf1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c9d88d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@353c74cf]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a40ea8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@715fd60e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@524bb35f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6024e3d5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bf5145]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a705e07]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@718d0302]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d1dbbae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4cdbba6b
Registering SessionFactory: 7e605ab4-18fb-48d1-8a8c-76e9794a3ff3 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@48ba471f
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 14:46:15 CST 2017]; root of context hierarchy
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.352 seconds (JVM running for 8.95)
Starting Application on LuoRong with PID 7352 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Sat Nov 04 21:14:00 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2c45eec5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2972 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3c95c83a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@ecd722e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@752bc63d
Adding type registration boolean -> org.hibernate.type.BooleanType@752bc63d
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@752bc63d
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54469ffa
Adding type registration true_false -> org.hibernate.type.TrueFalseType@75f8f3ae
Adding type registration yes_no -> org.hibernate.type.YesNoType@6b84638f
Adding type registration byte -> org.hibernate.type.ByteType@515315a1
Adding type registration byte -> org.hibernate.type.ByteType@515315a1
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@515315a1
Adding type registration character -> org.hibernate.type.CharacterType@624a2de8
Adding type registration char -> org.hibernate.type.CharacterType@624a2de8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@624a2de8
Adding type registration short -> org.hibernate.type.ShortType@4d586347
Adding type registration short -> org.hibernate.type.ShortType@4d586347
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d586347
Adding type registration integer -> org.hibernate.type.IntegerType@34722aca
Adding type registration int -> org.hibernate.type.IntegerType@34722aca
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34722aca
Adding type registration long -> org.hibernate.type.LongType@36565639
Adding type registration long -> org.hibernate.type.LongType@36565639
Adding type registration java.lang.Long -> org.hibernate.type.LongType@36565639
Adding type registration float -> org.hibernate.type.FloatType@38a45f1a
Adding type registration float -> org.hibernate.type.FloatType@38a45f1a
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38a45f1a
Adding type registration double -> org.hibernate.type.DoubleType@68ff8109
Adding type registration double -> org.hibernate.type.DoubleType@68ff8109
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68ff8109
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30590ed5
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30590ed5
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ea78c10
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ea78c10
Adding type registration string -> org.hibernate.type.StringType@1f09115c
Adding type registration java.lang.String -> org.hibernate.type.StringType@1f09115c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@726e1c92
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9dfb7fa
Adding type registration url -> org.hibernate.type.UrlType@6673e4ea
Adding type registration java.net.URL -> org.hibernate.type.UrlType@6673e4ea
Adding type registration date -> org.hibernate.type.DateType@76390607
Adding type registration java.sql.Date -> org.hibernate.type.DateType@76390607
Adding type registration time -> org.hibernate.type.TimeType@9c9f258
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@9c9f258
Adding type registration timestamp -> org.hibernate.type.TimestampType@56630cdf
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56630cdf
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56630cdf
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55383404
Adding type registration calendar -> org.hibernate.type.CalendarType@5a3d2d71
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5a3d2d71
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5a3d2d71
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4480d94d
Adding type registration locale -> org.hibernate.type.LocaleType@4898bb62
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4898bb62
Adding type registration currency -> org.hibernate.type.CurrencyType@257b1d94
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@257b1d94
Adding type registration timezone -> org.hibernate.type.TimeZoneType@332cfb6a
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@332cfb6a
Adding type registration class -> org.hibernate.type.ClassType@730471c6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@730471c6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@d6a8eb0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@d6a8eb0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31d338ed
Adding type registration binary -> org.hibernate.type.BinaryType@204d9f12
Adding type registration byte[] -> org.hibernate.type.BinaryType@204d9f12
Adding type registration [B -> org.hibernate.type.BinaryType@204d9f12
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e0cfa37
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e0cfa37
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e0cfa37
Adding type registration row_version -> org.hibernate.type.RowVersionType@1cc7bbbf
Adding type registration image -> org.hibernate.type.ImageType@58a50428
Adding type registration characters -> org.hibernate.type.CharArrayType@4211b8c7
Adding type registration char[] -> org.hibernate.type.CharArrayType@4211b8c7
Adding type registration [C -> org.hibernate.type.CharArrayType@4211b8c7
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bc7b735
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bc7b735
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bc7b735
Adding type registration text -> org.hibernate.type.TextType@5c563615
Adding type registration ntext -> org.hibernate.type.NTextType@33a5cc24
Adding type registration blob -> org.hibernate.type.BlobType@c79bb8d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c79bb8d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b325beb
Adding type registration clob -> org.hibernate.type.ClobType@16c0e2cf
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16c0e2cf
Adding type registration nclob -> org.hibernate.type.NClobType@7dcc1485
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7dcc1485
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1be8fdfc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6812496a
Adding type registration serializable -> org.hibernate.type.SerializableType@3f7384b0
Adding type registration object -> org.hibernate.type.ObjectType@7e2b1334
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e2b1334
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b4386a2
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6d578e4d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62ef646e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1e9c4b33
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49bdb8d4
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18c96248
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19ca92b
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d25bff8
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2c61b1aa
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.373839090523983451.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7352, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@16bc02d4, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@ecd722e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.373839090523983451.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@727170bb, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c31b52]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a167b72]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25eb4b9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1abdebd9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b86664]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10136a51]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39d7c7b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40aa1db2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d56a4ea]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@394e3a5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d3ff470]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@22da9bfb
Registering SessionFactory: 343e415c-db3a-4409-869f-ca77196a5ef6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@c808bb4
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Sat Nov 04 21:14:00 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.718 seconds (JVM running for 9.322)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email is null
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6f2359ab
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from sw.entity.User as generatedAlias0 where generatedAlias0.email is null
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'sw'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'generatedAlias0'
             \-[IDENT] Node: 'email'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : sw.entity.User (generatedAlias0) -> user0_
Resolved : generatedAlias0 -> user0_.id
Resolved : generatedAlias0 -> user0_.id
getDataType() : email -> org.hibernate.type.StringType@1f09115c
Resolved : generatedAlias0.email -> user0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} t_user user0_ ) ( where ( is null ( user0_.email user0_.id email ) ) ) )
Using FROM fragment [t_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=sw.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.name as name3_0_, user0_.tel as tel4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=t_user,tableAlias=user0_,origin=null,columns={,className=sw.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=sw.entity.User,classAlias=generatedAlias0}
             +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=sw.entity.User, tableAlias=user0_}
             \-[IDENT] IdentNode: 'email' {originalText=email}

throwQueryException() : no errors
HQL: select generatedAlias0 from sw.entity.User as generatedAlias0 where generatedAlias0.email is null
SQL: select user0_.id as id1_0_, user0_.email as email2_0_, user0_.name as name3_0_, user0_.tel as tel4_0_ from t_user user0_ where user0_.email is null
throwQueryException() : no errors
select user0_.id as id1_0_, user0_.email as email2_0_, user0_.name as name3_0_, user0_.tel as tel4_0_ from t_user user0_ where user0_.email is null
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5bbbd96d: startup date [Sat Nov 04 21:14:00 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 7352 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@750f87ae: startup date [Sat Nov 04 21:15:41 CST 2017]; root of context hierarchy
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2c45eec5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 777 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1e2a9e32
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@78ff7bb5{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@752bc63d
Adding type registration boolean -> org.hibernate.type.BooleanType@752bc63d
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@752bc63d
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54469ffa
Adding type registration true_false -> org.hibernate.type.TrueFalseType@75f8f3ae
Adding type registration yes_no -> org.hibernate.type.YesNoType@6b84638f
Adding type registration byte -> org.hibernate.type.ByteType@515315a1
Adding type registration byte -> org.hibernate.type.ByteType@515315a1
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@515315a1
Adding type registration character -> org.hibernate.type.CharacterType@624a2de8
Adding type registration char -> org.hibernate.type.CharacterType@624a2de8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@624a2de8
Adding type registration short -> org.hibernate.type.ShortType@4d586347
Adding type registration short -> org.hibernate.type.ShortType@4d586347
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d586347
Adding type registration integer -> org.hibernate.type.IntegerType@34722aca
Adding type registration int -> org.hibernate.type.IntegerType@34722aca
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34722aca
Adding type registration long -> org.hibernate.type.LongType@36565639
Adding type registration long -> org.hibernate.type.LongType@36565639
Adding type registration java.lang.Long -> org.hibernate.type.LongType@36565639
Adding type registration float -> org.hibernate.type.FloatType@38a45f1a
Adding type registration float -> org.hibernate.type.FloatType@38a45f1a
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38a45f1a
Adding type registration double -> org.hibernate.type.DoubleType@68ff8109
Adding type registration double -> org.hibernate.type.DoubleType@68ff8109
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68ff8109
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30590ed5
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30590ed5
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ea78c10
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ea78c10
Adding type registration string -> org.hibernate.type.StringType@1f09115c
Adding type registration java.lang.String -> org.hibernate.type.StringType@1f09115c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@726e1c92
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9dfb7fa
Adding type registration url -> org.hibernate.type.UrlType@6673e4ea
Adding type registration java.net.URL -> org.hibernate.type.UrlType@6673e4ea
Adding type registration date -> org.hibernate.type.DateType@76390607
Adding type registration java.sql.Date -> org.hibernate.type.DateType@76390607
Adding type registration time -> org.hibernate.type.TimeType@9c9f258
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@9c9f258
Adding type registration timestamp -> org.hibernate.type.TimestampType@56630cdf
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56630cdf
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56630cdf
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55383404
Adding type registration calendar -> org.hibernate.type.CalendarType@5a3d2d71
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5a3d2d71
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5a3d2d71
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4480d94d
Adding type registration locale -> org.hibernate.type.LocaleType@4898bb62
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4898bb62
Adding type registration currency -> org.hibernate.type.CurrencyType@257b1d94
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@257b1d94
Adding type registration timezone -> org.hibernate.type.TimeZoneType@332cfb6a
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@332cfb6a
Adding type registration class -> org.hibernate.type.ClassType@730471c6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@730471c6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@d6a8eb0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@d6a8eb0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31d338ed
Adding type registration binary -> org.hibernate.type.BinaryType@204d9f12
Adding type registration byte[] -> org.hibernate.type.BinaryType@204d9f12
Adding type registration [B -> org.hibernate.type.BinaryType@204d9f12
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e0cfa37
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e0cfa37
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e0cfa37
Adding type registration row_version -> org.hibernate.type.RowVersionType@1cc7bbbf
Adding type registration image -> org.hibernate.type.ImageType@58a50428
Adding type registration characters -> org.hibernate.type.CharArrayType@4211b8c7
Adding type registration char[] -> org.hibernate.type.CharArrayType@4211b8c7
Adding type registration [C -> org.hibernate.type.CharArrayType@4211b8c7
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bc7b735
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bc7b735
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bc7b735
Adding type registration text -> org.hibernate.type.TextType@5c563615
Adding type registration ntext -> org.hibernate.type.NTextType@33a5cc24
Adding type registration blob -> org.hibernate.type.BlobType@c79bb8d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c79bb8d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b325beb
Adding type registration clob -> org.hibernate.type.ClobType@16c0e2cf
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16c0e2cf
Adding type registration nclob -> org.hibernate.type.NClobType@7dcc1485
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7dcc1485
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1be8fdfc
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6812496a
Adding type registration serializable -> org.hibernate.type.SerializableType@3f7384b0
Adding type registration object -> org.hibernate.type.ObjectType@7e2b1334
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e2b1334
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c06fa
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@392f0234
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f38d8b7
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@520d9037
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3236075a
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73498d8a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a7d0e34
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44fad64
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2c61b1aa
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.373839090523983451.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7352, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@77c1e94a, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@78ff7bb5{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.373839090523983451.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@64787b64, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@155a630f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7509ed49]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fdbf6a9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297fb9d0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6ef242]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39678fc3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f9264b3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a56982]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc95508]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd42626]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a02e7ca]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: a322fe91-bed1-45f9-98b1-0e8e96af9692 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@750f87ae: startup date [Sat Nov 04 21:15:41 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.072 seconds (JVM running for 104.893)
Starting Application on LuoRong with PID 6384 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 21:53:55 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cbcd28d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3417 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@42ef0f90
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@51e56398{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1d8b37f0
Adding type registration boolean -> org.hibernate.type.BooleanType@1d8b37f0
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1d8b37f0
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@498f598f
Adding type registration true_false -> org.hibernate.type.TrueFalseType@223132bc
Adding type registration yes_no -> org.hibernate.type.YesNoType@7e857fbc
Adding type registration byte -> org.hibernate.type.ByteType@5a0eafd4
Adding type registration byte -> org.hibernate.type.ByteType@5a0eafd4
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a0eafd4
Adding type registration character -> org.hibernate.type.CharacterType@3c263a66
Adding type registration char -> org.hibernate.type.CharacterType@3c263a66
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c263a66
Adding type registration short -> org.hibernate.type.ShortType@48a1b4ea
Adding type registration short -> org.hibernate.type.ShortType@48a1b4ea
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@48a1b4ea
Adding type registration integer -> org.hibernate.type.IntegerType@666875d2
Adding type registration int -> org.hibernate.type.IntegerType@666875d2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@666875d2
Adding type registration long -> org.hibernate.type.LongType@4051eaf4
Adding type registration long -> org.hibernate.type.LongType@4051eaf4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4051eaf4
Adding type registration float -> org.hibernate.type.FloatType@1c0ce30c
Adding type registration float -> org.hibernate.type.FloatType@1c0ce30c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c0ce30c
Adding type registration double -> org.hibernate.type.DoubleType@49d0950c
Adding type registration double -> org.hibernate.type.DoubleType@49d0950c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@49d0950c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3ab669
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3ab669
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4dbe0a24
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4dbe0a24
Adding type registration string -> org.hibernate.type.StringType@23ea6490
Adding type registration java.lang.String -> org.hibernate.type.StringType@23ea6490
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b1a2b88
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b4caeda
Adding type registration url -> org.hibernate.type.UrlType@1d4d59e8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d4d59e8
Adding type registration date -> org.hibernate.type.DateType@51a26777
Adding type registration java.sql.Date -> org.hibernate.type.DateType@51a26777
Adding type registration time -> org.hibernate.type.TimeType@61a3bde9
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61a3bde9
Adding type registration timestamp -> org.hibernate.type.TimestampType@1e8d66a9
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e8d66a9
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e8d66a9
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1cb1804
Adding type registration calendar -> org.hibernate.type.CalendarType@3ee383ba
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ee383ba
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ee383ba
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1226f374
Adding type registration locale -> org.hibernate.type.LocaleType@7bfdd7c4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7bfdd7c4
Adding type registration currency -> org.hibernate.type.CurrencyType@63bf4d47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63bf4d47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@fb9e5ce
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@fb9e5ce
Adding type registration class -> org.hibernate.type.ClassType@371ca649
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@371ca649
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52170fae
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52170fae
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@674b3409
Adding type registration binary -> org.hibernate.type.BinaryType@77a2f431
Adding type registration byte[] -> org.hibernate.type.BinaryType@77a2f431
Adding type registration [B -> org.hibernate.type.BinaryType@77a2f431
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f0eaa
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f0eaa
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f0eaa
Adding type registration row_version -> org.hibernate.type.RowVersionType@462dfa43
Adding type registration image -> org.hibernate.type.ImageType@6bef3c82
Adding type registration characters -> org.hibernate.type.CharArrayType@7522a927
Adding type registration char[] -> org.hibernate.type.CharArrayType@7522a927
Adding type registration [C -> org.hibernate.type.CharArrayType@7522a927
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@465116ee
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@465116ee
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@465116ee
Adding type registration text -> org.hibernate.type.TextType@5a10e26b
Adding type registration ntext -> org.hibernate.type.NTextType@1f7a65f7
Adding type registration blob -> org.hibernate.type.BlobType@56101a1e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56101a1e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5363cb0e
Adding type registration clob -> org.hibernate.type.ClobType@3e8dff7e
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e8dff7e
Adding type registration nclob -> org.hibernate.type.NClobType@2c894704
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c894704
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@568e6d00
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d39340d
Adding type registration serializable -> org.hibernate.type.SerializableType@3cd2eebe
Adding type registration object -> org.hibernate.type.ObjectType@5bb3f1ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb3f1ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69a032a5
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2d5a200a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c7564a3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@59ff4066
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31a264e6
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d8448a8
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a736dc7
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@492cfc9f
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@27bba758
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3210954713074553481.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=6384, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@354f95ba, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@51e56398{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3210954713074553481.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2033de18, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b8e2788]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a737d4b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ac73ded]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@582feca1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@598e3479]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d58dd11]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452c7955]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73cf41]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@991f339]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db0033e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ac406ad]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3fa7308e
Registering SessionFactory: ec736df5-9cbc-40c4-a917-91cd0fc0cd85 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@2b456dc4
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 21:53:55 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.881 seconds (JVM running for 10.459)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 21:53:55 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 6384 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@776f3c53: startup date [Sat Nov 04 21:55:01 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cbcd28d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 867 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@34b2618d
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2ece5682{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1d8b37f0
Adding type registration boolean -> org.hibernate.type.BooleanType@1d8b37f0
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1d8b37f0
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@498f598f
Adding type registration true_false -> org.hibernate.type.TrueFalseType@223132bc
Adding type registration yes_no -> org.hibernate.type.YesNoType@7e857fbc
Adding type registration byte -> org.hibernate.type.ByteType@5a0eafd4
Adding type registration byte -> org.hibernate.type.ByteType@5a0eafd4
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a0eafd4
Adding type registration character -> org.hibernate.type.CharacterType@3c263a66
Adding type registration char -> org.hibernate.type.CharacterType@3c263a66
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c263a66
Adding type registration short -> org.hibernate.type.ShortType@48a1b4ea
Adding type registration short -> org.hibernate.type.ShortType@48a1b4ea
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@48a1b4ea
Adding type registration integer -> org.hibernate.type.IntegerType@666875d2
Adding type registration int -> org.hibernate.type.IntegerType@666875d2
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@666875d2
Adding type registration long -> org.hibernate.type.LongType@4051eaf4
Adding type registration long -> org.hibernate.type.LongType@4051eaf4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4051eaf4
Adding type registration float -> org.hibernate.type.FloatType@1c0ce30c
Adding type registration float -> org.hibernate.type.FloatType@1c0ce30c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c0ce30c
Adding type registration double -> org.hibernate.type.DoubleType@49d0950c
Adding type registration double -> org.hibernate.type.DoubleType@49d0950c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@49d0950c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f3ab669
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f3ab669
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4dbe0a24
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4dbe0a24
Adding type registration string -> org.hibernate.type.StringType@23ea6490
Adding type registration java.lang.String -> org.hibernate.type.StringType@23ea6490
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b1a2b88
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b4caeda
Adding type registration url -> org.hibernate.type.UrlType@1d4d59e8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d4d59e8
Adding type registration date -> org.hibernate.type.DateType@51a26777
Adding type registration java.sql.Date -> org.hibernate.type.DateType@51a26777
Adding type registration time -> org.hibernate.type.TimeType@61a3bde9
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61a3bde9
Adding type registration timestamp -> org.hibernate.type.TimestampType@1e8d66a9
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e8d66a9
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e8d66a9
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1cb1804
Adding type registration calendar -> org.hibernate.type.CalendarType@3ee383ba
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ee383ba
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ee383ba
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1226f374
Adding type registration locale -> org.hibernate.type.LocaleType@7bfdd7c4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7bfdd7c4
Adding type registration currency -> org.hibernate.type.CurrencyType@63bf4d47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63bf4d47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@fb9e5ce
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@fb9e5ce
Adding type registration class -> org.hibernate.type.ClassType@371ca649
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@371ca649
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52170fae
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52170fae
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@674b3409
Adding type registration binary -> org.hibernate.type.BinaryType@77a2f431
Adding type registration byte[] -> org.hibernate.type.BinaryType@77a2f431
Adding type registration [B -> org.hibernate.type.BinaryType@77a2f431
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f0eaa
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f0eaa
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f0eaa
Adding type registration row_version -> org.hibernate.type.RowVersionType@462dfa43
Adding type registration image -> org.hibernate.type.ImageType@6bef3c82
Adding type registration characters -> org.hibernate.type.CharArrayType@7522a927
Adding type registration char[] -> org.hibernate.type.CharArrayType@7522a927
Adding type registration [C -> org.hibernate.type.CharArrayType@7522a927
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@465116ee
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@465116ee
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@465116ee
Adding type registration text -> org.hibernate.type.TextType@5a10e26b
Adding type registration ntext -> org.hibernate.type.NTextType@1f7a65f7
Adding type registration blob -> org.hibernate.type.BlobType@56101a1e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56101a1e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5363cb0e
Adding type registration clob -> org.hibernate.type.ClobType@3e8dff7e
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e8dff7e
Adding type registration nclob -> org.hibernate.type.NClobType@2c894704
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c894704
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@568e6d00
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d39340d
Adding type registration serializable -> org.hibernate.type.SerializableType@3cd2eebe
Adding type registration object -> org.hibernate.type.ObjectType@5bb3f1ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb3f1ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@710a5fc6
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a627780
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@774dede7
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d0b1f92
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e5c8d9a
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@37db39a6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2fe1d86f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a03b58e
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@27bba758
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3210954713074553481.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=6384, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@72fd8cc1, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2ece5682{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3210954713074553481.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5c9399d0, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a0782d3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bc7561]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d5e5d41]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aca162d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a6c6c3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@457ab680]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15d28aee]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@570440d1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37913302]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54aae19e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7642f10a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 615de162-9067-4bfd-bdc2-5493177f2f9d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@776f3c53: startup date [Sat Nov 04 21:55:01 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.958 seconds (JVM running for 69.55)
Starting Application on LuoRong with PID 11212 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 21:56:43 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8574b98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3277 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@63d0ca11{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@780fabbe
Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a17209
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cd237d9
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration character -> org.hibernate.type.CharacterType@38d41317
Adding type registration char -> org.hibernate.type.CharacterType@38d41317
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38d41317
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56553a27
Adding type registration integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration int -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration java.lang.Long -> org.hibernate.type.LongType@23519df
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration string -> org.hibernate.type.StringType@226a0706
Adding type registration java.lang.String -> org.hibernate.type.StringType@226a0706
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@577d5343
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3dd24302
Adding type registration url -> org.hibernate.type.UrlType@5836594a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5836594a
Adding type registration date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@237ac717
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@269170cb
Adding type registration calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115ad05e
Adding type registration locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration timezone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration class -> org.hibernate.type.ClassType@44385aad
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44385aad
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@516471c
Adding type registration binary -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration byte[] -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration [B -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration row_version -> org.hibernate.type.RowVersionType@1619b6e4
Adding type registration image -> org.hibernate.type.ImageType@29e741b7
Adding type registration characters -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration char[] -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration [C -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration text -> org.hibernate.type.TextType@55d9d52f
Adding type registration ntext -> org.hibernate.type.NTextType@33b73643
Adding type registration blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eb1f4be
Adding type registration clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration nclob -> org.hibernate.type.NClobType@2dab779a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2dab779a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74777d43
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6757700c
Adding type registration serializable -> org.hibernate.type.SerializableType@31c17015
Adding type registration object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33700b44
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@699e4eb4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5bd28153
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d1c21e2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e05272e
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15f523b4
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a62e040
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6adc9df
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a515a91
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11212, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ef12a36, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@63d0ca11{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@48688574, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16f32cf1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c9d88d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@353c74cf]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a40ea8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@715fd60e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@524bb35f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6024e3d5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bf5145]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a705e07]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@718d0302]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d1dbbae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4cdbba6b
Registering SessionFactory: 699d0c90-6b60-42b3-8958-4ed4ac346990 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@48ba471f
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 21:56:43 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.186 seconds (JVM running for 9.788)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 21:56:43 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 11212 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1a94bdb5: startup date [Sat Nov 04 21:58:24 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8574b98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 921 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@77952c5b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6b338c7f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@780fabbe
Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a17209
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cd237d9
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration character -> org.hibernate.type.CharacterType@38d41317
Adding type registration char -> org.hibernate.type.CharacterType@38d41317
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38d41317
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56553a27
Adding type registration integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration int -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration java.lang.Long -> org.hibernate.type.LongType@23519df
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration string -> org.hibernate.type.StringType@226a0706
Adding type registration java.lang.String -> org.hibernate.type.StringType@226a0706
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@577d5343
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3dd24302
Adding type registration url -> org.hibernate.type.UrlType@5836594a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5836594a
Adding type registration date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@237ac717
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@269170cb
Adding type registration calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115ad05e
Adding type registration locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration timezone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration class -> org.hibernate.type.ClassType@44385aad
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44385aad
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@516471c
Adding type registration binary -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration byte[] -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration [B -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration row_version -> org.hibernate.type.RowVersionType@1619b6e4
Adding type registration image -> org.hibernate.type.ImageType@29e741b7
Adding type registration characters -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration char[] -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration [C -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration text -> org.hibernate.type.TextType@55d9d52f
Adding type registration ntext -> org.hibernate.type.NTextType@33b73643
Adding type registration blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eb1f4be
Adding type registration clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration nclob -> org.hibernate.type.NClobType@2dab779a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2dab779a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74777d43
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6757700c
Adding type registration serializable -> org.hibernate.type.SerializableType@31c17015
Adding type registration object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e4d39b3
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@766f60b8
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61d24dfb
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40badb79
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@671de27c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6a7a3487
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@193401a6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f4370ea
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a515a91
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11212, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@d9e695c, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6b338c7f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@60475822, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@689353db]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f8c454]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ee2f3ae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48aada35]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4685f80e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dddc388]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433beccf]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c1b14f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aa42197]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b011cea]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69fe05b1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: f9a2b1bd-403a-49e2-9cf4-f67142e49494 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1a94bdb5: startup date [Sat Nov 04 21:58:24 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/login],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.232 seconds (JVM running for 105.311)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1a94bdb5: startup date [Sat Nov 04 21:58:24 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11212 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16fbca98: startup date [Sat Nov 04 22:00:04 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8574b98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 832 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1348784d
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@51418815{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@780fabbe
Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a17209
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cd237d9
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration character -> org.hibernate.type.CharacterType@38d41317
Adding type registration char -> org.hibernate.type.CharacterType@38d41317
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38d41317
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56553a27
Adding type registration integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration int -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration java.lang.Long -> org.hibernate.type.LongType@23519df
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration string -> org.hibernate.type.StringType@226a0706
Adding type registration java.lang.String -> org.hibernate.type.StringType@226a0706
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@577d5343
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3dd24302
Adding type registration url -> org.hibernate.type.UrlType@5836594a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5836594a
Adding type registration date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@237ac717
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@269170cb
Adding type registration calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115ad05e
Adding type registration locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration timezone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration class -> org.hibernate.type.ClassType@44385aad
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44385aad
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@516471c
Adding type registration binary -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration byte[] -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration [B -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration row_version -> org.hibernate.type.RowVersionType@1619b6e4
Adding type registration image -> org.hibernate.type.ImageType@29e741b7
Adding type registration characters -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration char[] -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration [C -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration text -> org.hibernate.type.TextType@55d9d52f
Adding type registration ntext -> org.hibernate.type.NTextType@33b73643
Adding type registration blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eb1f4be
Adding type registration clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration nclob -> org.hibernate.type.NClobType@2dab779a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2dab779a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74777d43
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6757700c
Adding type registration serializable -> org.hibernate.type.SerializableType@31c17015
Adding type registration object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@25de2b
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27287c19
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24898513
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@12612f58
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c1b7fb9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@58371497
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@307ea39f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2b7e4127
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a515a91
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11212, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@61ec05e, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@51418815{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1d262cb, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@541e7cb9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d4e3b2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17393b2d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44f292ba]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1234497]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38414ab9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1390f67d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a090564]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ba6db4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e35b6c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d80357d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: b467de9e-a635-42ab-9b6f-1dae5d61323c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16fbca98: startup date [Sat Nov 04 22:00:04 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.905 seconds (JVM running for 204.562)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16fbca98: startup date [Sat Nov 04 22:00:04 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Starting Application on LuoRong with PID 11212 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ed6ccb: startup date [Sat Nov 04 22:01:13 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8574b98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 690 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@719fb6db
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@166e9c05{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@780fabbe
Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a17209
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cd237d9
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration character -> org.hibernate.type.CharacterType@38d41317
Adding type registration char -> org.hibernate.type.CharacterType@38d41317
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38d41317
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56553a27
Adding type registration integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration int -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration java.lang.Long -> org.hibernate.type.LongType@23519df
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration string -> org.hibernate.type.StringType@226a0706
Adding type registration java.lang.String -> org.hibernate.type.StringType@226a0706
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@577d5343
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3dd24302
Adding type registration url -> org.hibernate.type.UrlType@5836594a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5836594a
Adding type registration date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@237ac717
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@269170cb
Adding type registration calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115ad05e
Adding type registration locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration timezone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration class -> org.hibernate.type.ClassType@44385aad
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44385aad
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@516471c
Adding type registration binary -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration byte[] -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration [B -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration row_version -> org.hibernate.type.RowVersionType@1619b6e4
Adding type registration image -> org.hibernate.type.ImageType@29e741b7
Adding type registration characters -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration char[] -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration [C -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration text -> org.hibernate.type.TextType@55d9d52f
Adding type registration ntext -> org.hibernate.type.NTextType@33b73643
Adding type registration blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eb1f4be
Adding type registration clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration nclob -> org.hibernate.type.NClobType@2dab779a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2dab779a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74777d43
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6757700c
Adding type registration serializable -> org.hibernate.type.SerializableType@31c17015
Adding type registration object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a91c383
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@247e950f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d492845
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@497fc24a
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d669d3d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de0bd73
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@690fa78a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ed55573
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a515a91
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11212, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7bb6ceb4, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@166e9c05{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@747d3fa, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3829e35d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14098f15]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4231a6d8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531591a9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0cf0a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1771be1c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bf20024]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e33c361]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c7b22e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4126f817]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c8542a7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 44c07b2b-b2a4-4e86-87df-db91b7f6ca9f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ed6ccb: startup date [Sat Nov 04 22:01:13 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.756 seconds (JVM running for 273.513)
Starting Application on LuoRong with PID 6132 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51f886e1: startup date [Sat Nov 04 22:01:42 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$30bb55df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3229 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4677f8a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@4d741fdc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@3577e449
Adding type registration boolean -> org.hibernate.type.BooleanType@3577e449
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3577e449
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@31f56ec3
Adding type registration true_false -> org.hibernate.type.TrueFalseType@22da498e
Adding type registration yes_no -> org.hibernate.type.YesNoType@fecff3b
Adding type registration byte -> org.hibernate.type.ByteType@20f169da
Adding type registration byte -> org.hibernate.type.ByteType@20f169da
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20f169da
Adding type registration character -> org.hibernate.type.CharacterType@5ed4665c
Adding type registration char -> org.hibernate.type.CharacterType@5ed4665c
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5ed4665c
Adding type registration short -> org.hibernate.type.ShortType@17b116ab
Adding type registration short -> org.hibernate.type.ShortType@17b116ab
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17b116ab
Adding type registration integer -> org.hibernate.type.IntegerType@4a6f5d24
Adding type registration int -> org.hibernate.type.IntegerType@4a6f5d24
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4a6f5d24
Adding type registration long -> org.hibernate.type.LongType@6b6146ae
Adding type registration long -> org.hibernate.type.LongType@6b6146ae
Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b6146ae
Adding type registration float -> org.hibernate.type.FloatType@5e4eab41
Adding type registration float -> org.hibernate.type.FloatType@5e4eab41
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5e4eab41
Adding type registration double -> org.hibernate.type.DoubleType@54108e88
Adding type registration double -> org.hibernate.type.DoubleType@54108e88
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54108e88
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61279874
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61279874
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@328332aa
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@328332aa
Adding type registration string -> org.hibernate.type.StringType@4e5f994a
Adding type registration java.lang.String -> org.hibernate.type.StringType@4e5f994a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@380a4778
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2327ee6b
Adding type registration url -> org.hibernate.type.UrlType@18a170ed
Adding type registration java.net.URL -> org.hibernate.type.UrlType@18a170ed
Adding type registration date -> org.hibernate.type.DateType@148858bf
Adding type registration java.sql.Date -> org.hibernate.type.DateType@148858bf
Adding type registration time -> org.hibernate.type.TimeType@7a20a493
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7a20a493
Adding type registration timestamp -> org.hibernate.type.TimestampType@2067d212
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2067d212
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2067d212
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2eb05e9b
Adding type registration calendar -> org.hibernate.type.CalendarType@11b6ba5d
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11b6ba5d
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11b6ba5d
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@402da16a
Adding type registration locale -> org.hibernate.type.LocaleType@127a2c09
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@127a2c09
Adding type registration currency -> org.hibernate.type.CurrencyType@6a8b03d
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6a8b03d
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7ec6788
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7ec6788
Adding type registration class -> org.hibernate.type.ClassType@46b4d9ab
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46b4d9ab
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58a86447
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58a86447
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d401fdc
Adding type registration binary -> org.hibernate.type.BinaryType@3e433b67
Adding type registration byte[] -> org.hibernate.type.BinaryType@3e433b67
Adding type registration [B -> org.hibernate.type.BinaryType@3e433b67
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c6a7275
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c6a7275
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c6a7275
Adding type registration row_version -> org.hibernate.type.RowVersionType@2ad5d228
Adding type registration image -> org.hibernate.type.ImageType@32da51e
Adding type registration characters -> org.hibernate.type.CharArrayType@6f3ac493
Adding type registration char[] -> org.hibernate.type.CharArrayType@6f3ac493
Adding type registration [C -> org.hibernate.type.CharArrayType@6f3ac493
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@426a294f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@426a294f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@426a294f
Adding type registration text -> org.hibernate.type.TextType@12be68dd
Adding type registration ntext -> org.hibernate.type.NTextType@768655b5
Adding type registration blob -> org.hibernate.type.BlobType@13af63aa
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13af63aa
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4f9b64ce
Adding type registration clob -> org.hibernate.type.ClobType@557f78db
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@557f78db
Adding type registration nclob -> org.hibernate.type.NClobType@2d2256e9
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d2256e9
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2703c0f6
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@52469843
Adding type registration serializable -> org.hibernate.type.SerializableType@5732cc4d
Adding type registration object -> org.hibernate.type.ObjectType@4bd83934
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bd83934
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1af345b5
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10e8de46
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d13c754
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@70e3afb4
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@703d82f0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26f1685f
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5fb22b2
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6888b3b6
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c370f63
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1183873605418362439.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=6132, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18c32b87, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@4d741fdc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1183873605418362439.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@47a3081e, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30426842]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b6b3aa1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39dcc80b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27de4d84]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29cff004]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fb41b48]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68221a71]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab2c17]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19e8e9dd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fabc329]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cefaec6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@49004a26
Registering SessionFactory: 42f3b567-0bec-48d3-ae73-e6a2fa98c9ae (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@210a8551
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51f886e1: startup date [Sat Nov 04 22:01:42 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Unable to start LiveReload server
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Pausing ProtocolHandler ["http-nio-8080"]
Stopping service Tomcat


Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51f886e1: startup date [Sat Nov 04 22:01:42 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 4 ms
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ed6ccb: startup date [Sat Nov 04 22:01:13 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11212 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4223c87f: startup date [Sat Nov 04 22:02:32 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8574b98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 691 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@294068bf
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@39b747e6{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@780fabbe
Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a17209
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cd237d9
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration character -> org.hibernate.type.CharacterType@38d41317
Adding type registration char -> org.hibernate.type.CharacterType@38d41317
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38d41317
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56553a27
Adding type registration integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration int -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration java.lang.Long -> org.hibernate.type.LongType@23519df
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration string -> org.hibernate.type.StringType@226a0706
Adding type registration java.lang.String -> org.hibernate.type.StringType@226a0706
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@577d5343
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3dd24302
Adding type registration url -> org.hibernate.type.UrlType@5836594a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5836594a
Adding type registration date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@237ac717
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@269170cb
Adding type registration calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115ad05e
Adding type registration locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration timezone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration class -> org.hibernate.type.ClassType@44385aad
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44385aad
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@516471c
Adding type registration binary -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration byte[] -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration [B -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration row_version -> org.hibernate.type.RowVersionType@1619b6e4
Adding type registration image -> org.hibernate.type.ImageType@29e741b7
Adding type registration characters -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration char[] -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration [C -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration text -> org.hibernate.type.TextType@55d9d52f
Adding type registration ntext -> org.hibernate.type.NTextType@33b73643
Adding type registration blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eb1f4be
Adding type registration clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration nclob -> org.hibernate.type.NClobType@2dab779a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2dab779a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74777d43
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6757700c
Adding type registration serializable -> org.hibernate.type.SerializableType@31c17015
Adding type registration object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@271d866c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4afe47ca
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21d3ca14
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@264f5813
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6d2a9450
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55d24e28
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a6eadec
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36bdef72
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a515a91
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11212, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2833eb79, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@39b747e6{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4f1cae22, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@371d520c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44bef63]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4032304a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a24301a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2482915]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b5f56]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f7cdbe]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59729910]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67948ce]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0985e0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38aa9faa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 55930705-adaf-4e51-8191-b03d720173c6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4223c87f: startup date [Sat Nov 04 22:02:32 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.522 seconds (JVM running for 352.376)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4223c87f: startup date [Sat Nov 04 22:02:32 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 11212 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
No active profile set, falling back to default profiles: default
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7fb232fe: startup date [Sat Nov 04 22:04:28 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8574b98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 702 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@64d1a5eb
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7fe805ad{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@780fabbe
Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a17209
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cd237d9
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration character -> org.hibernate.type.CharacterType@38d41317
Adding type registration char -> org.hibernate.type.CharacterType@38d41317
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38d41317
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56553a27
Adding type registration integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration int -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration java.lang.Long -> org.hibernate.type.LongType@23519df
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration string -> org.hibernate.type.StringType@226a0706
Adding type registration java.lang.String -> org.hibernate.type.StringType@226a0706
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@577d5343
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3dd24302
Adding type registration url -> org.hibernate.type.UrlType@5836594a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5836594a
Adding type registration date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@237ac717
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@269170cb
Adding type registration calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115ad05e
Adding type registration locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration timezone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration class -> org.hibernate.type.ClassType@44385aad
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44385aad
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@516471c
Adding type registration binary -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration byte[] -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration [B -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration row_version -> org.hibernate.type.RowVersionType@1619b6e4
Adding type registration image -> org.hibernate.type.ImageType@29e741b7
Adding type registration characters -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration char[] -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration [C -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration text -> org.hibernate.type.TextType@55d9d52f
Adding type registration ntext -> org.hibernate.type.NTextType@33b73643
Adding type registration blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eb1f4be
Adding type registration clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration nclob -> org.hibernate.type.NClobType@2dab779a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2dab779a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74777d43
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6757700c
Adding type registration serializable -> org.hibernate.type.SerializableType@31c17015
Adding type registration object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@352e84d5
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51a6c78c
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d44c0be
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fc2d75c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e8bea5d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@69f6c6a7
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@326cba17
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bcde331
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a515a91
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11212, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6c41263a, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@7fe805ad{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2059278a, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc03644]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56111c3e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fd84e11]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e832e54]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33b131fc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d474027]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bdcbf20]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@faae382]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121b08a2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0e3630]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e3f176c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 3080e778-a8ae-4936-a793-3294ead5e883 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7fb232fe: startup date [Sat Nov 04 22:04:28 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.636 seconds (JVM running for 468.614)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 5 ms
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7fb232fe: startup date [Sat Nov 04 22:04:28 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11212 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69538862: startup date [Sat Nov 04 22:05:09 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8574b98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 605 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ecd5c58
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1a0098ec{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c58da11
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@780fabbe
Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a17209
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cd237d9
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112ee8ab
Adding type registration character -> org.hibernate.type.CharacterType@38d41317
Adding type registration char -> org.hibernate.type.CharacterType@38d41317
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38d41317
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration short -> org.hibernate.type.ShortType@56553a27
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56553a27
Adding type registration integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration int -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f59d16a
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration long -> org.hibernate.type.LongType@23519df
Adding type registration java.lang.Long -> org.hibernate.type.LongType@23519df
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a248f5c
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58fb9357
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3efa49d9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f1fb247
Adding type registration string -> org.hibernate.type.StringType@226a0706
Adding type registration java.lang.String -> org.hibernate.type.StringType@226a0706
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@577d5343
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3dd24302
Adding type registration url -> org.hibernate.type.UrlType@5836594a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5836594a
Adding type registration date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2bd8ebd
Adding type registration time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@32d7ee6b
Adding type registration timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@237ac717
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@237ac717
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@269170cb
Adding type registration calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50bda1e2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@115ad05e
Adding type registration locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@397ffc0b
Adding type registration currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ae48740
Adding type registration timezone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a5711bc
Adding type registration class -> org.hibernate.type.ClassType@44385aad
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@44385aad
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5326c2f6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@516471c
Adding type registration binary -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration byte[] -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration [B -> org.hibernate.type.BinaryType@1fd4b42
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3299eed1
Adding type registration row_version -> org.hibernate.type.RowVersionType@1619b6e4
Adding type registration image -> org.hibernate.type.ImageType@29e741b7
Adding type registration characters -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration char[] -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration [C -> org.hibernate.type.CharArrayType@71c07d64
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e029c39
Adding type registration text -> org.hibernate.type.TextType@55d9d52f
Adding type registration ntext -> org.hibernate.type.NTextType@33b73643
Adding type registration blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3aae4c7d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eb1f4be
Adding type registration clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2d32fbee
Adding type registration nclob -> org.hibernate.type.NClobType@2dab779a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2dab779a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74777d43
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6757700c
Adding type registration serializable -> org.hibernate.type.SerializableType@31c17015
Adding type registration object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23cf2f79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@658eb983
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1dc7a338
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3184f9fa
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6e8c0be5
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7e5ef516
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5ea04786
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48fd2e81
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@46a0d758
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@a515a91
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11212, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@174e4b83, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1a0098ec{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.7224611710240943883.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@51c455cf, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e347cea]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67b7dd78]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5234c0b2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601c4af0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8998bd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794d47ac]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a6469d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d3283b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc8d460]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e55f24]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ccb190]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 921f4a5a-b6f8-4cda-8396-5afed3473b00 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy48
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69538862: startup date [Sat Nov 04 22:05:09 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.417 seconds (JVM running for 509.046)
Starting Application on LuoRong with PID 7532 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 22:06:14 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d03f2342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3084 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@42ef0f90
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6cbe95f9{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29b18b62
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b51b7d2
Adding type registration yes_no -> org.hibernate.type.YesNoType@485cbe42
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration char -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68d54405
Adding type registration integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration int -> org.hibernate.type.IntegerType@1594ac19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e91bff
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ef38440
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6324988e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration string -> org.hibernate.type.StringType@1c01841f
Adding type registration java.lang.String -> org.hibernate.type.StringType@1c01841f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d9e8825
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ddb396
Adding type registration url -> org.hibernate.type.UrlType@70675e33
Adding type registration java.net.URL -> org.hibernate.type.UrlType@70675e33
Adding type registration date -> org.hibernate.type.DateType@1fcf3849
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fcf3849
Adding type registration time -> org.hibernate.type.TimeType@55eae73f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55eae73f
Adding type registration timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@579ce42e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31463796
Adding type registration calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d052351
Adding type registration locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration class -> org.hibernate.type.ClassType@75b588e3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75b588e3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30055505
Adding type registration binary -> org.hibernate.type.BinaryType@23d467cf
Adding type registration byte[] -> org.hibernate.type.BinaryType@23d467cf
Adding type registration [B -> org.hibernate.type.BinaryType@23d467cf
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration row_version -> org.hibernate.type.RowVersionType@7b7bbeee
Adding type registration image -> org.hibernate.type.ImageType@2e1d2c3f
Adding type registration characters -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration char[] -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration [C -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration text -> org.hibernate.type.TextType@19167f1
Adding type registration ntext -> org.hibernate.type.NTextType@466e2aa3
Adding type registration blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ec5679
Adding type registration clob -> org.hibernate.type.ClobType@b51432d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b51432d
Adding type registration nclob -> org.hibernate.type.NClobType@16ccac5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16ccac5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31d3b31d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1de2470
Adding type registration serializable -> org.hibernate.type.SerializableType@6123cccf
Adding type registration object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64a72b1
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69a032a5
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d5a200a
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c7564a3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59ff4066
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31a264e6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4d8448a8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a736dc7
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b9e3
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7532, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@16a77757, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6cbe95f9{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@354f95ba, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@444d449c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b330208]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3450db1c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69874dff]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a154483]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab57202]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da9a565]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64a82690]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fd1c147]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c28d83d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cca2636]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@355e64e6
Registering SessionFactory: 1bfe27f3-a766-4d00-a52a-5adbe31fe3f8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1e07bf59
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 22:06:14 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.786 seconds (JVM running for 9.343)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 22:06:14 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 7532 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e1ef7bb: startup date [Sat Nov 04 22:07:01 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d03f2342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 825 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6e4da1b7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@26c19588{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29b18b62
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b51b7d2
Adding type registration yes_no -> org.hibernate.type.YesNoType@485cbe42
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration char -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68d54405
Adding type registration integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration int -> org.hibernate.type.IntegerType@1594ac19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e91bff
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ef38440
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6324988e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration string -> org.hibernate.type.StringType@1c01841f
Adding type registration java.lang.String -> org.hibernate.type.StringType@1c01841f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d9e8825
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ddb396
Adding type registration url -> org.hibernate.type.UrlType@70675e33
Adding type registration java.net.URL -> org.hibernate.type.UrlType@70675e33
Adding type registration date -> org.hibernate.type.DateType@1fcf3849
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fcf3849
Adding type registration time -> org.hibernate.type.TimeType@55eae73f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55eae73f
Adding type registration timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@579ce42e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31463796
Adding type registration calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d052351
Adding type registration locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration class -> org.hibernate.type.ClassType@75b588e3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75b588e3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30055505
Adding type registration binary -> org.hibernate.type.BinaryType@23d467cf
Adding type registration byte[] -> org.hibernate.type.BinaryType@23d467cf
Adding type registration [B -> org.hibernate.type.BinaryType@23d467cf
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration row_version -> org.hibernate.type.RowVersionType@7b7bbeee
Adding type registration image -> org.hibernate.type.ImageType@2e1d2c3f
Adding type registration characters -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration char[] -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration [C -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration text -> org.hibernate.type.TextType@19167f1
Adding type registration ntext -> org.hibernate.type.NTextType@466e2aa3
Adding type registration blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ec5679
Adding type registration clob -> org.hibernate.type.ClobType@b51432d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b51432d
Adding type registration nclob -> org.hibernate.type.NClobType@16ccac5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16ccac5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31d3b31d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1de2470
Adding type registration serializable -> org.hibernate.type.SerializableType@6123cccf
Adding type registration object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7707b6a6
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ee2f582
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b0a7040
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@54e95267
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e117cda
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6726c47f
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2fe620ab
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3102255a
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b9e3
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7532, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@63e88314, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@26c19588{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7d4dfd78, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45a7a9e8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49064e28]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76995a93]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68003aee]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10ee242d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@820bf07]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383798e8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25989159]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30617722]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1747ec63]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@326340a7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: d6d098b5-afba-4abf-b0fd-9fcd2e2d110d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e1ef7bb: startup date [Sat Nov 04 22:07:01 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.116 seconds (JVM running for 50.494)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e1ef7bb: startup date [Sat Nov 04 22:07:01 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 7532 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c9f31e5: startup date [Sat Nov 04 22:09:26 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d03f2342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 723 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73807076
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@63b11dbb{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29b18b62
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b51b7d2
Adding type registration yes_no -> org.hibernate.type.YesNoType@485cbe42
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration char -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68d54405
Adding type registration integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration int -> org.hibernate.type.IntegerType@1594ac19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e91bff
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ef38440
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6324988e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration string -> org.hibernate.type.StringType@1c01841f
Adding type registration java.lang.String -> org.hibernate.type.StringType@1c01841f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d9e8825
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ddb396
Adding type registration url -> org.hibernate.type.UrlType@70675e33
Adding type registration java.net.URL -> org.hibernate.type.UrlType@70675e33
Adding type registration date -> org.hibernate.type.DateType@1fcf3849
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fcf3849
Adding type registration time -> org.hibernate.type.TimeType@55eae73f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55eae73f
Adding type registration timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@579ce42e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31463796
Adding type registration calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d052351
Adding type registration locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration class -> org.hibernate.type.ClassType@75b588e3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75b588e3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30055505
Adding type registration binary -> org.hibernate.type.BinaryType@23d467cf
Adding type registration byte[] -> org.hibernate.type.BinaryType@23d467cf
Adding type registration [B -> org.hibernate.type.BinaryType@23d467cf
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration row_version -> org.hibernate.type.RowVersionType@7b7bbeee
Adding type registration image -> org.hibernate.type.ImageType@2e1d2c3f
Adding type registration characters -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration char[] -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration [C -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration text -> org.hibernate.type.TextType@19167f1
Adding type registration ntext -> org.hibernate.type.NTextType@466e2aa3
Adding type registration blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ec5679
Adding type registration clob -> org.hibernate.type.ClobType@b51432d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b51432d
Adding type registration nclob -> org.hibernate.type.NClobType@16ccac5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16ccac5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31d3b31d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1de2470
Adding type registration serializable -> org.hibernate.type.SerializableType@6123cccf
Adding type registration object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@86647db
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@286eb07d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7544f200
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63e90c26
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@598bd71f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4bb790b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@56bd5f6e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d9ef1a3
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b9e3
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7532, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7f7f6d09, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@63b11dbb{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@55b9dc3d, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cb52b42]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eef4720]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285438fe]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433846dc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60fff818]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e1ade9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1009ff]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47c13a82]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e3200f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e04987e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30ed36bb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: eb150a85-0dd7-4562-a525-9edf2d885acf (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c9f31e5: startup date [Sat Nov 04 22:09:26 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.668 seconds (JVM running for 195.023)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 5 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c9f31e5: startup date [Sat Nov 04 22:09:26 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Starting Application on LuoRong with PID 7532 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35bc1853: startup date [Sat Nov 04 22:09:50 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d03f2342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 922 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@196f4248
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@f37cca5{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29b18b62
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b51b7d2
Adding type registration yes_no -> org.hibernate.type.YesNoType@485cbe42
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration char -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68d54405
Adding type registration integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration int -> org.hibernate.type.IntegerType@1594ac19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e91bff
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ef38440
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6324988e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration string -> org.hibernate.type.StringType@1c01841f
Adding type registration java.lang.String -> org.hibernate.type.StringType@1c01841f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d9e8825
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ddb396
Adding type registration url -> org.hibernate.type.UrlType@70675e33
Adding type registration java.net.URL -> org.hibernate.type.UrlType@70675e33
Adding type registration date -> org.hibernate.type.DateType@1fcf3849
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fcf3849
Adding type registration time -> org.hibernate.type.TimeType@55eae73f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55eae73f
Adding type registration timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@579ce42e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31463796
Adding type registration calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d052351
Adding type registration locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration class -> org.hibernate.type.ClassType@75b588e3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75b588e3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30055505
Adding type registration binary -> org.hibernate.type.BinaryType@23d467cf
Adding type registration byte[] -> org.hibernate.type.BinaryType@23d467cf
Adding type registration [B -> org.hibernate.type.BinaryType@23d467cf
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration row_version -> org.hibernate.type.RowVersionType@7b7bbeee
Adding type registration image -> org.hibernate.type.ImageType@2e1d2c3f
Adding type registration characters -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration char[] -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration [C -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration text -> org.hibernate.type.TextType@19167f1
Adding type registration ntext -> org.hibernate.type.NTextType@466e2aa3
Adding type registration blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ec5679
Adding type registration clob -> org.hibernate.type.ClobType@b51432d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b51432d
Adding type registration nclob -> org.hibernate.type.NClobType@16ccac5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16ccac5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31d3b31d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1de2470
Adding type registration serializable -> org.hibernate.type.SerializableType@6123cccf
Adding type registration object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1cbed76
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7bc24dc5
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@60cb1b69
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@675de8a7
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@39230967
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50e6c7e3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@68ce8ec5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@60de4bab
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b9e3
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7532, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4fe5e267, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@f37cca5{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6d5d4613, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d62b00b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f5d613e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3653d582]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fa96ec8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37a21e8a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6536c48f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@743d3998]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f23488d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70e8508e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e0ab81e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b57eae]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: eb4218bd-58b1-4f3d-973e-bc6d8c66a265 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35bc1853: startup date [Sat Nov 04 22:09:50 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.05 seconds (JVM running for 219.359)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35bc1853: startup date [Sat Nov 04 22:09:50 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 7532 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5999be8e: startup date [Sat Nov 04 22:10:10 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d03f2342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 669 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4da8eb16
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@33406257{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29b18b62
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b51b7d2
Adding type registration yes_no -> org.hibernate.type.YesNoType@485cbe42
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration char -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68d54405
Adding type registration integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration int -> org.hibernate.type.IntegerType@1594ac19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e91bff
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ef38440
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6324988e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration string -> org.hibernate.type.StringType@1c01841f
Adding type registration java.lang.String -> org.hibernate.type.StringType@1c01841f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d9e8825
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ddb396
Adding type registration url -> org.hibernate.type.UrlType@70675e33
Adding type registration java.net.URL -> org.hibernate.type.UrlType@70675e33
Adding type registration date -> org.hibernate.type.DateType@1fcf3849
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fcf3849
Adding type registration time -> org.hibernate.type.TimeType@55eae73f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55eae73f
Adding type registration timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@579ce42e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31463796
Adding type registration calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d052351
Adding type registration locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration class -> org.hibernate.type.ClassType@75b588e3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75b588e3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30055505
Adding type registration binary -> org.hibernate.type.BinaryType@23d467cf
Adding type registration byte[] -> org.hibernate.type.BinaryType@23d467cf
Adding type registration [B -> org.hibernate.type.BinaryType@23d467cf
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration row_version -> org.hibernate.type.RowVersionType@7b7bbeee
Adding type registration image -> org.hibernate.type.ImageType@2e1d2c3f
Adding type registration characters -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration char[] -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration [C -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration text -> org.hibernate.type.TextType@19167f1
Adding type registration ntext -> org.hibernate.type.NTextType@466e2aa3
Adding type registration blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ec5679
Adding type registration clob -> org.hibernate.type.ClobType@b51432d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b51432d
Adding type registration nclob -> org.hibernate.type.NClobType@16ccac5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16ccac5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31d3b31d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1de2470
Adding type registration serializable -> org.hibernate.type.SerializableType@6123cccf
Adding type registration object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@728af36b
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c3b1f38
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@30492094
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f23b569
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a97024d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5ec106f8
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@27f5c034
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@550fb15e
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b9e3
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7532, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6c8055fe, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@33406257{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@306f062d, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2939ab24]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@204f2141]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f36ccad]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31a2fc8c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a30fb6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@480e92c9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@568995b1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76f7f7c8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3efb2e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21de9c98]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a63933b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 3c0b1057-b1a2-4d6e-af05-b016011f2a6e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5999be8e: startup date [Sat Nov 04 22:10:10 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.452 seconds (JVM running for 238.81)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5999be8e: startup date [Sat Nov 04 22:10:10 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 7532 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63770d4c: startup date [Sat Nov 04 22:15:04 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d03f2342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 661 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@982654f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6dad95e8{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29b18b62
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b51b7d2
Adding type registration yes_no -> org.hibernate.type.YesNoType@485cbe42
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration char -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68d54405
Adding type registration integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration int -> org.hibernate.type.IntegerType@1594ac19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e91bff
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ef38440
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6324988e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration string -> org.hibernate.type.StringType@1c01841f
Adding type registration java.lang.String -> org.hibernate.type.StringType@1c01841f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d9e8825
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ddb396
Adding type registration url -> org.hibernate.type.UrlType@70675e33
Adding type registration java.net.URL -> org.hibernate.type.UrlType@70675e33
Adding type registration date -> org.hibernate.type.DateType@1fcf3849
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fcf3849
Adding type registration time -> org.hibernate.type.TimeType@55eae73f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55eae73f
Adding type registration timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@579ce42e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31463796
Adding type registration calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d052351
Adding type registration locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration class -> org.hibernate.type.ClassType@75b588e3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75b588e3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30055505
Adding type registration binary -> org.hibernate.type.BinaryType@23d467cf
Adding type registration byte[] -> org.hibernate.type.BinaryType@23d467cf
Adding type registration [B -> org.hibernate.type.BinaryType@23d467cf
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration row_version -> org.hibernate.type.RowVersionType@7b7bbeee
Adding type registration image -> org.hibernate.type.ImageType@2e1d2c3f
Adding type registration characters -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration char[] -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration [C -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration text -> org.hibernate.type.TextType@19167f1
Adding type registration ntext -> org.hibernate.type.NTextType@466e2aa3
Adding type registration blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ec5679
Adding type registration clob -> org.hibernate.type.ClobType@b51432d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b51432d
Adding type registration nclob -> org.hibernate.type.NClobType@16ccac5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16ccac5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31d3b31d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1de2470
Adding type registration serializable -> org.hibernate.type.SerializableType@6123cccf
Adding type registration object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6bb0b5a6
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5ccf67
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5dfe90a1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e238838
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@30d00bdf
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@38ffdd55
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@112d3973
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@538d0126
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b9e3
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7532, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75e5d69, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6dad95e8{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@22259696, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4fdd46]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f9994c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f52c134]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32995d54]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1e17c8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7efe6151]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66a57477]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4279af02]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6e7d2d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a70fb63]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@799f30c4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 767df408-61d1-450d-98a7-d1ab7820316d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63770d4c: startup date [Sat Nov 04 22:15:04 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.484 seconds (JVM running for 533.062)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 5 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63770d4c: startup date [Sat Nov 04 22:15:04 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 7532 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a0cf834: startup date [Sat Nov 04 22:21:13 CST 2017]; root of context hierarchy
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d03f2342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 806 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@298f1dd9
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@22f8298a{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29b18b62
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b51b7d2
Adding type registration yes_no -> org.hibernate.type.YesNoType@485cbe42
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration char -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68d54405
Adding type registration integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration int -> org.hibernate.type.IntegerType@1594ac19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e91bff
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ef38440
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6324988e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration string -> org.hibernate.type.StringType@1c01841f
Adding type registration java.lang.String -> org.hibernate.type.StringType@1c01841f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d9e8825
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ddb396
Adding type registration url -> org.hibernate.type.UrlType@70675e33
Adding type registration java.net.URL -> org.hibernate.type.UrlType@70675e33
Adding type registration date -> org.hibernate.type.DateType@1fcf3849
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fcf3849
Adding type registration time -> org.hibernate.type.TimeType@55eae73f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55eae73f
Adding type registration timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@579ce42e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31463796
Adding type registration calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d052351
Adding type registration locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration class -> org.hibernate.type.ClassType@75b588e3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75b588e3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30055505
Adding type registration binary -> org.hibernate.type.BinaryType@23d467cf
Adding type registration byte[] -> org.hibernate.type.BinaryType@23d467cf
Adding type registration [B -> org.hibernate.type.BinaryType@23d467cf
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration row_version -> org.hibernate.type.RowVersionType@7b7bbeee
Adding type registration image -> org.hibernate.type.ImageType@2e1d2c3f
Adding type registration characters -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration char[] -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration [C -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration text -> org.hibernate.type.TextType@19167f1
Adding type registration ntext -> org.hibernate.type.NTextType@466e2aa3
Adding type registration blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ec5679
Adding type registration clob -> org.hibernate.type.ClobType@b51432d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b51432d
Adding type registration nclob -> org.hibernate.type.NClobType@16ccac5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16ccac5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31d3b31d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1de2470
Adding type registration serializable -> org.hibernate.type.SerializableType@6123cccf
Adding type registration object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61075074
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31116371
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7bb55913
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d1bca4b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1644a76c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2cf4443e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7dd8ed72
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6e822910
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b9e3
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7532, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@67642908, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@22f8298a{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@38ded012, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f89f86]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295e41b0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@378fc2dd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e35e230]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7928aa5c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f95b68]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a4acf6b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21b10d8e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cecd9f1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71f99721]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6042dadf]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: bce045d6-8509-462c-8c9f-c8b2221cc40a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a0cf834: startup date [Sat Nov 04 22:21:13 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.027 seconds (JVM running for 902.845)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a0cf834: startup date [Sat Nov 04 22:21:13 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 7532 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27580c8: startup date [Sat Nov 04 22:21:27 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d03f2342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 533 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@15db2443
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@73b1101e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43b983fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29b18b62
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b51b7d2
Adding type registration yes_no -> org.hibernate.type.YesNoType@485cbe42
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1811cd2a
Adding type registration character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration char -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1ff69ca3
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration short -> org.hibernate.type.ShortType@68d54405
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68d54405
Adding type registration integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration int -> org.hibernate.type.IntegerType@1594ac19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1594ac19
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration long -> org.hibernate.type.LongType@9e91bff
Adding type registration java.lang.Long -> org.hibernate.type.LongType@9e91bff
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration float -> org.hibernate.type.FloatType@2ef38440
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ef38440
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration double -> org.hibernate.type.DoubleType@6324988e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6324988e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@374cfaa0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed53861
Adding type registration string -> org.hibernate.type.StringType@1c01841f
Adding type registration java.lang.String -> org.hibernate.type.StringType@1c01841f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d9e8825
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ddb396
Adding type registration url -> org.hibernate.type.UrlType@70675e33
Adding type registration java.net.URL -> org.hibernate.type.UrlType@70675e33
Adding type registration date -> org.hibernate.type.DateType@1fcf3849
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fcf3849
Adding type registration time -> org.hibernate.type.TimeType@55eae73f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55eae73f
Adding type registration timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@579ce42e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@579ce42e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31463796
Adding type registration calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ed02184
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6d052351
Adding type registration locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19035cb9
Adding type registration currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7453a166
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b7cc504
Adding type registration class -> org.hibernate.type.ClassType@75b588e3
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75b588e3
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24ee6ef2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30055505
Adding type registration binary -> org.hibernate.type.BinaryType@23d467cf
Adding type registration byte[] -> org.hibernate.type.BinaryType@23d467cf
Adding type registration [B -> org.hibernate.type.BinaryType@23d467cf
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33bcebcc
Adding type registration row_version -> org.hibernate.type.RowVersionType@7b7bbeee
Adding type registration image -> org.hibernate.type.ImageType@2e1d2c3f
Adding type registration characters -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration char[] -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration [C -> org.hibernate.type.CharArrayType@4aa30244
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5db348a4
Adding type registration text -> org.hibernate.type.TextType@19167f1
Adding type registration ntext -> org.hibernate.type.NTextType@466e2aa3
Adding type registration blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a5d100a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ec5679
Adding type registration clob -> org.hibernate.type.ClobType@b51432d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b51432d
Adding type registration nclob -> org.hibernate.type.NClobType@16ccac5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16ccac5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31d3b31d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1de2470
Adding type registration serializable -> org.hibernate.type.SerializableType@6123cccf
Adding type registration object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ad0518
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f98800f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3fe68398
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c76e82b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6d9bb2ae
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2648dfea
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2db962f8
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2685e0d4
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@163b2868
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1cf4b9e3
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=7532, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7894a377, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@73b1101e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.804617330869406470.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1ee6b667, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4546ab8e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@281b9ec4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@114aa950]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@371f1e96]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@113856ee]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f479244]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a784dcd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@277846d8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11c5002a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31a83c9a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c91472]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 689156f5-5b20-4bef-a32e-efafe9d3e633 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27580c8: startup date [Sat Nov 04 22:21:27 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.295 seconds (JVM running for 915.968)
Starting Application on LuoRong with PID 14784 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67bd1999: startup date [Sat Nov 04 22:21:44 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0a8b447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2997 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5c2e38f8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@235e04ce{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c738504
Adding type registration true_false -> org.hibernate.type.TrueFalseType@621060d0
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cc6f822
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration character -> org.hibernate.type.CharacterType@1f321183
Adding type registration char -> org.hibernate.type.CharacterType@1f321183
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f321183
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17676c4c
Adding type registration integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration int -> org.hibernate.type.IntegerType@4445650b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2f9292
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4def5eae
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration string -> org.hibernate.type.StringType@68db8678
Adding type registration java.lang.String -> org.hibernate.type.StringType@68db8678
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9adc5a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15c3a35f
Adding type registration url -> org.hibernate.type.UrlType@43c3f65
Adding type registration java.net.URL -> org.hibernate.type.UrlType@43c3f65
Adding type registration date -> org.hibernate.type.DateType@79bbcef8
Adding type registration java.sql.Date -> org.hibernate.type.DateType@79bbcef8
Adding type registration time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@495579c9
Adding type registration calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e466be4
Adding type registration locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@542d0ecf
Adding type registration binary -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration byte[] -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration [B -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration row_version -> org.hibernate.type.RowVersionType@74e8bec7
Adding type registration image -> org.hibernate.type.ImageType@4b6e5657
Adding type registration characters -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration char[] -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration [C -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration text -> org.hibernate.type.TextType@338f8e52
Adding type registration ntext -> org.hibernate.type.NTextType@43ee2ed2
Adding type registration blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22a4ec97
Adding type registration clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration nclob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d12ea2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53d25e27
Adding type registration serializable -> org.hibernate.type.SerializableType@3ef35e3a
Adding type registration object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8308ab8
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@59159577
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c82231e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1438f829
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1851d55c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6d1a450c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ed1162
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53c748e6
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1814c4f5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14784, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4b140a43, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@235e04ce{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3e4f70a3, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@145fa815]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db5d72d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29137595]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10e4438f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dccc8c8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@139228dc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a2bab52]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e39fe3a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d482c4f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f60edf7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6ae65f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@116735dd
Registering SessionFactory: 783b522b-7755-4bc4-8670-11332ab1210b (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@17341f9a
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67bd1999: startup date [Sat Nov 04 22:21:44 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.login()
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.719 seconds (JVM running for 9.442)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67bd1999: startup date [Sat Nov 04 22:21:44 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 14784 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52e9f1ae: startup date [Sat Nov 04 22:23:03 CST 2017]; root of context hierarchy
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0a8b447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 952 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@89596e3
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@93425c2{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c738504
Adding type registration true_false -> org.hibernate.type.TrueFalseType@621060d0
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cc6f822
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration character -> org.hibernate.type.CharacterType@1f321183
Adding type registration char -> org.hibernate.type.CharacterType@1f321183
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f321183
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17676c4c
Adding type registration integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration int -> org.hibernate.type.IntegerType@4445650b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2f9292
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4def5eae
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration string -> org.hibernate.type.StringType@68db8678
Adding type registration java.lang.String -> org.hibernate.type.StringType@68db8678
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9adc5a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15c3a35f
Adding type registration url -> org.hibernate.type.UrlType@43c3f65
Adding type registration java.net.URL -> org.hibernate.type.UrlType@43c3f65
Adding type registration date -> org.hibernate.type.DateType@79bbcef8
Adding type registration java.sql.Date -> org.hibernate.type.DateType@79bbcef8
Adding type registration time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@495579c9
Adding type registration calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e466be4
Adding type registration locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@542d0ecf
Adding type registration binary -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration byte[] -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration [B -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration row_version -> org.hibernate.type.RowVersionType@74e8bec7
Adding type registration image -> org.hibernate.type.ImageType@4b6e5657
Adding type registration characters -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration char[] -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration [C -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration text -> org.hibernate.type.TextType@338f8e52
Adding type registration ntext -> org.hibernate.type.NTextType@43ee2ed2
Adding type registration blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22a4ec97
Adding type registration clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration nclob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d12ea2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53d25e27
Adding type registration serializable -> org.hibernate.type.SerializableType@3ef35e3a
Adding type registration object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9c58916
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6086bd65
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37f73439
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5781816d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@72293fb2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2711c907
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@29496720
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7298018d
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1814c4f5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14784, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1cc775eb, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@93425c2{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3c61b4df, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3708d854]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@659af74]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72429a74]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b51a7c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b080db]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8f8ca1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7835f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@917d250]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dfc2e6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@478855ef]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fde9a99]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: de8880bd-416b-4772-a644-a47ef29211a2 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52e9f1ae: startup date [Sat Nov 04 22:23:03 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.097 seconds (JVM running for 82.809)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52e9f1ae: startup date [Sat Nov 04 22:23:03 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 14784 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59869122: startup date [Sat Nov 04 22:23:30 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0a8b447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 763 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@333929dd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2a3c1a2e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c738504
Adding type registration true_false -> org.hibernate.type.TrueFalseType@621060d0
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cc6f822
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration character -> org.hibernate.type.CharacterType@1f321183
Adding type registration char -> org.hibernate.type.CharacterType@1f321183
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f321183
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17676c4c
Adding type registration integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration int -> org.hibernate.type.IntegerType@4445650b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2f9292
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4def5eae
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration string -> org.hibernate.type.StringType@68db8678
Adding type registration java.lang.String -> org.hibernate.type.StringType@68db8678
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9adc5a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15c3a35f
Adding type registration url -> org.hibernate.type.UrlType@43c3f65
Adding type registration java.net.URL -> org.hibernate.type.UrlType@43c3f65
Adding type registration date -> org.hibernate.type.DateType@79bbcef8
Adding type registration java.sql.Date -> org.hibernate.type.DateType@79bbcef8
Adding type registration time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@495579c9
Adding type registration calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e466be4
Adding type registration locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@542d0ecf
Adding type registration binary -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration byte[] -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration [B -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration row_version -> org.hibernate.type.RowVersionType@74e8bec7
Adding type registration image -> org.hibernate.type.ImageType@4b6e5657
Adding type registration characters -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration char[] -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration [C -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration text -> org.hibernate.type.TextType@338f8e52
Adding type registration ntext -> org.hibernate.type.NTextType@43ee2ed2
Adding type registration blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22a4ec97
Adding type registration clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration nclob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d12ea2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53d25e27
Adding type registration serializable -> org.hibernate.type.SerializableType@3ef35e3a
Adding type registration object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6432b50
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@223381e2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77464e4d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b00836f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@240636f4
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a049f07
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f758e2c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@60516556
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1814c4f5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14784, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@576bd2f1, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2a3c1a2e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3a7884cd, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18251ff3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@188c50ee]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40c9fd48]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7498ae0a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@160b811e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65d91aee]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ef04986]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7733c542]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76acf0b5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40c7e9df]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a28b5b3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: a5161fa0-b9b3-432c-bc3a-3794bb7cbd6d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59869122: startup date [Sat Nov 04 22:23:30 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.653 seconds (JVM running for 109.438)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59869122: startup date [Sat Nov 04 22:23:30 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 14784 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c09eafd: startup date [Sat Nov 04 22:24:18 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0a8b447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 891 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@18955e13
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@39c87c61{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c738504
Adding type registration true_false -> org.hibernate.type.TrueFalseType@621060d0
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cc6f822
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration character -> org.hibernate.type.CharacterType@1f321183
Adding type registration char -> org.hibernate.type.CharacterType@1f321183
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f321183
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17676c4c
Adding type registration integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration int -> org.hibernate.type.IntegerType@4445650b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2f9292
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4def5eae
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration string -> org.hibernate.type.StringType@68db8678
Adding type registration java.lang.String -> org.hibernate.type.StringType@68db8678
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9adc5a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15c3a35f
Adding type registration url -> org.hibernate.type.UrlType@43c3f65
Adding type registration java.net.URL -> org.hibernate.type.UrlType@43c3f65
Adding type registration date -> org.hibernate.type.DateType@79bbcef8
Adding type registration java.sql.Date -> org.hibernate.type.DateType@79bbcef8
Adding type registration time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@495579c9
Adding type registration calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e466be4
Adding type registration locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@542d0ecf
Adding type registration binary -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration byte[] -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration [B -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration row_version -> org.hibernate.type.RowVersionType@74e8bec7
Adding type registration image -> org.hibernate.type.ImageType@4b6e5657
Adding type registration characters -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration char[] -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration [C -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration text -> org.hibernate.type.TextType@338f8e52
Adding type registration ntext -> org.hibernate.type.NTextType@43ee2ed2
Adding type registration blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22a4ec97
Adding type registration clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration nclob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d12ea2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53d25e27
Adding type registration serializable -> org.hibernate.type.SerializableType@3ef35e3a
Adding type registration object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6276f755
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66912459
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@b02cfdd
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@12fd89b1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@47e418e4
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28b85fad
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@35d90140
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b97b64b
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1814c4f5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14784, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5fd26e12, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@39c87c61{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@47aec128, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e0c2f7c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cd82a01]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314d08c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106aac52]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8159ce]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ae8452d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@663ffa11]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a525afa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71f7baeb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@167b1e9e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b236f43]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 337f6157-8e7e-420c-8056-b3cb86911b19 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c09eafd: startup date [Sat Nov 04 22:24:18 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.438 seconds (JVM running for 157.859)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c09eafd: startup date [Sat Nov 04 22:24:18 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 14784 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2de2b9b3: startup date [Sat Nov 04 22:24:29 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0a8b447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 643 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5f9e1599
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@54ec3395{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c738504
Adding type registration true_false -> org.hibernate.type.TrueFalseType@621060d0
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cc6f822
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration character -> org.hibernate.type.CharacterType@1f321183
Adding type registration char -> org.hibernate.type.CharacterType@1f321183
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f321183
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17676c4c
Adding type registration integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration int -> org.hibernate.type.IntegerType@4445650b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2f9292
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4def5eae
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration string -> org.hibernate.type.StringType@68db8678
Adding type registration java.lang.String -> org.hibernate.type.StringType@68db8678
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9adc5a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15c3a35f
Adding type registration url -> org.hibernate.type.UrlType@43c3f65
Adding type registration java.net.URL -> org.hibernate.type.UrlType@43c3f65
Adding type registration date -> org.hibernate.type.DateType@79bbcef8
Adding type registration java.sql.Date -> org.hibernate.type.DateType@79bbcef8
Adding type registration time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@495579c9
Adding type registration calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e466be4
Adding type registration locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@542d0ecf
Adding type registration binary -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration byte[] -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration [B -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration row_version -> org.hibernate.type.RowVersionType@74e8bec7
Adding type registration image -> org.hibernate.type.ImageType@4b6e5657
Adding type registration characters -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration char[] -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration [C -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration text -> org.hibernate.type.TextType@338f8e52
Adding type registration ntext -> org.hibernate.type.NTextType@43ee2ed2
Adding type registration blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22a4ec97
Adding type registration clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration nclob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d12ea2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53d25e27
Adding type registration serializable -> org.hibernate.type.SerializableType@3ef35e3a
Adding type registration object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f60eed2
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3bdb18a4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@dbf6d59
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2937a7e5
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61e9da6f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@214f0ce
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@74379070
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@602b199c
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1814c4f5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14784, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2cb042ae, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@54ec3395{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@749c775e, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fba03cc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10e58215]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3036e513]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c019794]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1db944ec]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f4b236a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@239f8893]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f74fb70]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55052cb8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5285428f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b2ec2b8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 266df932-8478-4e72-8e79-c22cbc680e4d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2de2b9b3: startup date [Sat Nov 04 22:24:29 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/adduser]}" onto public java.lang.Object sw.controller.UserController.addUser(java.lang.String,java.lang.String,java.lang.String)
Mapped "{[/findUserByEmail]}" onto public java.lang.Object sw.controller.UserController.getUserByEmail(java.lang.String)
Mapped "{[/getUser2]}" onto public java.lang.Object sw.controller.UserController.getUser2(java.lang.String,java.lang.String)
Mapped "{[/getUser3]}" onto public java.lang.Object sw.controller.UserController.getUser3(java.lang.String,java.lang.String)
Mapped "{[/getUser4]}" onto public java.lang.Object sw.controller.UserController.getUser4(java.lang.String,int)
Mapped "{[/deleteUser]}" onto public java.lang.Object sw.controller.UserController.deleteuUser(int)
Mapped "{[/getall]}" onto public java.lang.Object sw.controller.UserController.getAllUser()
Mapped "{[/getUser1]}" onto public java.lang.Object sw.controller.UserController.getUser(java.lang.String,java.lang.String)
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.49 seconds (JVM running for 168.129)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2de2b9b3: startup date [Sat Nov 04 22:24:29 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 14784 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6495ca86: startup date [Sat Nov 04 22:24:52 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0a8b447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 816 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@584da66a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@39e30fd7{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c738504
Adding type registration true_false -> org.hibernate.type.TrueFalseType@621060d0
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cc6f822
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration character -> org.hibernate.type.CharacterType@1f321183
Adding type registration char -> org.hibernate.type.CharacterType@1f321183
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f321183
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17676c4c
Adding type registration integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration int -> org.hibernate.type.IntegerType@4445650b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2f9292
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4def5eae
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration string -> org.hibernate.type.StringType@68db8678
Adding type registration java.lang.String -> org.hibernate.type.StringType@68db8678
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9adc5a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15c3a35f
Adding type registration url -> org.hibernate.type.UrlType@43c3f65
Adding type registration java.net.URL -> org.hibernate.type.UrlType@43c3f65
Adding type registration date -> org.hibernate.type.DateType@79bbcef8
Adding type registration java.sql.Date -> org.hibernate.type.DateType@79bbcef8
Adding type registration time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@495579c9
Adding type registration calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e466be4
Adding type registration locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@542d0ecf
Adding type registration binary -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration byte[] -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration [B -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration row_version -> org.hibernate.type.RowVersionType@74e8bec7
Adding type registration image -> org.hibernate.type.ImageType@4b6e5657
Adding type registration characters -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration char[] -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration [C -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration text -> org.hibernate.type.TextType@338f8e52
Adding type registration ntext -> org.hibernate.type.NTextType@43ee2ed2
Adding type registration blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22a4ec97
Adding type registration clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration nclob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d12ea2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53d25e27
Adding type registration serializable -> org.hibernate.type.SerializableType@3ef35e3a
Adding type registration object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@35334380
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41c254ed
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@44f4cf95
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@184ec742
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@37ceb888
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6478e7a0
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61214dd
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6888b78a
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1814c4f5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14784, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@143705ee, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@39e30fd7{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@74c9ad75, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b21c50e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@720586b2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e4d4b4c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55af1dcf]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bdda05]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ac24d5c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776edea7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b6c42b6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645660d4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c52b50b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e1591fa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: f743bb83-1fbf-497a-81ed-5244ce287bf5 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6495ca86: startup date [Sat Nov 04 22:24:52 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.671 seconds (JVM running for 190.732)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6495ca86: startup date [Sat Nov 04 22:24:52 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 14784 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2fc0d54a: startup date [Sat Nov 04 22:25:02 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0a8b447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 556 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@79fb19ce
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@17793339{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c738504
Adding type registration true_false -> org.hibernate.type.TrueFalseType@621060d0
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cc6f822
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration character -> org.hibernate.type.CharacterType@1f321183
Adding type registration char -> org.hibernate.type.CharacterType@1f321183
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f321183
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17676c4c
Adding type registration integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration int -> org.hibernate.type.IntegerType@4445650b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2f9292
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4def5eae
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration string -> org.hibernate.type.StringType@68db8678
Adding type registration java.lang.String -> org.hibernate.type.StringType@68db8678
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9adc5a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15c3a35f
Adding type registration url -> org.hibernate.type.UrlType@43c3f65
Adding type registration java.net.URL -> org.hibernate.type.UrlType@43c3f65
Adding type registration date -> org.hibernate.type.DateType@79bbcef8
Adding type registration java.sql.Date -> org.hibernate.type.DateType@79bbcef8
Adding type registration time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@495579c9
Adding type registration calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e466be4
Adding type registration locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@542d0ecf
Adding type registration binary -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration byte[] -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration [B -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration row_version -> org.hibernate.type.RowVersionType@74e8bec7
Adding type registration image -> org.hibernate.type.ImageType@4b6e5657
Adding type registration characters -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration char[] -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration [C -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration text -> org.hibernate.type.TextType@338f8e52
Adding type registration ntext -> org.hibernate.type.NTextType@43ee2ed2
Adding type registration blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22a4ec97
Adding type registration clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration nclob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d12ea2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53d25e27
Adding type registration serializable -> org.hibernate.type.SerializableType@3ef35e3a
Adding type registration object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5437bbbf
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27cabb5d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a06a506
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a48d78f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@134b713a
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61a9205d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e0897fb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52c0d11a
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1814c4f5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14784, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@70f7274, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@17793339{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@444c14ec, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a497538]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e67288d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4433d33d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c378552]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1734722e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d1bb72]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3aebfb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45fe33d5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cd6c656]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ec48c5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23e3106e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: abe798d2-eaf0-46ba-9b53-dea9bb6e6fef (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2fc0d54a: startup date [Sat Nov 04 22:25:02 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.355 seconds (JVM running for 200.971)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2fc0d54a: startup date [Sat Nov 04 22:25:02 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 14784 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6c8c1da8: startup date [Sat Nov 04 22:31:14 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0a8b447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 730 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@24f31dae
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6a21b204{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3adf0425
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c738504
Adding type registration true_false -> org.hibernate.type.TrueFalseType@621060d0
Adding type registration yes_no -> org.hibernate.type.YesNoType@4cc6f822
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20a9d1e6
Adding type registration character -> org.hibernate.type.CharacterType@1f321183
Adding type registration char -> org.hibernate.type.CharacterType@1f321183
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f321183
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration short -> org.hibernate.type.ShortType@17676c4c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17676c4c
Adding type registration integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration int -> org.hibernate.type.IntegerType@4445650b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4445650b
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration long -> org.hibernate.type.LongType@b2f9292
Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2f9292
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration float -> org.hibernate.type.FloatType@4def5eae
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4def5eae
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6468d64d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32a0094b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a9cbe4a
Adding type registration string -> org.hibernate.type.StringType@68db8678
Adding type registration java.lang.String -> org.hibernate.type.StringType@68db8678
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9adc5a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15c3a35f
Adding type registration url -> org.hibernate.type.UrlType@43c3f65
Adding type registration java.net.URL -> org.hibernate.type.UrlType@43c3f65
Adding type registration date -> org.hibernate.type.DateType@79bbcef8
Adding type registration java.sql.Date -> org.hibernate.type.DateType@79bbcef8
Adding type registration time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45c9edaf
Adding type registration timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d32ba07
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@495579c9
Adding type registration calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fd30d70
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e466be4
Adding type registration locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b1f2971
Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8d8e5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f964bfa
Adding type registration class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c2670f2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a1df9b3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@542d0ecf
Adding type registration binary -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration byte[] -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration [B -> org.hibernate.type.BinaryType@e6d46e1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b89c7f7
Adding type registration row_version -> org.hibernate.type.RowVersionType@74e8bec7
Adding type registration image -> org.hibernate.type.ImageType@4b6e5657
Adding type registration characters -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration char[] -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration [C -> org.hibernate.type.CharArrayType@11f12fa5
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e66f5a4
Adding type registration text -> org.hibernate.type.TextType@338f8e52
Adding type registration ntext -> org.hibernate.type.NTextType@43ee2ed2
Adding type registration blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77e0140e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22a4ec97
Adding type registration clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@ac4b541
Adding type registration nclob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c26d4c3
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d12ea2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53d25e27
Adding type registration serializable -> org.hibernate.type.SerializableType@3ef35e3a
Adding type registration object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7ae56233
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18e7bc1f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3ebca1a8
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@789b0b64
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7333989e
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5611c5a3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@dfb8f28
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d9b75d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4203ef9d
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1814c4f5
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=14784, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@44899c53, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6a21b204{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6503034192937146103.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3f9fcb79, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71172713]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b93de22]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79fd1544]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0ce294]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78ab43c9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@401a6555]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6284d697]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@137b53e0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cc5dfef]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@86edb4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ab11f2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 49468cf6-5816-457e-aae1-f4113ef63480 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6c8c1da8: startup date [Sat Nov 04 22:31:14 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.619 seconds (JVM running for 573.149)
Starting Application on LuoRong with PID 13692 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 22:35:21 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b4eb7ee3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3246 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13981ad0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@489fc52{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@602067fe
Adding type registration boolean -> org.hibernate.type.BooleanType@602067fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@602067fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63e48d43
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b7e4fb8
Adding type registration yes_no -> org.hibernate.type.YesNoType@70238d93
Adding type registration byte -> org.hibernate.type.ByteType@780fabbe
Adding type registration byte -> org.hibernate.type.ByteType@780fabbe
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@780fabbe
Adding type registration character -> org.hibernate.type.CharacterType@363b0611
Adding type registration char -> org.hibernate.type.CharacterType@363b0611
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@363b0611
Adding type registration short -> org.hibernate.type.ShortType@1fdb3084
Adding type registration short -> org.hibernate.type.ShortType@1fdb3084
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1fdb3084
Adding type registration integer -> org.hibernate.type.IntegerType@112ee8ab
Adding type registration int -> org.hibernate.type.IntegerType@112ee8ab
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@112ee8ab
Adding type registration long -> org.hibernate.type.LongType@29f47718
Adding type registration long -> org.hibernate.type.LongType@29f47718
Adding type registration java.lang.Long -> org.hibernate.type.LongType@29f47718
Adding type registration float -> org.hibernate.type.FloatType@3fdeb459
Adding type registration float -> org.hibernate.type.FloatType@3fdeb459
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fdeb459
Adding type registration double -> org.hibernate.type.DoubleType@1eccf032
Adding type registration double -> org.hibernate.type.DoubleType@1eccf032
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1eccf032
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20671775
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20671775
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ebf7756
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ebf7756
Adding type registration string -> org.hibernate.type.StringType@a143460
Adding type registration java.lang.String -> org.hibernate.type.StringType@a143460
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@492e687d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@504826dd
Adding type registration url -> org.hibernate.type.UrlType@143c3c16
Adding type registration java.net.URL -> org.hibernate.type.UrlType@143c3c16
Adding type registration date -> org.hibernate.type.DateType@7d3a16c7
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7d3a16c7
Adding type registration time -> org.hibernate.type.TimeType@57f87c9a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@57f87c9a
Adding type registration timestamp -> org.hibernate.type.TimestampType@572498b9
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@572498b9
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@572498b9
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2bd8ebd
Adding type registration calendar -> org.hibernate.type.CalendarType@e5b17bf
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e5b17bf
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e5b17bf
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13c87955
Adding type registration locale -> org.hibernate.type.LocaleType@ef9a028
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ef9a028
Adding type registration currency -> org.hibernate.type.CurrencyType@53a64971
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53a64971
Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d7f2dbe
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d7f2dbe
Adding type registration class -> org.hibernate.type.ClassType@7cbea151
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7cbea151
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7359a6f0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7359a6f0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a5711bc
Adding type registration binary -> org.hibernate.type.BinaryType@44385aad
Adding type registration byte[] -> org.hibernate.type.BinaryType@44385aad
Adding type registration [B -> org.hibernate.type.BinaryType@44385aad
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d9ab8fd
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d9ab8fd
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d9ab8fd
Adding type registration row_version -> org.hibernate.type.RowVersionType@709d4edc
Adding type registration image -> org.hibernate.type.ImageType@4677e3e4
Adding type registration characters -> org.hibernate.type.CharArrayType@1a2d7b9e
Adding type registration char[] -> org.hibernate.type.CharArrayType@1a2d7b9e
Adding type registration [C -> org.hibernate.type.CharArrayType@1a2d7b9e
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@9064d1e
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@9064d1e
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@9064d1e
Adding type registration text -> org.hibernate.type.TextType@6f0c07cd
Adding type registration ntext -> org.hibernate.type.NTextType@538961aa
Adding type registration blob -> org.hibernate.type.BlobType@28aa9c8d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28aa9c8d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d581747
Adding type registration clob -> org.hibernate.type.ClobType@436c8164
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@436c8164
Adding type registration nclob -> org.hibernate.type.NClobType@1247fd91
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1247fd91
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f75c9eb
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e40e687
Adding type registration serializable -> org.hibernate.type.SerializableType@4857b099
Adding type registration object -> org.hibernate.type.ObjectType@69ed8bcc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@69ed8bcc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f7cc69d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6a4a9355
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6d245ec8
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@57dfcaa1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e1eb6e9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60705644
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2fed869c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64edb02
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1d7ebfb1
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.9035121147911289745.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=13692, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@39f1568, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@489fc52{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.9035121147911289745.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@755d8c83, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d553136]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@582bf9ff]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1d2ad2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11142ad4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33851fb2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b473773]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f60b005]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ed863a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d5724d0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d0cafe0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@145c03e0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7882223b
Registering SessionFactory: b228bd47-01d7-4f49-a092-86324169768f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@570f4cd2
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 22:35:21 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.974 seconds (JVM running for 9.562)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@760d6e1a: startup date [Sat Nov 04 22:35:21 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 13692 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@74394a2e: startup date [Sat Nov 04 22:38:04 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b4eb7ee3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 918 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@517b4b00
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@6625eb3f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@602067fe
Adding type registration boolean -> org.hibernate.type.BooleanType@602067fe
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@602067fe
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63e48d43
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b7e4fb8
Adding type registration yes_no -> org.hibernate.type.YesNoType@70238d93
Adding type registration byte -> org.hibernate.type.ByteType@780fabbe
Adding type registration byte -> org.hibernate.type.ByteType@780fabbe
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@780fabbe
Adding type registration character -> org.hibernate.type.CharacterType@363b0611
Adding type registration char -> org.hibernate.type.CharacterType@363b0611
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@363b0611
Adding type registration short -> org.hibernate.type.ShortType@1fdb3084
Adding type registration short -> org.hibernate.type.ShortType@1fdb3084
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1fdb3084
Adding type registration integer -> org.hibernate.type.IntegerType@112ee8ab
Adding type registration int -> org.hibernate.type.IntegerType@112ee8ab
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@112ee8ab
Adding type registration long -> org.hibernate.type.LongType@29f47718
Adding type registration long -> org.hibernate.type.LongType@29f47718
Adding type registration java.lang.Long -> org.hibernate.type.LongType@29f47718
Adding type registration float -> org.hibernate.type.FloatType@3fdeb459
Adding type registration float -> org.hibernate.type.FloatType@3fdeb459
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fdeb459
Adding type registration double -> org.hibernate.type.DoubleType@1eccf032
Adding type registration double -> org.hibernate.type.DoubleType@1eccf032
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1eccf032
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20671775
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20671775
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ebf7756
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ebf7756
Adding type registration string -> org.hibernate.type.StringType@a143460
Adding type registration java.lang.String -> org.hibernate.type.StringType@a143460
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@492e687d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@504826dd
Adding type registration url -> org.hibernate.type.UrlType@143c3c16
Adding type registration java.net.URL -> org.hibernate.type.UrlType@143c3c16
Adding type registration date -> org.hibernate.type.DateType@7d3a16c7
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7d3a16c7
Adding type registration time -> org.hibernate.type.TimeType@57f87c9a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@57f87c9a
Adding type registration timestamp -> org.hibernate.type.TimestampType@572498b9
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@572498b9
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@572498b9
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2bd8ebd
Adding type registration calendar -> org.hibernate.type.CalendarType@e5b17bf
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e5b17bf
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e5b17bf
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13c87955
Adding type registration locale -> org.hibernate.type.LocaleType@ef9a028
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ef9a028
Adding type registration currency -> org.hibernate.type.CurrencyType@53a64971
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53a64971
Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d7f2dbe
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d7f2dbe
Adding type registration class -> org.hibernate.type.ClassType@7cbea151
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7cbea151
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7359a6f0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7359a6f0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a5711bc
Adding type registration binary -> org.hibernate.type.BinaryType@44385aad
Adding type registration byte[] -> org.hibernate.type.BinaryType@44385aad
Adding type registration [B -> org.hibernate.type.BinaryType@44385aad
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d9ab8fd
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d9ab8fd
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d9ab8fd
Adding type registration row_version -> org.hibernate.type.RowVersionType@709d4edc
Adding type registration image -> org.hibernate.type.ImageType@4677e3e4
Adding type registration characters -> org.hibernate.type.CharArrayType@1a2d7b9e
Adding type registration char[] -> org.hibernate.type.CharArrayType@1a2d7b9e
Adding type registration [C -> org.hibernate.type.CharArrayType@1a2d7b9e
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@9064d1e
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@9064d1e
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@9064d1e
Adding type registration text -> org.hibernate.type.TextType@6f0c07cd
Adding type registration ntext -> org.hibernate.type.NTextType@538961aa
Adding type registration blob -> org.hibernate.type.BlobType@28aa9c8d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28aa9c8d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d581747
Adding type registration clob -> org.hibernate.type.ClobType@436c8164
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@436c8164
Adding type registration nclob -> org.hibernate.type.NClobType@1247fd91
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1247fd91
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f75c9eb
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e40e687
Adding type registration serializable -> org.hibernate.type.SerializableType@4857b099
Adding type registration object -> org.hibernate.type.ObjectType@69ed8bcc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@69ed8bcc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@29119c22
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3ea85a9c
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e4fa57b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@77bd8ef2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@52e8ecab
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ee820d0
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d4f3c0b
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@769ef54e
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1d7ebfb1
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.9035121147911289745.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=13692, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7cf89889, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@6625eb3f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.9035121147911289745.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@710e7fd8, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a61f965]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@232e14a4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45301560]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66529eaa]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@585eb0ec]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ed91ce6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f588a18]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a3e5d3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b41c73b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d098843]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c990926]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: d9d486a7-00fe-432e-91ce-5d11cd9b1638 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@74394a2e: startup date [Sat Nov 04 22:38:04 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.378 seconds (JVM running for 166.964)
Starting Application on LuoRong with PID 12836 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 22:41:09 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a45ddc24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3095 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@90f959f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1a448224{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29c73767
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4bb57cbf
Adding type registration yes_no -> org.hibernate.type.YesNoType@66bbe90b
Adding type registration byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration character -> org.hibernate.type.CharacterType@340ac001
Adding type registration char -> org.hibernate.type.CharacterType@340ac001
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@340ac001
Adding type registration short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration integer -> org.hibernate.type.IntegerType@713264d3
Adding type registration int -> org.hibernate.type.IntegerType@713264d3
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@713264d3
Adding type registration long -> org.hibernate.type.LongType@68dde0eb
Adding type registration long -> org.hibernate.type.LongType@68dde0eb
Adding type registration java.lang.Long -> org.hibernate.type.LongType@68dde0eb
Adding type registration float -> org.hibernate.type.FloatType@3bebea37
Adding type registration float -> org.hibernate.type.FloatType@3bebea37
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3bebea37
Adding type registration double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34cca86b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34cca86b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@677bb194
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@677bb194
Adding type registration string -> org.hibernate.type.StringType@14707355
Adding type registration java.lang.String -> org.hibernate.type.StringType@14707355
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@397c5a02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7201afd3
Adding type registration url -> org.hibernate.type.UrlType@3578c53a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3578c53a
Adding type registration date -> org.hibernate.type.DateType@9be704b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@9be704b
Adding type registration time -> org.hibernate.type.TimeType@4c0fadf0
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4c0fadf0
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e14f91
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e14f91
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e14f91
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d1de266
Adding type registration calendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c31411d
Adding type registration locale -> org.hibernate.type.LocaleType@7c532e90
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7c532e90
Adding type registration currency -> org.hibernate.type.CurrencyType@46bde24c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46bde24c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@faefbf9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@faefbf9
Adding type registration class -> org.hibernate.type.ClassType@6559edcf
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6559edcf
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fea0fd8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fea0fd8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@633c8aa7
Adding type registration binary -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration byte[] -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration [B -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ea8887f
Adding type registration image -> org.hibernate.type.ImageType@2094933c
Adding type registration characters -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration char[] -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration [C -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration text -> org.hibernate.type.TextType@48d14aca
Adding type registration ntext -> org.hibernate.type.NTextType@221cd6f2
Adding type registration blob -> org.hibernate.type.BlobType@236eb9a8
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@236eb9a8
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7263fa9b
Adding type registration clob -> org.hibernate.type.ClobType@458cc1c1
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@458cc1c1
Adding type registration nclob -> org.hibernate.type.NClobType@331df12a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@331df12a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c52e1a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@496c3f2b
Adding type registration serializable -> org.hibernate.type.SerializableType@3ae46373
Adding type registration object -> org.hibernate.type.ObjectType@6edfaec3
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6edfaec3
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ceb3864
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f51288c
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d302705
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4dc1f3f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21d13fd8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@47227626
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6b8679c8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@fc7a660
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@52533f99
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1567146515046813277.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12836, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@48dd5f4f, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1a448224{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1567146515046813277.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@67b93dc3, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3817af64]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5514148c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bdc9f52]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ff55e4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e76df56]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7563b70c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@357d393]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39e47737]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64d8945]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76b91e6c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ffb36d9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1ac8b58f
Registering SessionFactory: 14751251-1a28-451f-8005-d8564eadcaf7 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@76f6fe86
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 22:41:09 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.215 seconds (JVM running for 9.801)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@72ca43c7: startup date [Sat Nov 04 22:41:09 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 12836 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e40d299: startup date [Sat Nov 04 22:42:01 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a45ddc24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 803 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@64c9e90d
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@480bbbef{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29c73767
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4bb57cbf
Adding type registration yes_no -> org.hibernate.type.YesNoType@66bbe90b
Adding type registration byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration character -> org.hibernate.type.CharacterType@340ac001
Adding type registration char -> org.hibernate.type.CharacterType@340ac001
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@340ac001
Adding type registration short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration integer -> org.hibernate.type.IntegerType@713264d3
Adding type registration int -> org.hibernate.type.IntegerType@713264d3
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@713264d3
Adding type registration long -> org.hibernate.type.LongType@68dde0eb
Adding type registration long -> org.hibernate.type.LongType@68dde0eb
Adding type registration java.lang.Long -> org.hibernate.type.LongType@68dde0eb
Adding type registration float -> org.hibernate.type.FloatType@3bebea37
Adding type registration float -> org.hibernate.type.FloatType@3bebea37
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3bebea37
Adding type registration double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34cca86b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34cca86b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@677bb194
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@677bb194
Adding type registration string -> org.hibernate.type.StringType@14707355
Adding type registration java.lang.String -> org.hibernate.type.StringType@14707355
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@397c5a02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7201afd3
Adding type registration url -> org.hibernate.type.UrlType@3578c53a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3578c53a
Adding type registration date -> org.hibernate.type.DateType@9be704b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@9be704b
Adding type registration time -> org.hibernate.type.TimeType@4c0fadf0
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4c0fadf0
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e14f91
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e14f91
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e14f91
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d1de266
Adding type registration calendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c31411d
Adding type registration locale -> org.hibernate.type.LocaleType@7c532e90
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7c532e90
Adding type registration currency -> org.hibernate.type.CurrencyType@46bde24c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46bde24c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@faefbf9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@faefbf9
Adding type registration class -> org.hibernate.type.ClassType@6559edcf
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6559edcf
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fea0fd8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fea0fd8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@633c8aa7
Adding type registration binary -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration byte[] -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration [B -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ea8887f
Adding type registration image -> org.hibernate.type.ImageType@2094933c
Adding type registration characters -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration char[] -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration [C -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration text -> org.hibernate.type.TextType@48d14aca
Adding type registration ntext -> org.hibernate.type.NTextType@221cd6f2
Adding type registration blob -> org.hibernate.type.BlobType@236eb9a8
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@236eb9a8
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7263fa9b
Adding type registration clob -> org.hibernate.type.ClobType@458cc1c1
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@458cc1c1
Adding type registration nclob -> org.hibernate.type.NClobType@331df12a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@331df12a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c52e1a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@496c3f2b
Adding type registration serializable -> org.hibernate.type.SerializableType@3ae46373
Adding type registration object -> org.hibernate.type.ObjectType@6edfaec3
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6edfaec3
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@574b1c4f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4fb69a52
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54e0d297
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@742b6244
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7b8db1ea
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@92c0c3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5234ce2c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7da2bf6c
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@52533f99
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1567146515046813277.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12836, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b677ba9, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@480bbbef{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1567146515046813277.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3ff30e5f, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ec71a3b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1588d41c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7896a465]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@702f4984]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16fa66]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ba4db97]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75236a3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45af2e28]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6237de64]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67506571]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f01cb82]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 755d6f96-549a-445a-9a62-3432671ac833 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e40d299: startup date [Sat Nov 04 22:42:01 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.879 seconds (JVM running for 54.794)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e40d299: startup date [Sat Nov 04 22:42:01 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 12836 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
No active profile set, falling back to default profiles: default
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d6cb04e: startup date [Sat Nov 04 22:42:11 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a45ddc24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 863 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@39e80ee2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1e560b6f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29c73767
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4bb57cbf
Adding type registration yes_no -> org.hibernate.type.YesNoType@66bbe90b
Adding type registration byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration character -> org.hibernate.type.CharacterType@340ac001
Adding type registration char -> org.hibernate.type.CharacterType@340ac001
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@340ac001
Adding type registration short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration integer -> org.hibernate.type.IntegerType@713264d3
Adding type registration int -> org.hibernate.type.IntegerType@713264d3
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@713264d3
Adding type registration long -> org.hibernate.type.LongType@68dde0eb
Adding type registration long -> org.hibernate.type.LongType@68dde0eb
Adding type registration java.lang.Long -> org.hibernate.type.LongType@68dde0eb
Adding type registration float -> org.hibernate.type.FloatType@3bebea37
Adding type registration float -> org.hibernate.type.FloatType@3bebea37
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3bebea37
Adding type registration double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34cca86b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34cca86b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@677bb194
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@677bb194
Adding type registration string -> org.hibernate.type.StringType@14707355
Adding type registration java.lang.String -> org.hibernate.type.StringType@14707355
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@397c5a02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7201afd3
Adding type registration url -> org.hibernate.type.UrlType@3578c53a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3578c53a
Adding type registration date -> org.hibernate.type.DateType@9be704b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@9be704b
Adding type registration time -> org.hibernate.type.TimeType@4c0fadf0
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4c0fadf0
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e14f91
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e14f91
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e14f91
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d1de266
Adding type registration calendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c31411d
Adding type registration locale -> org.hibernate.type.LocaleType@7c532e90
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7c532e90
Adding type registration currency -> org.hibernate.type.CurrencyType@46bde24c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46bde24c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@faefbf9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@faefbf9
Adding type registration class -> org.hibernate.type.ClassType@6559edcf
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6559edcf
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fea0fd8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fea0fd8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@633c8aa7
Adding type registration binary -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration byte[] -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration [B -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ea8887f
Adding type registration image -> org.hibernate.type.ImageType@2094933c
Adding type registration characters -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration char[] -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration [C -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration text -> org.hibernate.type.TextType@48d14aca
Adding type registration ntext -> org.hibernate.type.NTextType@221cd6f2
Adding type registration blob -> org.hibernate.type.BlobType@236eb9a8
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@236eb9a8
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7263fa9b
Adding type registration clob -> org.hibernate.type.ClobType@458cc1c1
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@458cc1c1
Adding type registration nclob -> org.hibernate.type.NClobType@331df12a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@331df12a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c52e1a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@496c3f2b
Adding type registration serializable -> org.hibernate.type.SerializableType@3ae46373
Adding type registration object -> org.hibernate.type.ObjectType@6edfaec3
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6edfaec3
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5670c5a3
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@38393733
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@14e21c54
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@172444b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51ffc41b
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@200ef1b8
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@240a5951
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@37c90187
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@52533f99
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1567146515046813277.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12836, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7fb2692b, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1e560b6f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1567146515046813277.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4f7b8f08, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1470127e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681ee4f3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a383f8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f08990f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13c35b27]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e44ea7b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc57c30]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f963b2b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5db91979]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a38649]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@654c42bc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: ec5a2f9e-c7fc-40c2-bae4-5c7027c088ff (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d6cb04e: startup date [Sat Nov 04 22:42:11 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.947 seconds (JVM running for 65.563)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d6cb04e: startup date [Sat Nov 04 22:42:11 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Starting Application on LuoRong with PID 12836 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@690d80b9: startup date [Sat Nov 04 22:42:44 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a45ddc24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 713 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5d858768
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2803ce96{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2d13c5bb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29c73767
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4bb57cbf
Adding type registration yes_no -> org.hibernate.type.YesNoType@66bbe90b
Adding type registration byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31ca19ba
Adding type registration character -> org.hibernate.type.CharacterType@340ac001
Adding type registration char -> org.hibernate.type.CharacterType@340ac001
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@340ac001
Adding type registration short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@44e2acb8
Adding type registration integer -> org.hibernate.type.IntegerType@713264d3
Adding type registration int -> org.hibernate.type.IntegerType@713264d3
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@713264d3
Adding type registration long -> org.hibernate.type.LongType@68dde0eb
Adding type registration long -> org.hibernate.type.LongType@68dde0eb
Adding type registration java.lang.Long -> org.hibernate.type.LongType@68dde0eb
Adding type registration float -> org.hibernate.type.FloatType@3bebea37
Adding type registration float -> org.hibernate.type.FloatType@3bebea37
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3bebea37
Adding type registration double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3606ae08
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34cca86b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34cca86b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@677bb194
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@677bb194
Adding type registration string -> org.hibernate.type.StringType@14707355
Adding type registration java.lang.String -> org.hibernate.type.StringType@14707355
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@397c5a02
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7201afd3
Adding type registration url -> org.hibernate.type.UrlType@3578c53a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3578c53a
Adding type registration date -> org.hibernate.type.DateType@9be704b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@9be704b
Adding type registration time -> org.hibernate.type.TimeType@4c0fadf0
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4c0fadf0
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e14f91
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e14f91
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e14f91
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d1de266
Adding type registration calendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@569d6609
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c31411d
Adding type registration locale -> org.hibernate.type.LocaleType@7c532e90
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7c532e90
Adding type registration currency -> org.hibernate.type.CurrencyType@46bde24c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46bde24c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@faefbf9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@faefbf9
Adding type registration class -> org.hibernate.type.ClassType@6559edcf
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6559edcf
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fea0fd8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fea0fd8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@633c8aa7
Adding type registration binary -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration byte[] -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration [B -> org.hibernate.type.BinaryType@6dd8c1da
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@176af3d5
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ea8887f
Adding type registration image -> org.hibernate.type.ImageType@2094933c
Adding type registration characters -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration char[] -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration [C -> org.hibernate.type.CharArrayType@75a9cf56
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@efca2ca
Adding type registration text -> org.hibernate.type.TextType@48d14aca
Adding type registration ntext -> org.hibernate.type.NTextType@221cd6f2
Adding type registration blob -> org.hibernate.type.BlobType@236eb9a8
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@236eb9a8
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7263fa9b
Adding type registration clob -> org.hibernate.type.ClobType@458cc1c1
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@458cc1c1
Adding type registration nclob -> org.hibernate.type.NClobType@331df12a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@331df12a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c52e1a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@496c3f2b
Adding type registration serializable -> org.hibernate.type.SerializableType@3ae46373
Adding type registration object -> org.hibernate.type.ObjectType@6edfaec3
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6edfaec3
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@72ef323f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a07ec0c
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37ceb6a6
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53d0748f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5825da00
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6d773a84
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f4eca0a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f6ab760
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@52533f99
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.1567146515046813277.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12836, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6d8b540d, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2803ce96{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.1567146515046813277.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@27354103, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f68d235]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dc82306]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@649dec7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a49cd7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5c239c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31b8b634]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43979981]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c24328]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c452482]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@507b2ed0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9e5c213]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: d7aa0a44-66ed-4eea-a08a-4358e3206cd5 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@690d80b9: startup date [Sat Nov 04 22:42:44 CST 2017]; root of context hierarchy
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.771 seconds (JVM running for 98.313)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Starting Application on LuoRong with PID 5640 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@85e69a4: startup date [Sat Nov 04 22:45:04 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3d15c2b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3275 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5fa3d305
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@73aa655f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@effcee7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b09d19a
Adding type registration yes_no -> org.hibernate.type.YesNoType@7f2f024d
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@578229a2
Adding type registration character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration char -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1277b764
Adding type registration integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration int -> org.hibernate.type.IntegerType@3db0f378
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff7c923
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8697431
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6628687
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6628687
Adding type registration string -> org.hibernate.type.StringType@6c668308
Adding type registration java.lang.String -> org.hibernate.type.StringType@6c668308
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@651de9fa
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1487282
Adding type registration url -> org.hibernate.type.UrlType@7b335766
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b335766
Adding type registration date -> org.hibernate.type.DateType@48171113
Adding type registration java.sql.Date -> org.hibernate.type.DateType@48171113
Adding type registration time -> org.hibernate.type.TimeType@13284c55
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13284c55
Adding type registration timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@acc67d8
Adding type registration calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1e9fa4
Adding type registration locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ecf343f
Adding type registration binary -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration byte[] -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration [B -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac67728
Adding type registration image -> org.hibernate.type.ImageType@58893ef0
Adding type registration characters -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration char[] -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration [C -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration text -> org.hibernate.type.TextType@37c589e7
Adding type registration ntext -> org.hibernate.type.NTextType@624ab523
Adding type registration blob -> org.hibernate.type.BlobType@78766075
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78766075
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d08708d
Adding type registration clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration nclob -> org.hibernate.type.NClobType@56820097
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56820097
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fb8f2a7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@628c01d1
Adding type registration serializable -> org.hibernate.type.SerializableType@11ac9c2b
Adding type registration object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48aa1998
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b92d7e9
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@44721ed
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7eeefdc5
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@66105d59
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bf0e3ed
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1605f737
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f8c20e7
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e35fb8f
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=5640, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18491726, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@73aa655f{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4cbba561, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b3f657e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f3604a4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12f36d5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78228607]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c825d4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b1a3b2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66dac63d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fa28437]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dbab06e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab28d7a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34628fb9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@33bb7f4
Registering SessionFactory: 797ba248-b843-405f-bac5-ef935225241a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1af0f0bc
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@85e69a4: startup date [Sat Nov 04 22:45:04 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 9.745 seconds (JVM running for 10.338)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@85e69a4: startup date [Sat Nov 04 22:45:04 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 5640 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ae03cab: startup date [Sat Nov 04 22:46:23 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3d15c2b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 912 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6db36707
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@4cf94785{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@effcee7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b09d19a
Adding type registration yes_no -> org.hibernate.type.YesNoType@7f2f024d
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@578229a2
Adding type registration character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration char -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1277b764
Adding type registration integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration int -> org.hibernate.type.IntegerType@3db0f378
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff7c923
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8697431
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6628687
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6628687
Adding type registration string -> org.hibernate.type.StringType@6c668308
Adding type registration java.lang.String -> org.hibernate.type.StringType@6c668308
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@651de9fa
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1487282
Adding type registration url -> org.hibernate.type.UrlType@7b335766
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b335766
Adding type registration date -> org.hibernate.type.DateType@48171113
Adding type registration java.sql.Date -> org.hibernate.type.DateType@48171113
Adding type registration time -> org.hibernate.type.TimeType@13284c55
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13284c55
Adding type registration timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@acc67d8
Adding type registration calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1e9fa4
Adding type registration locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ecf343f
Adding type registration binary -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration byte[] -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration [B -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac67728
Adding type registration image -> org.hibernate.type.ImageType@58893ef0
Adding type registration characters -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration char[] -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration [C -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration text -> org.hibernate.type.TextType@37c589e7
Adding type registration ntext -> org.hibernate.type.NTextType@624ab523
Adding type registration blob -> org.hibernate.type.BlobType@78766075
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78766075
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d08708d
Adding type registration clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration nclob -> org.hibernate.type.NClobType@56820097
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56820097
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fb8f2a7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@628c01d1
Adding type registration serializable -> org.hibernate.type.SerializableType@11ac9c2b
Adding type registration object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@280f8db
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@62acf8f3
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7844e86c
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@531ad28c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@56d9ae14
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53b7af5c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c6f2ace
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9e4077d
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e35fb8f
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=5640, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@64823f77, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@4cf94785{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@35b67156, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6277f39b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c43660d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d63e29]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@693150ff]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b11b0a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@460729f5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68860d7d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cfebed]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304fb7d0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ae1e04]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1472d14]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 48a9c4e7-ce9a-44e3-a0ba-ff7ee8396e4c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ae03cab: startup date [Sat Nov 04 22:46:23 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 2.166 seconds (JVM running for 82.721)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
No mapping found for HTTP request with URI [/riskAssessment/pages/login] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ae03cab: startup date [Sat Nov 04 22:46:23 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 5640 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
No active profile set, falling back to default profiles: default
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2425662c: startup date [Sat Nov 04 22:47:11 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3d15c2b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1009 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7c7c3fcb
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@513ce64d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@effcee7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b09d19a
Adding type registration yes_no -> org.hibernate.type.YesNoType@7f2f024d
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@578229a2
Adding type registration character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration char -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1277b764
Adding type registration integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration int -> org.hibernate.type.IntegerType@3db0f378
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff7c923
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8697431
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6628687
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6628687
Adding type registration string -> org.hibernate.type.StringType@6c668308
Adding type registration java.lang.String -> org.hibernate.type.StringType@6c668308
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@651de9fa
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1487282
Adding type registration url -> org.hibernate.type.UrlType@7b335766
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b335766
Adding type registration date -> org.hibernate.type.DateType@48171113
Adding type registration java.sql.Date -> org.hibernate.type.DateType@48171113
Adding type registration time -> org.hibernate.type.TimeType@13284c55
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13284c55
Adding type registration timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@acc67d8
Adding type registration calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1e9fa4
Adding type registration locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ecf343f
Adding type registration binary -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration byte[] -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration [B -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac67728
Adding type registration image -> org.hibernate.type.ImageType@58893ef0
Adding type registration characters -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration char[] -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration [C -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration text -> org.hibernate.type.TextType@37c589e7
Adding type registration ntext -> org.hibernate.type.NTextType@624ab523
Adding type registration blob -> org.hibernate.type.BlobType@78766075
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78766075
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d08708d
Adding type registration clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration nclob -> org.hibernate.type.NClobType@56820097
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56820097
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fb8f2a7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@628c01d1
Adding type registration serializable -> org.hibernate.type.SerializableType@11ac9c2b
Adding type registration object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5214fe1f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f6a578a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dbaa90d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d99ab0e
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@48884ea4
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75e38638
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3d59bb48
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d68a636
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e35fb8f
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=5640, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e539da1, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@513ce64d{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@746b82ed, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d1e9c70]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bbb1998]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e9a5784]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@474370ec]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b5cfe5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ff1acc7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@419f42a6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b293bf5]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55444713]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f78ee04]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd54a5f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: fd913a29-0083-43ce-99f9-e61563a1a4ce (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2425662c: startup date [Sat Nov 04 22:47:11 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.922 seconds (JVM running for 129.814)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2425662c: startup date [Sat Nov 04 22:47:11 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 5640 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
No active profile set, falling back to default profiles: default
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@374c79e9: startup date [Sat Nov 04 22:47:45 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3d15c2b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 658 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@210e110f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@473161fe{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@effcee7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b09d19a
Adding type registration yes_no -> org.hibernate.type.YesNoType@7f2f024d
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@578229a2
Adding type registration character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration char -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1277b764
Adding type registration integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration int -> org.hibernate.type.IntegerType@3db0f378
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff7c923
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8697431
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6628687
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6628687
Adding type registration string -> org.hibernate.type.StringType@6c668308
Adding type registration java.lang.String -> org.hibernate.type.StringType@6c668308
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@651de9fa
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1487282
Adding type registration url -> org.hibernate.type.UrlType@7b335766
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b335766
Adding type registration date -> org.hibernate.type.DateType@48171113
Adding type registration java.sql.Date -> org.hibernate.type.DateType@48171113
Adding type registration time -> org.hibernate.type.TimeType@13284c55
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13284c55
Adding type registration timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@acc67d8
Adding type registration calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1e9fa4
Adding type registration locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ecf343f
Adding type registration binary -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration byte[] -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration [B -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac67728
Adding type registration image -> org.hibernate.type.ImageType@58893ef0
Adding type registration characters -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration char[] -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration [C -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration text -> org.hibernate.type.TextType@37c589e7
Adding type registration ntext -> org.hibernate.type.NTextType@624ab523
Adding type registration blob -> org.hibernate.type.BlobType@78766075
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78766075
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d08708d
Adding type registration clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration nclob -> org.hibernate.type.NClobType@56820097
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56820097
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fb8f2a7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@628c01d1
Adding type registration serializable -> org.hibernate.type.SerializableType@11ac9c2b
Adding type registration object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11530454
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3ec399d2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6cebe0e7
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@39a02201
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@30d8e0c5
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@12f7f205
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2128d464
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19205a6a
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e35fb8f
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=5640, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1d2b53c0, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@473161fe{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@40d83800, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@727a2a5e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36897114]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1615c4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33ea7a5b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc4fff6]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546bb57e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e990ad8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a86c079]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d51eca]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ce377bc]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@125388d7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 1ff22192-a0bf-4d42-8d4d-e7f1444490dc (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@374c79e9: startup date [Sat Nov 04 22:47:45 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.496 seconds (JVM running for 163.561)
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@374c79e9: startup date [Sat Nov 04 22:47:45 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 5640 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26017c71: startup date [Sat Nov 04 22:47:54 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3d15c2b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 784 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3a2ca13b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1bdff4c2{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@effcee7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b09d19a
Adding type registration yes_no -> org.hibernate.type.YesNoType@7f2f024d
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@578229a2
Adding type registration character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration char -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1277b764
Adding type registration integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration int -> org.hibernate.type.IntegerType@3db0f378
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff7c923
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8697431
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6628687
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6628687
Adding type registration string -> org.hibernate.type.StringType@6c668308
Adding type registration java.lang.String -> org.hibernate.type.StringType@6c668308
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@651de9fa
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1487282
Adding type registration url -> org.hibernate.type.UrlType@7b335766
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b335766
Adding type registration date -> org.hibernate.type.DateType@48171113
Adding type registration java.sql.Date -> org.hibernate.type.DateType@48171113
Adding type registration time -> org.hibernate.type.TimeType@13284c55
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13284c55
Adding type registration timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@acc67d8
Adding type registration calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1e9fa4
Adding type registration locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ecf343f
Adding type registration binary -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration byte[] -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration [B -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac67728
Adding type registration image -> org.hibernate.type.ImageType@58893ef0
Adding type registration characters -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration char[] -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration [C -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration text -> org.hibernate.type.TextType@37c589e7
Adding type registration ntext -> org.hibernate.type.NTextType@624ab523
Adding type registration blob -> org.hibernate.type.BlobType@78766075
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78766075
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d08708d
Adding type registration clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration nclob -> org.hibernate.type.NClobType@56820097
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56820097
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fb8f2a7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@628c01d1
Adding type registration serializable -> org.hibernate.type.SerializableType@11ac9c2b
Adding type registration object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47495160
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f9e79fa
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@fc14c95
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@33ceb173
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e81343b
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@620ccbb8
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@67ac9688
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@212fe627
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e35fb8f
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=5640, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6f7eb3f7, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1bdff4c2{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7191f0b4, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1855d753]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c36e637]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29c99790]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66d8bc59]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d65baa1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b645e7]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ac8698]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b6a2837]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf83498]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7287f3c8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6222ee53]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 50e6d4e9-1136-4d9e-aef2-9084ea490167 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26017c71: startup date [Sat Nov 04 22:47:54 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.698 seconds (JVM running for 173.073)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 4 ms
No mapping found for HTTP request with URI [/riskAssessment/index] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26017c71: startup date [Sat Nov 04 22:47:54 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 5640 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3150c3bd: startup date [Sat Nov 04 22:48:37 CST 2017]; root of context hierarchy
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3d15c2b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 589 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1afc703f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2fe210a6{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4886ea46
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@effcee7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b09d19a
Adding type registration yes_no -> org.hibernate.type.YesNoType@7f2f024d
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration byte -> org.hibernate.type.ByteType@578229a2
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@578229a2
Adding type registration character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration char -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e8ad5e
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration short -> org.hibernate.type.ShortType@1277b764
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1277b764
Adding type registration integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration int -> org.hibernate.type.IntegerType@3db0f378
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3db0f378
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration long -> org.hibernate.type.LongType@ff7c923
Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff7c923
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration float -> org.hibernate.type.FloatType@8697431
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8697431
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31b8f514
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c23c952
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6628687
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6628687
Adding type registration string -> org.hibernate.type.StringType@6c668308
Adding type registration java.lang.String -> org.hibernate.type.StringType@6c668308
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@651de9fa
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1487282
Adding type registration url -> org.hibernate.type.UrlType@7b335766
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b335766
Adding type registration date -> org.hibernate.type.DateType@48171113
Adding type registration java.sql.Date -> org.hibernate.type.DateType@48171113
Adding type registration time -> org.hibernate.type.TimeType@13284c55
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13284c55
Adding type registration timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76d6d9e5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@acc67d8
Adding type registration calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2412295c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1e9fa4
Adding type registration locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20e3e63e
Adding type registration currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24ab5161
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f5e6722
Adding type registration class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bafd4fb
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@409d372f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ecf343f
Adding type registration binary -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration byte[] -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration [B -> org.hibernate.type.BinaryType@1ad4732e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4bc69e75
Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac67728
Adding type registration image -> org.hibernate.type.ImageType@58893ef0
Adding type registration characters -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration char[] -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration [C -> org.hibernate.type.CharArrayType@5ab654d1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b7f0076
Adding type registration text -> org.hibernate.type.TextType@37c589e7
Adding type registration ntext -> org.hibernate.type.NTextType@624ab523
Adding type registration blob -> org.hibernate.type.BlobType@78766075
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78766075
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d08708d
Adding type registration clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a860d65
Adding type registration nclob -> org.hibernate.type.NClobType@56820097
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56820097
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1fb8f2a7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@628c01d1
Adding type registration serializable -> org.hibernate.type.SerializableType@11ac9c2b
Adding type registration object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4e4bbc18
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71a82909
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@182ed1f8
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@12fbaaf4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5f31d356
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6fe149d8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@12ee4cd
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4ecd5216
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f3783fa
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e35fb8f
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=5640, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@288e75a2, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2fe210a6{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.3272958547345183086.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@12c5ee4, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a54571]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fa726af]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65731158]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@714cd89b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d568e44]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d620eb9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@719e0c38]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a14d887]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f538339]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@343e8ad4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@447103bd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: b3ba5fc5-8a54-4194-90f0-0403cadbac61 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3150c3bd: startup date [Sat Nov 04 22:48:37 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.362 seconds (JVM running for 215.412)
Starting Application on LuoRong with PID 12792 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@66311e3a: startup date [Sat Nov 04 22:49:12 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dcbea43e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3037 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7abd2b13
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@264ed5cc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@616158cb
Adding type registration boolean -> org.hibernate.type.BooleanType@616158cb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@616158cb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@874dec6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d14c1cd
Adding type registration yes_no -> org.hibernate.type.YesNoType@459ea18f
Adding type registration byte -> org.hibernate.type.ByteType@bacd80c
Adding type registration byte -> org.hibernate.type.ByteType@bacd80c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@bacd80c
Adding type registration character -> org.hibernate.type.CharacterType@68c46616
Adding type registration char -> org.hibernate.type.CharacterType@68c46616
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@68c46616
Adding type registration short -> org.hibernate.type.ShortType@6cfc680c
Adding type registration short -> org.hibernate.type.ShortType@6cfc680c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cfc680c
Adding type registration integer -> org.hibernate.type.IntegerType@279c7e43
Adding type registration int -> org.hibernate.type.IntegerType@279c7e43
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@279c7e43
Adding type registration long -> org.hibernate.type.LongType@1227113a
Adding type registration long -> org.hibernate.type.LongType@1227113a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1227113a
Adding type registration float -> org.hibernate.type.FloatType@715c9dd8
Adding type registration float -> org.hibernate.type.FloatType@715c9dd8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@715c9dd8
Adding type registration double -> org.hibernate.type.DoubleType@15261f55
Adding type registration double -> org.hibernate.type.DoubleType@15261f55
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@15261f55
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@42f4b950
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@42f4b950
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c19810
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c19810
Adding type registration string -> org.hibernate.type.StringType@713cdfde
Adding type registration java.lang.String -> org.hibernate.type.StringType@713cdfde
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@204947ac
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@134d4c99
Adding type registration url -> org.hibernate.type.UrlType@259a0c8a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@259a0c8a
Adding type registration date -> org.hibernate.type.DateType@2220beec
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2220beec
Adding type registration time -> org.hibernate.type.TimeType@484e84c7
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@484e84c7
Adding type registration timestamp -> org.hibernate.type.TimestampType@3f8bcd24
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f8bcd24
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f8bcd24
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e015068
Adding type registration calendar -> org.hibernate.type.CalendarType@2d701ee7
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d701ee7
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d701ee7
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6dc02c94
Adding type registration locale -> org.hibernate.type.LocaleType@22fcfcb6
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22fcfcb6
Adding type registration currency -> org.hibernate.type.CurrencyType@38f671eb
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@38f671eb
Adding type registration timezone -> org.hibernate.type.TimeZoneType@610eadb0
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@610eadb0
Adding type registration class -> org.hibernate.type.ClassType@4e0d1e08
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4e0d1e08
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d3ac75
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d3ac75
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3e22872e
Adding type registration binary -> org.hibernate.type.BinaryType@27ce4b61
Adding type registration byte[] -> org.hibernate.type.BinaryType@27ce4b61
Adding type registration [B -> org.hibernate.type.BinaryType@27ce4b61
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@58939169
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@58939169
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@58939169
Adding type registration row_version -> org.hibernate.type.RowVersionType@2fb6c17
Adding type registration image -> org.hibernate.type.ImageType@6efaf908
Adding type registration characters -> org.hibernate.type.CharArrayType@14167c4
Adding type registration char[] -> org.hibernate.type.CharArrayType@14167c4
Adding type registration [C -> org.hibernate.type.CharArrayType@14167c4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b354a2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b354a2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b354a2
Adding type registration text -> org.hibernate.type.TextType@75d18fb9
Adding type registration ntext -> org.hibernate.type.NTextType@50fd61c3
Adding type registration blob -> org.hibernate.type.BlobType@39d95fd3
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39d95fd3
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16a5c868
Adding type registration clob -> org.hibernate.type.ClobType@52bc244
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@52bc244
Adding type registration nclob -> org.hibernate.type.NClobType@636feb62
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@636feb62
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22968adf
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@52925db1
Adding type registration serializable -> org.hibernate.type.SerializableType@4cdc26ac
Adding type registration object -> org.hibernate.type.ObjectType@383d663f
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@383d663f
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b7b8b5
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@55682ac2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e5c0971
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@293de59d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@12f4821f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@65e94b9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@58170282
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ec01510
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@43121b6b
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.660093539002006388.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=12792, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@16e309c7, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@264ed5cc{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.660093539002006388.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@34cc1976, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d24d7d8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9650818]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28250629]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5297f0ff]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11b6b7de]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1729c0e3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@355dd6ab]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3018f26f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@761f550b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1056b370]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b97699]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@321b3615
Registering SessionFactory: 70b0a97d-d36f-457d-9d8d-8406702e6851 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@28b2a21e
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@66311e3a: startup date [Sat Nov 04 22:49:12 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.988 seconds (JVM running for 9.553)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
No mapping found for HTTP request with URI [/riskAssessment/pages/login.html] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@66311e3a: startup date [Sat Nov 04 22:49:12 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 12792 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@164fe44d: startup date [Sat Nov 04 22:51:54 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dcbea43e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 962 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@423d11ce
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@512ec78e{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@616158cb
Adding type registration boolean -> org.hibernate.type.BooleanType@616158cb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@616158cb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@874dec6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d14c1cd
Adding type registration yes_no -> org.hibernate.type.YesNoType@459ea18f
Adding type registration byte -> org.hibernate.type.ByteType@bacd80c
Adding type registration byte -> org.hibernate.type.ByteType@bacd80c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@bacd80c
Adding type registration character -> org.hibernate.type.CharacterType@68c46616
Adding type registration char -> org.hibernate.type.CharacterType@68c46616
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@68c46616
Adding type registration short -> org.hibernate.type.ShortType@6cfc680c
Adding type registration short -> org.hibernate.type.ShortType@6cfc680c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cfc680c
Adding type registration integer -> org.hibernate.type.IntegerType@279c7e43
Adding type registration int -> org.hibernate.type.IntegerType@279c7e43
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@279c7e43
Adding type registration long -> org.hibernate.type.LongType@1227113a
Adding type registration long -> org.hibernate.type.LongType@1227113a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1227113a
Adding type registration float -> org.hibernate.type.FloatType@715c9dd8
Adding type registration float -> org.hibernate.type.FloatType@715c9dd8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@715c9dd8
Adding type registration double -> org.hibernate.type.DoubleType@15261f55
Adding type registration double -> org.hibernate.type.DoubleType@15261f55
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@15261f55
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@42f4b950
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@42f4b950
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c19810
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c19810
Adding type registration string -> org.hibernate.type.StringType@713cdfde
Adding type registration java.lang.String -> org.hibernate.type.StringType@713cdfde
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@204947ac
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@134d4c99
Adding type registration url -> org.hibernate.type.UrlType@259a0c8a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@259a0c8a
Adding type registration date -> org.hibernate.type.DateType@2220beec
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2220beec
Adding type registration time -> org.hibernate.type.TimeType@484e84c7
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@484e84c7
Adding type registration timestamp -> org.hibernate.type.TimestampType@3f8bcd24
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f8bcd24
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f8bcd24
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e015068
Adding type registration calendar -> org.hibernate.type.CalendarType@2d701ee7
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d701ee7
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d701ee7
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6dc02c94
Adding type registration locale -> org.hibernate.type.LocaleType@22fcfcb6
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22fcfcb6
Adding type registration currency -> org.hibernate.type.CurrencyType@38f671eb
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@38f671eb
Adding type registration timezone -> org.hibernate.type.TimeZoneType@610eadb0
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@610eadb0
Adding type registration class -> org.hibernate.type.ClassType@4e0d1e08
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4e0d1e08
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d3ac75
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d3ac75
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3e22872e
Adding type registration binary -> org.hibernate.type.BinaryType@27ce4b61
Adding type registration byte[] -> org.hibernate.type.BinaryType@27ce4b61
Adding type registration [B -> org.hibernate.type.BinaryType@27ce4b61
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@58939169
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@58939169
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@58939169
Adding type registration row_version -> org.hibernate.type.RowVersionType@2fb6c17
Adding type registration image -> org.hibernate.type.ImageType@6efaf908
Adding type registration characters -> org.hibernate.type.CharArrayType@14167c4
Adding type registration char[] -> org.hibernate.type.CharArrayType@14167c4
Adding type registration [C -> org.hibernate.type.CharArrayType@14167c4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b354a2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b354a2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b354a2
Adding type registration text -> org.hibernate.type.TextType@75d18fb9
Adding type registration ntext -> org.hibernate.type.NTextType@50fd61c3
Adding type registration blob -> org.hibernate.type.BlobType@39d95fd3
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39d95fd3
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16a5c868
Adding type registration clob -> org.hibernate.type.ClobType@52bc244
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@52bc244
Adding type registration nclob -> org.hibernate.type.NClobType@636feb62
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@636feb62
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22968adf
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@52925db1
Adding type registration serializable -> org.hibernate.type.SerializableType@4cdc26ac
Adding type registration object -> org.hibernate.type.ObjectType@383d663f
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@383d663f
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@535f0c53
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57dc02fd
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f0c2c1b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53752a9c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@78e38935
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f9fb73e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@51ed2622
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2b36c749
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Starting Application on LuoRong with PID 13340 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Sat Nov 04 22:53:16 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8193f105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3213 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@520028c2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@4b8e9ac8{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@62ec1b66
Adding type registration boolean -> org.hibernate.type.BooleanType@62ec1b66
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62ec1b66
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ff06c21
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f0a7156
Adding type registration yes_no -> org.hibernate.type.YesNoType@2992b563
Adding type registration byte -> org.hibernate.type.ByteType@784f2c49
Adding type registration byte -> org.hibernate.type.ByteType@784f2c49
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@784f2c49
Adding type registration character -> org.hibernate.type.CharacterType@32c38a76
Adding type registration char -> org.hibernate.type.CharacterType@32c38a76
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@32c38a76
Adding type registration short -> org.hibernate.type.ShortType@28c333d0
Adding type registration short -> org.hibernate.type.ShortType@28c333d0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@28c333d0
Adding type registration integer -> org.hibernate.type.IntegerType@42decd79
Adding type registration int -> org.hibernate.type.IntegerType@42decd79
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@42decd79
Adding type registration long -> org.hibernate.type.LongType@16e089ba
Adding type registration long -> org.hibernate.type.LongType@16e089ba
Adding type registration java.lang.Long -> org.hibernate.type.LongType@16e089ba
Adding type registration float -> org.hibernate.type.FloatType@20e1194b
Adding type registration float -> org.hibernate.type.FloatType@20e1194b
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@20e1194b
Adding type registration double -> org.hibernate.type.DoubleType@4a8df897
Adding type registration double -> org.hibernate.type.DoubleType@4a8df897
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a8df897
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27e2b125
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27e2b125
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@34932371
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@34932371
Adding type registration string -> org.hibernate.type.StringType@356d3ba1
Adding type registration java.lang.String -> org.hibernate.type.StringType@356d3ba1
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a507775
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@ef663c7
Adding type registration url -> org.hibernate.type.UrlType@488c5d9f
Adding type registration java.net.URL -> org.hibernate.type.UrlType@488c5d9f
Adding type registration date -> org.hibernate.type.DateType@1786bd04
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1786bd04
Adding type registration time -> org.hibernate.type.TimeType@1a56eb5a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a56eb5a
Adding type registration timestamp -> org.hibernate.type.TimestampType@547d7b65
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@547d7b65
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@547d7b65
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d836a91
Adding type registration calendar -> org.hibernate.type.CalendarType@578106c7
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@578106c7
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@578106c7
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@210092f0
Adding type registration locale -> org.hibernate.type.LocaleType@2bf92bac
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2bf92bac
Adding type registration currency -> org.hibernate.type.CurrencyType@5ba26b8c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5ba26b8c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@c941502
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c941502
Adding type registration class -> org.hibernate.type.ClassType@3a1d4dc9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a1d4dc9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4863ec01
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4863ec01
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@444dbf27
Adding type registration binary -> org.hibernate.type.BinaryType@7a001f11
Adding type registration byte[] -> org.hibernate.type.BinaryType@7a001f11
Adding type registration [B -> org.hibernate.type.BinaryType@7a001f11
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37c21c6e
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37c21c6e
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37c21c6e
Adding type registration row_version -> org.hibernate.type.RowVersionType@384a50aa
Adding type registration image -> org.hibernate.type.ImageType@cf655f7
Adding type registration characters -> org.hibernate.type.CharArrayType@5f4f330c
Adding type registration char[] -> org.hibernate.type.CharArrayType@5f4f330c
Adding type registration [C -> org.hibernate.type.CharArrayType@5f4f330c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7264d6a6
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7264d6a6
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7264d6a6
Adding type registration text -> org.hibernate.type.TextType@4cae47a3
Adding type registration ntext -> org.hibernate.type.NTextType@dec9fc7
Adding type registration blob -> org.hibernate.type.BlobType@5b4c311d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b4c311d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1a783e74
Adding type registration clob -> org.hibernate.type.ClobType@77538e74
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77538e74
Adding type registration nclob -> org.hibernate.type.NClobType@61b9422f
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@61b9422f
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b71484f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f6a0db8
Adding type registration serializable -> org.hibernate.type.SerializableType@7f2a5f12
Adding type registration object -> org.hibernate.type.ObjectType@70350d79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@70350d79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16e37024
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e65e944
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62924425
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5ee836da
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53870f73
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3249e38e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@420a2a8e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d4b9af3
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@223fc847
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.6799713972297342881.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=13340, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@76625071, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@4b8e9ac8{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.6799713972297342881.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@63941bff, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@263b9aa0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ca9887b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ee518e4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64500833]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e174e1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fbeb26]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64aea73b]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cb866f9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7113a6c2]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1734f1a0]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@313698fb]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e1e3e71
Registering SessionFactory: 3af43e39-10d2-4177-9cf5-724207241eb6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1ce3c47
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6791c46f: startup date [Sat Nov 04 22:53:16 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.68 seconds (JVM running for 9.253)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
------preHandle------
------:跳转到login页面！
Starting Application on LuoRong with PID 11324 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 23:00:55 CST 2017]; root of context hierarchy
HV000001: Hibernate Validator 5.3.4.Final
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5efe25a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2937 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@42ef0f90
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@1a5f88c3{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.0.11.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172438b7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@63c384fa
Adding type registration yes_no -> org.hibernate.type.YesNoType@77ee2b17
Adding type registration byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration character -> org.hibernate.type.CharacterType@498f598f
Adding type registration char -> org.hibernate.type.CharacterType@498f598f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@498f598f
Adding type registration short -> org.hibernate.type.ShortType@223132bc
Adding type registration short -> org.hibernate.type.ShortType@223132bc
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@223132bc
Adding type registration integer -> org.hibernate.type.IntegerType@123caeeb
Adding type registration int -> org.hibernate.type.IntegerType@123caeeb
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@123caeeb
Adding type registration long -> org.hibernate.type.LongType@26c71412
Adding type registration long -> org.hibernate.type.LongType@26c71412
Adding type registration java.lang.Long -> org.hibernate.type.LongType@26c71412
Adding type registration float -> org.hibernate.type.FloatType@68d54405
Adding type registration float -> org.hibernate.type.FloatType@68d54405
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68d54405
Adding type registration double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@750225b2
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@750225b2
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ef38440
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ef38440
Adding type registration string -> org.hibernate.type.StringType@6d88127a
Adding type registration java.lang.String -> org.hibernate.type.StringType@6d88127a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@9714688
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2aed004d
Adding type registration url -> org.hibernate.type.UrlType@14964d64
Adding type registration java.net.URL -> org.hibernate.type.UrlType@14964d64
Adding type registration date -> org.hibernate.type.DateType@5d91ed24
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d91ed24
Adding type registration time -> org.hibernate.type.TimeType@2ddb396
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ddb396
Adding type registration timestamp -> org.hibernate.type.TimestampType@6e495cb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e495cb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e495cb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3db2af88
Adding type registration calendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c930dd6
Adding type registration locale -> org.hibernate.type.LocaleType@4db0201f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4db0201f
Adding type registration currency -> org.hibernate.type.CurrencyType@579ce42e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@579ce42e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@74868eba
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74868eba
Adding type registration class -> org.hibernate.type.ClassType@5a024e0f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a024e0f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62e07714
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62e07714
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@63bf4d47
Adding type registration binary -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration byte[] -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration [B -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration row_version -> org.hibernate.type.RowVersionType@231aa2bb
Adding type registration image -> org.hibernate.type.ImageType@2c34c874
Adding type registration characters -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration char[] -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration [C -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration text -> org.hibernate.type.TextType@3d9aa61
Adding type registration ntext -> org.hibernate.type.NTextType@74b3177
Adding type registration blob -> org.hibernate.type.BlobType@67500219
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67500219
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b436f8a
Adding type registration clob -> org.hibernate.type.ClobType@4f6330c5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f6330c5
Adding type registration nclob -> org.hibernate.type.NClobType@b51432d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b51432d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@eee88a3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@756d1f03
Adding type registration serializable -> org.hibernate.type.SerializableType@163b243a
Adding type registration object -> org.hibernate.type.ObjectType@3059b1b2
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3059b1b2
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8faaac7
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75d34e4b
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5de1925
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6123cccf
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3cd2eebe
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@539c4e79
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@26fe621e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@594497ba
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@43373890
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8660194999733681873.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11324, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3c57e1d1, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@1a5f88c3{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8660194999733681873.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7207d67, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ce16a46]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62d45637]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eeaa76d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4236f235]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f0f771d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@739aceed]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@489ade13]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a47248a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5701e682]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30fbefb3]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f9bd154]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@62705a12
Registering SessionFactory: 7f546d5b-9704-4652-843d-a1d6d9a709d9 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@76a91673
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[POST]}" onto public java.lang.String sw.controller.UserController.login(sw.entity.User,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 23:00:55 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 8.517 seconds (JVM running for 9.157)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
Request method 'GET' not supported
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
Request method 'GET' not supported
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24de9460: startup date [Sat Nov 04 23:00:55 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11324 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d983b80: startup date [Sat Nov 04 23:01:46 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5efe25a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 880 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3d3b2265
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@d26fa1c{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172438b7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@63c384fa
Adding type registration yes_no -> org.hibernate.type.YesNoType@77ee2b17
Adding type registration byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration character -> org.hibernate.type.CharacterType@498f598f
Adding type registration char -> org.hibernate.type.CharacterType@498f598f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@498f598f
Adding type registration short -> org.hibernate.type.ShortType@223132bc
Adding type registration short -> org.hibernate.type.ShortType@223132bc
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@223132bc
Adding type registration integer -> org.hibernate.type.IntegerType@123caeeb
Adding type registration int -> org.hibernate.type.IntegerType@123caeeb
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@123caeeb
Adding type registration long -> org.hibernate.type.LongType@26c71412
Adding type registration long -> org.hibernate.type.LongType@26c71412
Adding type registration java.lang.Long -> org.hibernate.type.LongType@26c71412
Adding type registration float -> org.hibernate.type.FloatType@68d54405
Adding type registration float -> org.hibernate.type.FloatType@68d54405
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68d54405
Adding type registration double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@750225b2
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@750225b2
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ef38440
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ef38440
Adding type registration string -> org.hibernate.type.StringType@6d88127a
Adding type registration java.lang.String -> org.hibernate.type.StringType@6d88127a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@9714688
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2aed004d
Adding type registration url -> org.hibernate.type.UrlType@14964d64
Adding type registration java.net.URL -> org.hibernate.type.UrlType@14964d64
Adding type registration date -> org.hibernate.type.DateType@5d91ed24
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d91ed24
Adding type registration time -> org.hibernate.type.TimeType@2ddb396
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ddb396
Adding type registration timestamp -> org.hibernate.type.TimestampType@6e495cb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e495cb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e495cb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3db2af88
Adding type registration calendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c930dd6
Adding type registration locale -> org.hibernate.type.LocaleType@4db0201f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4db0201f
Adding type registration currency -> org.hibernate.type.CurrencyType@579ce42e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@579ce42e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@74868eba
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74868eba
Adding type registration class -> org.hibernate.type.ClassType@5a024e0f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a024e0f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62e07714
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62e07714
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@63bf4d47
Adding type registration binary -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration byte[] -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration [B -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration row_version -> org.hibernate.type.RowVersionType@231aa2bb
Adding type registration image -> org.hibernate.type.ImageType@2c34c874
Adding type registration characters -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration char[] -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration [C -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration text -> org.hibernate.type.TextType@3d9aa61
Adding type registration ntext -> org.hibernate.type.NTextType@74b3177
Adding type registration blob -> org.hibernate.type.BlobType@67500219
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67500219
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b436f8a
Adding type registration clob -> org.hibernate.type.ClobType@4f6330c5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f6330c5
Adding type registration nclob -> org.hibernate.type.NClobType@b51432d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b51432d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@eee88a3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@756d1f03
Adding type registration serializable -> org.hibernate.type.SerializableType@163b243a
Adding type registration object -> org.hibernate.type.ObjectType@3059b1b2
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3059b1b2
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@539d6bb
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c75cf0d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37675555
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@12830996
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59c48973
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bab38e1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36eb1f3c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c2e6fce
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@43373890
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8660194999733681873.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11324, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62206975, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@d26fa1c{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8660194999733681873.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5f9868ef, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb3bf2f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f5b0799]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5548f84c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469fee46]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@248d5718]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@165ceb59]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4436e469]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c49704f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f3f0a88]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7062861]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41d46c40]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 065cfde3-f308-4c1c-b45f-22ed297020d8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[POST]}" onto public java.lang.String sw.controller.UserController.login(sw.entity.User,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d983b80: startup date [Sat Nov 04 23:01:46 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.948 seconds (JVM running for 55.165)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 4 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
Request method 'GET' not supported
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d983b80: startup date [Sat Nov 04 23:01:46 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Starting Application on LuoRong with PID 11324 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c7235fd: startup date [Sat Nov 04 23:03:16 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5efe25a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 740 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@555c560
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@7b24ea82{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172438b7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@63c384fa
Adding type registration yes_no -> org.hibernate.type.YesNoType@77ee2b17
Adding type registration byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration character -> org.hibernate.type.CharacterType@498f598f
Adding type registration char -> org.hibernate.type.CharacterType@498f598f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@498f598f
Adding type registration short -> org.hibernate.type.ShortType@223132bc
Adding type registration short -> org.hibernate.type.ShortType@223132bc
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@223132bc
Adding type registration integer -> org.hibernate.type.IntegerType@123caeeb
Adding type registration int -> org.hibernate.type.IntegerType@123caeeb
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@123caeeb
Adding type registration long -> org.hibernate.type.LongType@26c71412
Adding type registration long -> org.hibernate.type.LongType@26c71412
Adding type registration java.lang.Long -> org.hibernate.type.LongType@26c71412
Adding type registration float -> org.hibernate.type.FloatType@68d54405
Adding type registration float -> org.hibernate.type.FloatType@68d54405
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68d54405
Adding type registration double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@750225b2
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@750225b2
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ef38440
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ef38440
Adding type registration string -> org.hibernate.type.StringType@6d88127a
Adding type registration java.lang.String -> org.hibernate.type.StringType@6d88127a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@9714688
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2aed004d
Adding type registration url -> org.hibernate.type.UrlType@14964d64
Adding type registration java.net.URL -> org.hibernate.type.UrlType@14964d64
Adding type registration date -> org.hibernate.type.DateType@5d91ed24
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d91ed24
Adding type registration time -> org.hibernate.type.TimeType@2ddb396
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ddb396
Adding type registration timestamp -> org.hibernate.type.TimestampType@6e495cb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e495cb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e495cb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3db2af88
Adding type registration calendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c930dd6
Adding type registration locale -> org.hibernate.type.LocaleType@4db0201f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4db0201f
Adding type registration currency -> org.hibernate.type.CurrencyType@579ce42e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@579ce42e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@74868eba
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74868eba
Adding type registration class -> org.hibernate.type.ClassType@5a024e0f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a024e0f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62e07714
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62e07714
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@63bf4d47
Adding type registration binary -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration byte[] -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration [B -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration row_version -> org.hibernate.type.RowVersionType@231aa2bb
Adding type registration image -> org.hibernate.type.ImageType@2c34c874
Adding type registration characters -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration char[] -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration [C -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration text -> org.hibernate.type.TextType@3d9aa61
Adding type registration ntext -> org.hibernate.type.NTextType@74b3177
Adding type registration blob -> org.hibernate.type.BlobType@67500219
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67500219
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b436f8a
Adding type registration clob -> org.hibernate.type.ClobType@4f6330c5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f6330c5
Adding type registration nclob -> org.hibernate.type.NClobType@b51432d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b51432d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@eee88a3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@756d1f03
Adding type registration serializable -> org.hibernate.type.SerializableType@163b243a
Adding type registration object -> org.hibernate.type.ObjectType@3059b1b2
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3059b1b2
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ce993e5
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6798034a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1bfbcfb7
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27713bdf
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6747f26f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40622f9e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@521c652
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2b20aaea
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@43373890
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8660194999733681873.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11324, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6d15e09d, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@7b24ea82{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8660194999733681873.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@16066294, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bcbf4bd]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@292b385e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0e1c4]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c6e70c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fea2416]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@366ecf85]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7afb12ce]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1bd0be]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62233d4d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35533e25]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7b47b8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 68bc0f1f-1d89-4c4f-bdb3-a5dd27f0da4e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[POST]}" onto public java.lang.String sw.controller.UserController.login(sw.entity.User,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c7235fd: startup date [Sat Nov 04 23:03:16 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.664 seconds (JVM running for 144.394)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 3 ms
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c7235fd: startup date [Sat Nov 04 23:03:16 CST 2017]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=default
Starting Application on LuoRong with PID 11324 (started by LR in E:\Workspaces\Myeclipse 2015\sw)
No active profile set, falling back to default profiles: default
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@10c6c0dc: startup date [Sat Nov 04 23:03:56 CST 2017]; root of context hierarchy
Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Bean 'validator' of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5efe25a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.11
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 672 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4f06384b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@2cd38981{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/Workspaces/Myeclipse%202015/sw/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		sw.entity.User]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1441ac6f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@172438b7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@63c384fa
Adding type registration yes_no -> org.hibernate.type.YesNoType@77ee2b17
Adding type registration byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d8b37f0
Adding type registration character -> org.hibernate.type.CharacterType@498f598f
Adding type registration char -> org.hibernate.type.CharacterType@498f598f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@498f598f
Adding type registration short -> org.hibernate.type.ShortType@223132bc
Adding type registration short -> org.hibernate.type.ShortType@223132bc
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@223132bc
Adding type registration integer -> org.hibernate.type.IntegerType@123caeeb
Adding type registration int -> org.hibernate.type.IntegerType@123caeeb
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@123caeeb
Adding type registration long -> org.hibernate.type.LongType@26c71412
Adding type registration long -> org.hibernate.type.LongType@26c71412
Adding type registration java.lang.Long -> org.hibernate.type.LongType@26c71412
Adding type registration float -> org.hibernate.type.FloatType@68d54405
Adding type registration float -> org.hibernate.type.FloatType@68d54405
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68d54405
Adding type registration double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72e56f28
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@750225b2
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@750225b2
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ef38440
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ef38440
Adding type registration string -> org.hibernate.type.StringType@6d88127a
Adding type registration java.lang.String -> org.hibernate.type.StringType@6d88127a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@9714688
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2aed004d
Adding type registration url -> org.hibernate.type.UrlType@14964d64
Adding type registration java.net.URL -> org.hibernate.type.UrlType@14964d64
Adding type registration date -> org.hibernate.type.DateType@5d91ed24
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d91ed24
Adding type registration time -> org.hibernate.type.TimeType@2ddb396
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ddb396
Adding type registration timestamp -> org.hibernate.type.TimestampType@6e495cb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e495cb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e495cb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3db2af88
Adding type registration calendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51a26777
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c930dd6
Adding type registration locale -> org.hibernate.type.LocaleType@4db0201f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4db0201f
Adding type registration currency -> org.hibernate.type.CurrencyType@579ce42e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@579ce42e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@74868eba
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74868eba
Adding type registration class -> org.hibernate.type.ClassType@5a024e0f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a024e0f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62e07714
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62e07714
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@63bf4d47
Adding type registration binary -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration byte[] -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration [B -> org.hibernate.type.BinaryType@fb9e5ce
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@371ca649
Adding type registration row_version -> org.hibernate.type.RowVersionType@231aa2bb
Adding type registration image -> org.hibernate.type.ImageType@2c34c874
Adding type registration characters -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration char[] -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration [C -> org.hibernate.type.CharArrayType@1d81e30a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53df9efa
Adding type registration text -> org.hibernate.type.TextType@3d9aa61
Adding type registration ntext -> org.hibernate.type.NTextType@74b3177
Adding type registration blob -> org.hibernate.type.BlobType@67500219
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67500219
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b436f8a
Adding type registration clob -> org.hibernate.type.ClobType@4f6330c5
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f6330c5
Adding type registration nclob -> org.hibernate.type.NClobType@b51432d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b51432d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@eee88a3
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@756d1f03
Adding type registration serializable -> org.hibernate.type.SerializableType@163b243a
Adding type registration object -> org.hibernate.type.ObjectType@3059b1b2
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3059b1b2
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e2a3282
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@663bfd11
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c765f55
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@198c43bb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62ddc2a
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f477a8b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17516c1
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a9f1ccf
Database ->
       name : MySQL
    version : 5.5.46
      major : 5
      minor : 5
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.40 ( Revision: 402933ef52cad9aa82624e80acbea46e3a701ce6 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
    - overriding [org.hibernate.id.enhanced.SequenceStyleGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: sw.entity.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity sw.entity.User on table t_user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=email, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(t_user), mappingColumn=tel, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property tel with lazy=false
Attempting to locate auto-apply AttributeConverter for property [sw.entity.User:tel]
building SimpleValue for tel
Building property tel
Starting fillSimpleValue for id
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for tel
Forcing column [id] to be non-null as it is part of the primary key for table [t_user]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@43373890
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Returning a Reference to the SessionFactory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\LR\AppData\Local\Temp\tomcat.8660194999733681873.8080, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=false, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_121-b13, user.name=LR, javax.persistence.validation.mode=AUTO, user.language=zh, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin, PID=11324, java.version=1.8.0_121, user.timezone=Asia/Shanghai, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=CN, java.home=C:\Program Files\Java\jdk1.8.0_121\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@41670e2c, hibernate.connection.datasource=org.apache.tomcat.jdbc.pool.DataSource@2cd38981{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=100; maxIdle=100; minIdle=10; initialSize=10; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=60000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://127.0.0.1:3306/test; username=root; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=3000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, path.separator=;, java.vm.version=25.121-b13, org.jboss.logging.provider=slf4j, user.variant=, hibernate.id.new_generator_mappings=false, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, user.home=C:\Users\LR, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_121\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\MATLAB\R2016b\runtime\win64;D:\Program Files\MATLAB\R2016b\bin;D:\Program Files\MATLAB\R2016b\polyspace\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_144\bin;D:\apache-jena-3.4.0\bat;C:\Program Files\apache-maven-3.5.2\bin;C:\Users\LR\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, spring.beaninfo.ignore=true, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=sw.Application, java.class.path=E:\Workspaces\Myeclipse 2015\sw\target\classes;C:\Users\LR\.m2\repository\org\projectlombok\lombok\1.16.12\lombok-1.16.12.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\1.5.1.RELEASE\spring-boot-starter-thymeleaf-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter\1.5.1.RELEASE\spring-boot-starter-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-logging\1.5.1.RELEASE\spring-boot-starter-logging-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-classic\1.1.9\logback-classic-1.1.9.jar;C:\Users\LR\.m2\repository\ch\qos\logback\logback-core\1.1.9\logback-core-1.1.9.jar;C:\Users\LR\.m2\repository\org\slf4j\jul-to-slf4j\1.7.22\jul-to-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.22\log4j-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\yaml\snakeyaml\1.17\snakeyaml-1.17.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-web\1.5.1.RELEASE\spring-boot-starter-web-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\1.5.1.RELEASE\spring-boot-starter-tomcat-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.11\tomcat-embed-core-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.11\tomcat-embed-el-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.11\tomcat-embed-websocket-8.5.11.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-validator\5.3.4.Final\hibernate-validator-5.3.4.Final.jar;C:\Users\LR\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\LR\.m2\repository\com\fasterxml\classmate\1.3.3\classmate-1.3.3.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.8.6\jackson-databind-2.8.6.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.8.0\jackson-annotations-2.8.0.jar;C:\Users\LR\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.8.6\jackson-core-2.8.6.jar;C:\Users\LR\.m2\repository\org\springframework\spring-web\4.3.6.RELEASE\spring-web-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-webmvc\4.3.6.RELEASE\spring-webmvc-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-expression\4.3.6.RELEASE\spring-expression-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf-spring4\2.1.5.RELEASE\thymeleaf-spring4-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\org\thymeleaf\thymeleaf\2.1.5.RELEASE\thymeleaf-2.1.5.RELEASE.jar;C:\Users\LR\.m2\repository\ognl\ognl\3.0.8\ognl-3.0.8.jar;C:\Users\LR\.m2\repository\org\unbescape\unbescape\1.1.0.RELEASE\unbescape-1.1.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\slf4j-api\1.7.22\slf4j-api-1.7.22.jar;C:\Users\LR\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\1.4.0\thymeleaf-layout-dialect-1.4.0.jar;C:\Users\LR\.m2\repository\org\codehaus\groovy\groovy\2.4.7\groovy-2.4.7.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-devtools\1.5.1.RELEASE\spring-boot-devtools-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot\1.5.1.RELEASE\spring-boot-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-context\4.3.6.RELEASE\spring-context-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\1.5.1.RELEASE\spring-boot-autoconfigure-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-core\4.3.6.RELEASE\spring-core-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\1.5.1.RELEASE\spring-boot-starter-data-jpa-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-aop\1.5.1.RELEASE\spring-boot-starter-aop-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aop\4.3.6.RELEASE\spring-aop-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-core\5.0.11.Final\hibernate-core-5.0.11.Final.jar;C:\Users\LR\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\LR\.m2\repository\org\javassist\javassist\3.21.0-GA\javassist-3.21.0-GA.jar;C:\Users\LR\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\LR\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\LR\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\LR\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\LR\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.11.Final\hibernate-entitymanager-5.0.11.Final.jar;C:\Users\LR\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-jpa\1.11.0.RELEASE\spring-data-jpa-1.11.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\data\spring-data-commons\1.13.0.RELEASE\spring-data-commons-1.13.0.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-orm\4.3.6.RELEASE\spring-orm-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-tx\4.3.6.RELEASE\spring-tx-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\springframework\spring-beans\4.3.6.RELEASE\spring-beans-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.22\jcl-over-slf4j-1.7.22.jar;C:\Users\LR\.m2\repository\org\springframework\spring-aspects\4.3.6.RELEASE\spring-aspects-4.3.6.RELEASE.jar;C:\Users\LR\.m2\repository\mysql\mysql-connector-java\5.1.40\mysql-connector-java-5.1.40.jar;C:\Users\LR\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\1.5.1.RELEASE\spring-boot-starter-jdbc-1.5.1.RELEASE.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.5.11\tomcat-jdbc-8.5.11.jar;C:\Users\LR\.m2\repository\org\apache\tomcat\tomcat-juli\8.5.11\tomcat-juli-8.5.11.jar;C:\Users\LR\.m2\repository\org\springframework\spring-jdbc\4.3.6.RELEASE\spring-jdbc-4.3.6.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=C:\Users\LR\AppData\Local\Temp\tomcat.8660194999733681873.8080, sun.cpu.endian=little, sun.os.patch.level=, java.awt.headless=true, java.io.tmpdir=C:\Users\LR\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=E:\Workspaces\Myeclipse 2015\sw, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4078c095, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST_SKIPLAZY]
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Not known whether passed class name [sw.entity.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : sw.entity.User
Static SQL for entity: sw.entity.User
 Version select: select id from t_user where id =?
 Snapshot select: select user_.id, user_.email as email2_0_, user_.name as name3_0_, user_.tel as tel4_0_ from t_user user_ where user_.id=?
 Insert 0: insert into t_user (email, name, tel, id) values (?, ?, ?, ?)
 Update 0: update t_user set email=?, name=?, tel=? where id=?
 Delete 0: delete from t_user where id=?
 Identity insert: insert into t_user (email, name, tel) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@769fce56]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bdf2e7c]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a0bd866]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be9e5ee]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f839e3e]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec0194f]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [FORCE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b46ed8d]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d73471a]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e377c1]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba0f5e9]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121d5be8]
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : tel
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=sw.entity.User)
    - Returns
       - EntityReturnImpl(entity=sw.entity.User, querySpaceUid=<gen:0>, path=sw.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=sw.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity sw.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity sw.entity.User: select user0_.id as id1_0_0_, user0_.email as email2_0_0_, user0_.name as name3_0_0_, user0_.tel as tel4_0_0_ from t_user user0_ where user0_.id=?
Instantiated session factory
HHH000227: Running hbm2ddl schema export
Import file not found: /import.sql
drop table if exists t_user
create table t_user (id integer not null auto_increment, email varchar(255) not null, name varchar(255) not null, tel varchar(255), primary key (id))
HHH000230: Schema export complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: cce08947-fed4-45d2-a633-1999497bd2f4 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
No actions specified; doing nothing
Registering EntityManagerFactory: default 
Initialized JPA EntityManagerFactory for persistence unit 'default'
Statistics initialized [enabled=false]
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mark transaction for rollback
Mapped "{[/commons/captcha.jpg]}" onto public void sw.controller.CommonsController.captcha(javax.servlet.http.HttpServletResponse) throws java.io.IOException
Mapped "{[/],methods=[GET]}" onto public java.lang.String sw.controller.UserController.showHomePage()
Mapped "{[/login],methods=[POST]}" onto public java.lang.String sw.controller.UserController.login(sw.entity.User,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/templates/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy46
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@10c6c0dc: startup date [Sat Nov 04 23:03:56 CST 2017]; root of context hierarchy
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler [http-nio-8080]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started Application in 1.554 seconds (JVM running for 184.012)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 2 ms
Request method 'GET' not supported
------:跳转到login页面！
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
No mapping found for HTTP request with URI [/riskAssessment/images/logo.jpg] in DispatcherServlet with name 'dispatcherServlet'
------:跳转到login页面！
